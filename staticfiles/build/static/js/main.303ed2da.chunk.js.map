{"version":3,"sources":["styles/Button.module.css","api/axiosDefaults.js","utils/dataUtils.js","contexts/CurrentUserContext.js","components/Avatar.js","components/NavBar.js","contexts/SpotifyPlayerUriContext.js","spotify/SpotifyPlayer.js","components/AccordionWindow.js","hooks/useRedirect.js","pages/Homepage.js","pages/auth/SignUpForm.js","pages/auth/SignInForm.js","components/Playlist.js","components/LoadingSpinner.js","components/SearchBar.js","pages/PlaylistsPage.js","components/ModalWindow.js","components/SignOutButton.js","components/Profile.js","pages/ProfilePage.js","forms/ProfileEditForm.js","components/StarRating.js","pages/PlaylistDetail.js","forms/PlaylistEditForm.js","utils/spotifyAuthUtils.js","spotify/useSpotifyAuth.js","spotify/AddPlaylistButton.js","spotify/SpotifySearchPage.js","forms/FeedbackCreateForm.js","assets/waveform.png","pages/PageNotFound404.js","App.js","reportWebVitals.js","index.js","styles/Profile.module.css","styles/EditCreateForms.module.css","styles/NavBar.module.css","styles/SignInUpForm.module.css","App.module.css","styles/LoadingSpinner.module.css","styles/AccordionWindow.module.css","styles/Homepage.module.css","styles/PlaylistDetail.module.css","styles/SearchBar.module.css","styles/PlaylistsPage.module.css","styles/SpotifySearchPage.module.css","styles/ModalWindow.module.css","styles/Avatar.module.css","styles/Playlist.module.css","styles/SignOutButton.module.css"],"names":["module","exports","axios","defaults","baseURL","headers","post","withCredentials","axiosReq","create","axiosRes","fetchMoreData","async","resource","setResource","data","get","next","prevResource","results","reduce","acc","curr","some","accResult","id","err","removeLocalStorageItems","localStorage","removeItem","calculateAverageRatingPUT","prevState","rating","selectedValue","average_rating","ratings_count","calculateAverageRatingPOST","CurrentUserContext","createContext","SetCurrentUserContext","useCurrentUser","useContext","useSetCurrentUser","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","useState","history","useHistory","useEffect","handleMount","useMemo","interceptors","request","use","getItem","prevCurrentUser","push","config","Promise","reject","response","_err$response","status","_jsx","Provider","value","Avatar","src","height","className","styles","width","alt","concat","username","NavBar","loggedOutIcons","_jsxs","_Fragment","OverlayTrigger","placement","overlay","Tooltip","Navbar","Brand","href","Nav","SignInOut","NavLink","SignUpIn","activeClassName","Active","to","FontAwesomeIcon","MarginRight","icon","faRightToBracket","size","faUserPlus","loggedInIcons","faGlobe","faPeopleGroup","ProfileActive","profile_id","profile_image","faStar","faSpotify","style","color","navBarPosition","expand","fixed","Container","SpotifyPlayerUriContext","SetSpotifyPlayerUriContext","useSpotifyPlayerUri","useSetSpotifyPlayerUri","SpotifyPlayerUriProvider","spotifyPlayerUri","setSpotifyPlayerUri","SpotifyPlayer","playerRef","useRef","embedController","setEmbedController","script","document","createElement","body","appendChild","window","onSpotifyIframeApiReady","IFrameAPI","options","uri","createController","current","EmbedController","loadUri","ref","AccordionWindow","activeKey","setActiveKey","showPlayer","setShowPlayer","Accordion","onSelect","handleToggle","AccordionPosition","Hidden","Card","Header","Toggle","as","Button","variant","eventKey","PaddingReset","faCaretDown","faCaretUp","Collapse","Body","useRedirect","userAuthStatus","authPages","includes","location","pathname","homepage","Homepage","Row","Col","xs","TitleContainer","Title","Line","SecondLine","IntroContainer","SignUpForm","_errors$username","_errors$password","_errors$password2","_errors$non_field_err","signUpData","setSignUpData","password1","password2","errors","setErrors","handleChange","event","target","name","appStyles","Content","Form","onSubmit","preventDefault","Group","controlId","Label","Control","Input","type","placeholder","onChange","map","message","idx","Alert","btnStyles","non_field_errors","Link","SignInForm","signInData","setSignInData","password","user","refreshTokenTimestamp","jwtDecode","refresh_token","exp","setItem","setTokenTimestamp","Playlist","image","title","Image","LoadingSpinner","faCompactDisc","spin","SearchBar","onSearch","liveSearch","searchQuery","setSearchQuery","items","setItems","showDropdown","setShowDropdown","hasLoaded","setHasLoaded","dropdownResults","DropdownMenu","length","InfiniteScroll","dataLength","loader","hasMore","profile","DropdownItem","onClick","owner","e","marginBottom","InputGroup","currentQuery","fetchItems","Append","faMagnifyingGlass","PlaylistsPage","filter","profileView","pageName","playlists","setPlaylists","source","CancelToken","cancelToken","token","isCancel","fetchPlaylists","cancel","ProfileContainer","HighlightedContainer","playlist","md","displayWhyNoPlaylistsMessage","loadingStyles","Centered","ModalWindow","onHide","onConfirm","show","Modal","centered","closeButton","Color","Footer","SignOutButton","modalShow","setModalShow","TransparentButton","faPowerOff","Profile","userId","profileData","setProfileData","isFollowing","setIsFollowing","smallScreen","setSmallScreen","innerWidth","checkScreenSize","addEventListener","removeEventListener","following_id","fetchProfileData","followButton","followed","followers_count","handleFollow","emptyStar","ProfileBottomRightIcon","unfollowButton","delete","handleUnfollow","editButton","faPen","feedbackButton","faCommentDots","ProfileTopRightIcon","smallScreenStatsContainer","StatsRow","StatsItem","playlists_count","following_count","largeScreenStatsContainer","backgroundImage","background","faBackward","goBack","is_owner","SmallText","AvatarStatsContainer","AlignItemsCenter","AvatarContainer","ProfilePage","useParams","ProfileEditForm","_errors$image","_errors$background","profileImageInput","backgroundImageInput","_profileImageInput$cu","_backgroundImageInput","formData","FormData","files","append","put","_err$response2","FormGroup","htmlFor","File","TextAlignLast","accept","StarRating","setPlaylist","setRating","showAlert","setShowAlert","rating_id","score","fetchRatingData","myStyles","itemShapes","StickerStar","activeFillColor","inactiveFillColor","Rating","owner_rating","maxWidth","margin","itemStyles","onClose","dismissible","fontSize","PlaylistDetail","fetchPlaylist","averageRatingStyles","ownerRatingStyles","itemStrokeWidth","activeStrokeColor","inactiveStrokeColor","displayOwnerAndRating","textAlign","readOnly","minWidth","displayJustOwner","owner_id","RowPadding","updateSpotifyPlayerUri","iframe_uri","ScreenSizeContidionalPadding","description","WordBreak","redirectToEdit","PlaylistEditForm","_errors$title","_errors$description","playlistData","setPlaylistData","spotify_id","url","FormControl","rows","MarginLeftRight","faTrashCan","_err$response3","clientId","codeVerifier","possible","crypto","getRandomValues","Uint8Array","x","generateRandomString","getCodeChallenge","hashed","TextEncoder","encode","plain","subtle","digest","sha256","input","btoa","String","fromCharCode","replace","redirectUri","useSpotifyAuth","code","URLSearchParams","search","payload","method","client_id","grant_type","redirect_uri","code_verifier","fetch","json","access_token","getToken","handleAuthentication","authUrl","URL","codeChallenge","params","response_type","scope","code_challenge_method","code_challenge","toString","spotifyAuthentication","AddPlaylistButton","_playlist$images$2","_playlist$images$","images","external_urls","spotify","error","_error$response","SpotifySearchPage","searchResults","setSearchResults","lastSearch","JSON","parse","delay","setTimeout","clearTimeout","controller","AbortController","signal","_data$albums","_data$playlists","_data$artists","refreshToken","getRefreshToken","Authorization","combinedData","albums","artists","stringify","abort","result","_result$images$","MarginBottom","Margin","FeedbackCreateForm","_errors$feedback","feedbackData","setfeedbackData","feedback","imageFile","showSuccess","setShowSuccess","warmWelcome","textFields","OverflowHidden","_imageFile$current","_imageFile$current2","createObjectURL","PageNotFound404","padding","overflow","faFaceDizzy","waveform","App","Switch","Route","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","Router","getElementById"],"mappings":"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","file":"static/js/main.303ed2da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__27i9m\",\"PaddingReset\":\"Button_PaddingReset__3EaQQ\",\"MarginLeftRight\":\"Button_MarginLeftRight__1wbIa\",\"TransparentButton\":\"Button_TransparentButton__9gW-9\"};","// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport axios from 'axios';\n\naxios.defaults.baseURL = '/api';\naxios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\naxios.defaults.withCredentials = true;\n\nexport const axiosReq = axios.create();\nexport const axiosRes = axios.create();","// CREDIT: Code taken from Code Institute's 'Moments' walkthrough project\nimport { axiosReq } from '../api/axiosDefaults';\nimport jwtDecode from 'jwt-decode';\n\n/**\n * Fetches more data from a paginated API and updates the state of the resource.\n *\n * @param {Object} resource - resource to be updated\n * @param {Function} setResource - function to update the resource\n */\nexport const fetchMoreData = async (resource, setResource) => {\n  try {\n    const { data } = await axiosReq.get(resource.next);\n    setResource((prevResource) => ({\n      ...prevResource,\n      next: data.next,\n      results: data.results.reduce((acc, curr) => {\n        return acc.some((accResult) => accResult.id === curr.id)\n          ? acc\n          : [...acc, curr];\n      }, prevResource.results),\n    }));\n  } catch (err) {\n    // console.log(err);\n  }\n};\n\nexport const setTokenTimestamp = (data) => {\n  const refreshTokenTimestamp = jwtDecode(data?.refresh_token).exp;\n  localStorage.setItem('refreshTokenTimestamp', refreshTokenTimestamp);\n};\n\nexport const shouldRefreshToken = () => {\n  return !!localStorage.getItem('refreshTokenTimestamp');\n};\n\nexport const removeLocalStorageItems = () => {\n  localStorage.removeItem('refreshTokenTimestamp');\n  localStorage.removeItem('code');\n  localStorage.removeItem('code_verifier');\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('refresh_token');\n};\n\n// Used in StarRating.js to calculate the average rating and update the state\n// Considers the fact that an existing rating is being updated\nexport function calculateAverageRatingPUT(prevState, rating, selectedValue) {\n  return (\n    (prevState.average_rating * prevState.ratings_count -\n      rating +\n      selectedValue) /\n    prevState.ratings_count\n  );\n}\n\n// Used in StarRating.js to calculate the average rating and update the state\n// Considers the fact that a new rating is being added\nexport function calculateAverageRatingPOST(prevState, selectedValue) {\n  return (\n    (prevState.average_rating * prevState.ratings_count + selectedValue) /\n    (prevState.ratings_count + 1)\n  );\n}\n","// CREDIT: Code taken from Code Institute's 'Moments' walkthrough project\nimport React from 'react';\nimport { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport axios from 'axios';\nimport { axiosReq, axiosRes } from '../api/axiosDefaults';\nimport {\n  removeLocalStorageItems,\n  shouldRefreshToken,\n} from '../utils/dataUtils';\n\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  useMemo(() => {\n    axiosReq.interceptors.request.use(\n      async (config) => {\n        if (shouldRefreshToken()) {\n          try {\n            await axios.post('/dj-rest-auth/token/refresh/');\n          } catch (err) {\n            // console.log(err.request);\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                history.push('/signin');\n              }\n              return null;\n            });\n            removeLocalStorageItems();\n            return config;\n          }\n        }\n        return config;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n\n    axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err?.response?.status === 401) {\n          try {\n            await axios.post('/dj-rest-auth/token/refresh/');\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                history.push('/signin');\n              }\n              return null;\n            });\n            removeLocalStorageItems();\n          }\n          return axios(err.config);\n        }\n        return Promise.reject(err);\n      }\n    );\n  }, [history]);\n\n  const handleMount = async () => {\n    try {\n      const { data } = await axiosRes.get('dj-rest-auth/user/');\n      setCurrentUser(data);\n    } catch (err) {\n      // console.log(err.request);\n    }\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n","import React from 'react';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport styles from '../styles/Avatar.module.css';\n\nconst Avatar = ({ src, height = 45 }) => {\n  const currentUser = useCurrentUser();\n  return (\n    <span>\n      <img\n        className={styles.Avatar}\n        src={src}\n        height={height}\n        width={height}\n        alt={`${currentUser?.username}' avatar`}\n      />\n    </span>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport Avatar from './Avatar';\n\nimport Container from 'react-bootstrap/Container';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpotify } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faStar,\n  faPeopleGroup,\n  faUserPlus,\n  faRightToBracket,\n  faGlobe,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport styles from '../styles/NavBar.module.css';\n\nconst NavBar = () => {\n  const currentUser = useCurrentUser();\n\n  const loggedOutIcons = (\n    <>\n      {/* Brand logo */}\n      <OverlayTrigger\n        placement='bottom'\n        overlay={<Tooltip id='feedback-tooltip'>Home</Tooltip>}\n      >\n        <Navbar.Brand className={styles.Brand} href='/'>\n          We -R- Music\n        </Navbar.Brand>\n      </OverlayTrigger>\n\n      <Nav className={styles.SignInOut}>\n        {/* Login button */}\n        <OverlayTrigger\n          placement='bottom'\n          overlay={<Tooltip id='feedback-tooltip'>Click to Login</Tooltip>}\n        >\n          <NavLink\n            className={styles.SignUpIn}\n            activeClassName={styles.Active}\n            to='/signin'\n          >\n            <FontAwesomeIcon\n              className={styles.MarginRight}\n              icon={faRightToBracket}\n              size='2xl'\n            />\n            Login\n          </NavLink>\n        </OverlayTrigger>\n\n        {/* Signup button */}\n        <OverlayTrigger\n          placement='bottom'\n          overlay={<Tooltip id='feedback-tooltip'>Click to sign up!</Tooltip>}\n        >\n          <NavLink\n            className={styles.SignUpIn}\n            activeClassName={styles.Active}\n            to='/signup'\n          >\n            <FontAwesomeIcon\n              className={styles.MarginRight}\n              icon={faUserPlus}\n              size='2xl'\n            />\n            Sign Up!\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n    </>\n  );\n  const loggedInIcons = (\n    <>\n      {/* All playlists */}\n      <Nav className='mr-auto'>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='feedback-tooltip'>All playlists</Tooltip>}\n        >\n          <NavLink activeClassName={styles.Active} to='/global'>\n            <FontAwesomeIcon icon={faGlobe} size='2xl' />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n\n      {/* Followed user playlists */}\n      <Nav className='mr-auto'>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='feedback-tooltip'>Followed user feed</Tooltip>}\n        >\n          <NavLink activeClassName={styles.Active} to='/feed'>\n            <FontAwesomeIcon icon={faPeopleGroup} size='2xl' />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n\n      {/* User's profile */}\n      <Nav>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='feedback-tooltip'>Your profile</Tooltip>}\n        >\n          <NavLink\n            activeClassName={styles.ProfileActive}\n            to={`/profile/${currentUser?.profile_id}`}\n          >\n            <Avatar src={currentUser?.profile_image} height={40} />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n\n      {/* User's rated playlists */}\n      <Nav className='ml-auto'>\n        <OverlayTrigger\n          placement='top'\n          overlay={\n            <Tooltip id='feedback-tooltip'>Playlists you&apos;ve rated</Tooltip>\n          }\n        >\n          <NavLink activeClassName={styles.Active} to='/rated-playlists'>\n            <FontAwesomeIcon icon={faStar} size='2xl' />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n\n      {/* Spotify search page */}\n      <Nav className='ml-auto'>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='feedback-tooltip'>Search Spotify</Tooltip>}\n        >\n          <NavLink to='/spotify-search'>\n            <FontAwesomeIcon\n              icon={faSpotify}\n              style={{ color: '#1db954' }}\n              size='2xl'\n            />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n    </>\n  );\n\n  const navBarPosition = currentUser ? 'bottom' : 'top';\n\n  return (\n    <Navbar className={styles.NavBar} expand='md' fixed={navBarPosition}>\n      <Container>{currentUser ? loggedInIcons : loggedOutIcons}</Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { createContext, useContext, useState } from 'react';\n\nexport const SpotifyPlayerUriContext = createContext();\nexport const SetSpotifyPlayerUriContext = createContext();\n\nexport const useSpotifyPlayerUri = () => useContext(SpotifyPlayerUriContext);\nexport const useSetSpotifyPlayerUri = () =>\n  useContext(SetSpotifyPlayerUriContext);\n\nexport const SpotifyPlayerUriProvider = ({ children }) => {\n  const [spotifyPlayerUri, setSpotifyPlayerUri] = useState('');\n\n  return (\n    <SpotifyPlayerUriContext.Provider value={spotifyPlayerUri}>\n      <SetSpotifyPlayerUriContext.Provider value={setSpotifyPlayerUri}>\n        {children}\n      </SetSpotifyPlayerUriContext.Provider>\n    </SpotifyPlayerUriContext.Provider>\n  );\n};\n","// SOURCE: https://developer.spotify.com/documentation/embeds/tutorials/using-the-iframe-api\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\n\nfunction SpotifyPlayer() {\n  const playerRef = useRef();\n  const spotifyPlayerUri = useSpotifyPlayerUri();\n  const [embedController, setEmbedController] = useState(null);\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://open.spotify.com/embed/iframe-api/v1';\n    script.async = true;\n    document.body.appendChild(script);\n\n    window.onSpotifyIframeApiReady = (IFrameAPI) => {\n      const options = {\n        width: '100%',\n        height: '352px', // 352px is the minimum height before the player resizes to a smaller size\n        uri: spotifyPlayerUri,\n      };\n\n      const callback = (EmbedController) => {\n        setEmbedController(EmbedController);\n      };\n\n      IFrameAPI.createController(playerRef.current, options, callback);\n    };\n  }, [spotifyPlayerUri]);\n\n  useEffect(() => {\n    if (embedController) {\n      embedController.loadUri(spotifyPlayerUri);\n    }\n  }, [spotifyPlayerUri, embedController]);\n\n  return <div ref={playerRef}></div>;\n}\n\nexport default SpotifyPlayer;\n","import React, { useEffect, useState } from 'react';\n\nimport { useSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\nimport SpotifyPlayer from '../spotify/SpotifyPlayer';\n\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from '../styles/AccordionWindow.module.css';\n\nfunction AccordionWindow() {\n  const spotifyPlayerUri = useSpotifyPlayerUri();\n  const [activeKey, setActiveKey] = useState('');\n  const [showPlayer, setShowPlayer] = useState(false);\n\n  useEffect(() => {\n    if (spotifyPlayerUri) {\n      setActiveKey('0');\n      setShowPlayer(true);\n    }\n  }, [spotifyPlayerUri]);\n\n  const handleToggle = () => {\n    if (activeKey === '0') {\n      setActiveKey('');\n    } else {\n      setActiveKey('0');\n    }\n  };\n\n  return (\n    <Accordion\n      activeKey={activeKey}\n      onSelect={handleToggle}\n      className={`${styles.AccordionPosition} ${\n        showPlayer ? '' : styles.Hidden\n      }`}\n    >\n      <Card className={styles.Card}>\n        <Card.Header className={styles.Header}>\n          <Accordion.Toggle\n            as={Button}\n            variant='link'\n            eventKey='0'\n            className={styles.PaddingReset}\n          >\n            <FontAwesomeIcon icon={activeKey ? faCaretDown : faCaretUp} />\n          </Accordion.Toggle>\n        </Card.Header>\n        <Accordion.Collapse eventKey='0'>\n          <Card.Body className={styles.PaddingReset}>\n            <SpotifyPlayer />\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  );\n}\n\nexport default AccordionWindow;\n","import { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport axios from 'axios';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\n/**\n * useRedirect hook: redirects users based on their logged in status\n */\nexport const useRedirect = () => {\n  const history = useHistory();\n  const currentUser = useCurrentUser();\n  const userAuthStatus = currentUser ? 'loggedIn' : 'loggedOut';\n  const authPages = ['/signin', '/signup'].includes(history.location.pathname);\n  const homepage = ['/'].includes(history.location.pathname);\n\n  useEffect(() => {\n    const handleMount = async () => {\n      // if user is logged in and on signin/signup page, redirect to profile page\n      if (authPages || homepage) {\n        if (userAuthStatus === 'loggedIn') {\n          history.push(`/profile/${currentUser.profile_id}`);\n          return;\n        }\n        if (userAuthStatus === 'loggedOut') {\n          return;\n        }\n      }\n      try {\n        await axios.post('/dj-rest-auth/token/refresh/');\n        // if userAuthStatus is logged in, do nothing\n        if (userAuthStatus === 'loggedIn') {\n          return;\n        }\n      } catch (err) {\n        // if user is not logged in, redirect to home/welcome page\n        if (userAuthStatus === 'loggedOut') {\n          history.push('/');\n        }\n      }\n    };\n\n    handleMount();\n  }, [history, userAuthStatus, currentUser, authPages, homepage]);\n};\n","import React from 'react';\nimport { useRedirect } from '../hooks/useRedirect';\n\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport styles from '../styles/Homepage.module.css';\n\nconst Homepage = () => {\n  useRedirect();\n  return (\n    <Container className={styles.Container}>\n      <Row>\n        <Col xs={7}></Col>\n        <Col xs={5} className={styles.TitleContainer}>\n          <h1 className={styles.Title}>We Rate Music</h1>\n          <hr className={styles.Line} />\n          <hr className={styles.SecondLine} />\n          <Row>\n            <Col className={styles.IntroContainer}>\n              <p>\n                Welcome to We Rate Music! The place to rate and review your\n                favorite music.\n              </p>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default Homepage;\n","// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport axios from 'axios';\nimport { useRedirect } from '../../hooks/useRedirect';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\n\nimport styles from '../../styles/SignInUpForm.module.css';\nimport btnStyles from '../../styles/Button.module.css';\nimport appStyles from '../../App.module.css';\n\nconst SignUpForm = () => {\n  useRedirect();\n  const [signUpData, setSignUpData] = useState({\n    username: '',\n    password1: '',\n    password2: '',\n  });\n  const { username, password1, password2 } = signUpData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    setSignUpData({\n      ...signUpData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axios.post('/dj-rest-auth/registration/', signUpData);\n      history.push('/signin');\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <Container>\n      <Row className={styles.Row}>\n        <Col className='my-auto py-2 p-md-2'>\n          <Container className={`${appStyles.Content} p-4 `}>\n            <h1 className={styles.Header}>sign up</h1>\n\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId='username'>\n                <Form.Label className='d-none'>username</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='text'\n                  placeholder='Username'\n                  name='username'\n                  value={username}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.username?.map((message, idx) => (\n                <Alert variant='warning' key={idx}>\n                  {message}\n                </Alert>\n              ))}\n\n              <Form.Group controlId='password1'>\n                <Form.Label className='d-none'>Password</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='password'\n                  placeholder='Password'\n                  name='password1'\n                  value={password1}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.password1?.map((message, idx) => (\n                <Alert key={idx} variant='warning'>\n                  {message}\n                </Alert>\n              ))}\n\n              <Form.Group controlId='password2'>\n                <Form.Label className='d-none'>Confirm password</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='password'\n                  placeholder='Confirm password'\n                  name='password2'\n                  value={password2}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.password2?.map((message, idx) => (\n                <Alert key={idx} variant='warning'>\n                  {message}\n                </Alert>\n              ))}\n\n              <Button className={btnStyles.Button} type='submit'>\n                Sign up\n              </Button>\n              {errors.non_field_errors?.map((message, idx) => (\n                <Alert key={idx} variant='warning' className='mt-3'>\n                  {message}\n                </Alert>\n              ))}\n            </Form>\n          </Container>\n\n          <Container className={`mt-3 ${appStyles.Content}`}>\n            <Link className={styles.Link} to='/signin'>\n              Already have an account? <span>Sign in</span>\n            </Link>\n          </Container>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SignUpForm;\n","// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport axios from 'axios';\nimport { setTokenTimestamp } from '../../utils/dataUtils';\n\nimport { useSetCurrentUser } from '../../contexts/CurrentUserContext';\nimport { useRedirect } from '../../hooks/useRedirect';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\n\nimport styles from '../../styles/SignInUpForm.module.css';\nimport btnStyles from '../../styles/Button.module.css';\nimport appStyles from '../../App.module.css';\n\nfunction SignInForm() {\n  const setCurrentUser = useSetCurrentUser();\n  useRedirect();\n\n  const [signInData, setSignInData] = useState({\n    username: '',\n    password: '',\n  });\n  const { username, password } = signInData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await axios.post('/dj-rest-auth/login/', signInData);\n      setCurrentUser(data.user);\n      setTokenTimestamp(data);\n      history.push(`/profile/${data.user.profile_id}`);\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n\n  const handleChange = (event) => {\n    setSignInData({\n      ...signInData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <Container>\n      <Row className={styles.Row}>\n        <Col className='my-auto py-2 p-md-2'>\n          <Container className={`${appStyles.Content} p-4`}>\n            <h1 className={styles.Header}>sign in</h1>\n\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId='username'>\n                <Form.Label className='d-none'>Username</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='text'\n                  placeholder='Username'\n                  name='username'\n                  value={username}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.username?.map((message, idx) => (\n                <Alert key={idx} variant='warning'>\n                  {message}\n                </Alert>\n              ))}\n\n              <Form.Group controlId='password'>\n                <Form.Label className='d-none'>Password</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='password'\n                  placeholder='Password'\n                  name='password'\n                  value={password}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.password?.map((message, idx) => (\n                <Alert key={idx} variant='warning'>\n                  {message}\n                </Alert>\n              ))}\n\n              <Button className={btnStyles.Button} type='submit'>\n                Sign in\n              </Button>\n              {errors.non_field_errors?.map((message, idx) => (\n                <Alert key={idx} variant='warning' className='mt-3'>\n                  {message}\n                </Alert>\n              ))}\n            </Form>\n          </Container>\n\n          <Container className={`mt-3 ${appStyles.Content}`}>\n            <Link className={styles.Link} to='/signup'>\n              Don&apos;t have an account? <span>Sign up now!</span>\n            </Link>\n          </Container>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default SignInForm;\n","import React from 'react';\nimport styles from '../styles/Playlist.module.css';\n\n// Set default image if no image is provided\nconst defaultImage =\n  'https://res.cloudinary.com/dxgzepuov/image/upload/v1702896303/default_post_uq5gxz.jpg';\n\n/**\n * Playlist component to display the image of a playlist. Default image is used if no image is provided.\n *\n * @param {string} image - The image URL of the playlist\n * @param {string} title - The title of the playlist\n */\nconst Playlist = ({ image, title }) => {\n  return (\n    <img\n      src={image || defaultImage}\n      className={styles.Image}\n      alt={`${title}'s cover art`}\n    />\n  );\n};\n\nexport default Playlist;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCompactDisc } from '@fortawesome/free-solid-svg-icons';\n\nconst LoadingSpinner = () => {\n  return (\n    <div>\n      <FontAwesomeIcon icon={faCompactDisc} size='2xl' spin />\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { axiosReq } from '../api/axiosDefaults';\nimport { fetchMoreData } from '../utils/dataUtils';\n\nimport Avatar from './Avatar';\nimport LoadingSpinner from './LoadingSpinner';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Row from 'react-bootstrap/Row';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from '../styles/SearchBar.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\nfunction SearchBar({ onSearch, liveSearch = false }) {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [items, setItems] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const history = useHistory();\n\n  const fetchItems = async () => {\n    try {\n      const { data } = await axiosReq.get(`profiles/?search=${searchQuery}`);\n      setItems(data);\n      setShowDropdown(true);\n      setHasLoaded(true);\n    } catch (err) {\n      // console.log(err.response?.data);\n    }\n  };\n\n  // This is function is disabled in the <Button> element, if liveSearch is truthy\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    onSearch(searchQuery);\n  };\n\n  const handleInputChange = async (e) => {\n    const currentQuery = e.target.value;\n    setSearchQuery(currentQuery);\n\n    if (currentQuery === '') {\n      setShowDropdown(false);\n      return;\n    }\n\n    if (liveSearch) {\n      await fetchItems();\n    }\n  };\n\n  const dropdownResults = hasLoaded ? (\n    <Container className={styles.DropdownMenu}>\n      {items?.results.length ? (\n        <InfiniteScroll\n          dataLength={items.results.length}\n          loader={<LoadingSpinner />}\n          hasMore={!!items.next}\n          next={() => fetchMoreData(items, setItems)}\n          className={styles.InfiniteScroll}\n        >\n          {items.results.map((profile) => (\n            <Row\n              key={profile.id}\n              className={styles.DropdownItem}\n              onClick={() => {\n                history.push(`/profile/${profile.id}`);\n              }}\n            >\n              <Avatar src={profile.image} height={75} />\n              <Col>{profile.owner}</Col>\n            </Row>\n          ))}\n        </InfiniteScroll>\n      ) : (\n        <Row className={styles.DropdownItem}>\n          <Col>No results found</Col>\n        </Row>\n      )}\n    </Container>\n  ) : (\n    <Container className={styles.DropdownMenu}>\n      <LoadingSpinner />\n    </Container>\n  );\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId='searchForm' style={{ marginBottom: '0' }}>\n          <InputGroup>\n            <Form.Control\n              type='text'\n              placeholder={liveSearch ? 'Search for users' : 'Search Spotify'}\n              onChange={handleInputChange}\n              value={searchQuery}\n            />\n            <InputGroup.Append>\n              {liveSearch ? null : (\n                <Button type='submit' className={btnStyles.Button}>\n                  <FontAwesomeIcon\n                    icon={faMagnifyingGlass}\n                    style={{ color: '#3d3d3d' }}\n                    size='lg'\n                  />\n                </Button>\n              )}\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Form>\n      {liveSearch && showDropdown && dropdownResults}\n    </>\n  );\n}\n\nexport default SearchBar;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport axios from 'axios';\nimport { axiosReq } from '../api/axiosDefaults';\nimport { useRedirect } from '../hooks/useRedirect';\nimport { fetchMoreData } from '../utils/dataUtils';\n\nimport Playlist from '../components/Playlist';\nimport SearchBar from '../components/SearchBar';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport styles from '../styles/PlaylistsPage.module.css';\nimport appStyles from '../App.module.css';\nimport loadingStyles from '../styles/LoadingSpinner.module.css';\n\nconst PlaylistsPage = ({ filter = '', profileView = false, pageName = '' }) => {\n  const [playlists, setPlaylists] = useState([]);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const history = useHistory();\n\n  useRedirect();\n\n  useEffect(() => {\n    // Sends a CancelToken with the request\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    const fetchPlaylists = async () => {\n      try {\n        const { data } = await axiosReq.get(`playlists/?${filter}`, {\n          cancelToken: source.token,\n        });\n        setPlaylists(data);\n        setHasLoaded(true);\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          // console.log('Request canceled', err.message);\n        } else if (err.response?.status === 404) {\n          history.push('/404-error-page');\n        } else {\n          // console.log(err.response?.data);\n        }\n      }\n    };\n\n    setHasLoaded(false);\n    fetchPlaylists();\n\n    // Cleanup\n    return () => {\n      source.cancel('Request canceled');\n    };\n  }, [filter, history]);\n\n  const displayWhyNoPlaylistsMessage = () => {\n    switch (pageName) {\n      case 'All Playlists':\n        return <p>No playlists found!</p>;\n      case 'Followed Users':\n        return <p>You aren&apos;t following any users yet...</p>;\n      case 'Your Rated Playlists':\n        return <p>You haven&apos;t rated any playlists yet...</p>;\n      default:\n        return <p>No playlists found!</p>;\n    }\n  };\n\n  return hasLoaded ? (\n    <Container\n      className={profileView ? styles.ProfileContainer : styles.Container}\n    >\n      {/* No SearchBar in pages with Profile.js component */}\n      {!profileView ? (\n        <>\n          <Row className={styles.HighlightedContainer}>\n            <Col>\n              <h2>{pageName}</h2>\n            </Col>\n          </Row>\n\n          {/* only show search bar in '/global' route */}\n          {!filter && <SearchBar liveSearch />}\n        </>\n      ) : null}\n\n      {playlists.results.length ? (\n        <Container>\n          <InfiniteScroll\n            dataLength={playlists.results.length}\n            loader={<LoadingSpinner />}\n            hasMore={!!playlists.next}\n            next={() => fetchMoreData(playlists, setPlaylists)}\n            className={styles.InfiniteScroll}\n          >\n            <Row>\n              {playlists.results.map((playlist) => (\n                <Col\n                  className={appStyles.PaddingReset}\n                  key={playlist.id}\n                  xs={4}\n                  md={3}\n                >\n                  <Button\n                    variant='link'\n                    onClick={() => history.push(`/playlist/${playlist.id}`)}\n                    className={styles.Button}\n                  >\n                    <Playlist image={playlist.image} title={playlist.title} />\n                  </Button>\n                </Col>\n              ))}\n            </Row>\n          </InfiniteScroll>\n        </Container>\n      ) : (\n        displayWhyNoPlaylistsMessage()\n      )}\n    </Container>\n  ) : (\n    <LoadingSpinner className={loadingStyles.Centered} />\n  );\n};\n\nexport default PlaylistsPage;\n","import React from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nimport styles from '../styles/ModalWindow.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\n/**\n * ModalWindow component renders a modal window.\n *\n * Must be used with the following props:\n * - show={modalShow}\n * - onHide={() => setModalShow(false)}\n * - onConfirm: custom function\n * - title: string\n * - body: JSX\n */\nfunction ModalWindow({ title, body, onHide, onConfirm, ...show }) {\n  return (\n    <Modal {...show} size='sm' aria-labelledby='confirmation modal' centered>\n      <Modal.Header className={styles.Header} closeButton>\n        <Modal.Title id='confirmation modal' className={styles.Color}>\n          {title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className={styles.Body}>{body}</Modal.Body>\n      <Modal.Footer className={styles.Footer}>\n        <Button onClick={onHide} className={btnStyles.Button}>\n          Close\n        </Button>\n        <Button onClick={onConfirm} className={btnStyles.Button}>\n          Confirm\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default ModalWindow;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport axios from 'axios';\nimport { removeLocalStorageItems } from '../utils/dataUtils';\n\nimport { useSetCurrentUser } from '../contexts/CurrentUserContext';\nimport ModalWindow from './ModalWindow';\n\nimport Button from 'react-bootstrap/Button';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPowerOff } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from '../styles/SignOutButton.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\nconst SignOutButton = () => {\n  const setCurrentUser = useSetCurrentUser();\n  const [modalShow, setModalShow] = useState(false);\n  const history = useHistory();\n\n  const handleSignOut = async () => {\n    try {\n      await axios.post('/dj-rest-auth/logout/');\n      setCurrentUser(null);\n      removeLocalStorageItems();\n      setModalShow(false);\n      history.push('/');\n    } catch (err) {\n      // console.log(err.response?.data);\n    }\n  };\n\n  return (\n    <>\n      <OverlayTrigger\n        placement='bottom'\n        overlay={<Tooltip id='sign-out-tooltip'>Sign Out</Tooltip>}\n      >\n        <Button\n          onClick={() => setModalShow(true)}\n          className={btnStyles.TransparentButton}\n        >\n          <FontAwesomeIcon\n            className={styles.FontAwesomeIcon}\n            icon={faPowerOff}\n            size='xl'\n          />\n        </Button>\n      </OverlayTrigger>\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleSignOut}\n        title='Sign out?'\n        body='Are you sure you want to sign out?'\n      />\n    </>\n  );\n};\n\nexport default SignOutButton;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { axiosReq, axiosRes } from '../api/axiosDefaults';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport Avatar from './Avatar';\nimport LoadingSpinner from './LoadingSpinner';\nimport SignOutButton from './SignOutButton';\n\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBackward,\n  faStar,\n  faPen,\n  faCommentDots,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faStar as emptyStar } from '@fortawesome/free-regular-svg-icons';\n\nimport styles from '../styles/Profile.module.css';\nimport btnStyles from '../styles/Button.module.css';\nimport loadingStyles from '../styles/LoadingSpinner.module.css';\n\nconst Profile = ({ userId }) => {\n  const currentUser = useCurrentUser();\n  const [profileData, setProfileData] = useState({});\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [smallScreen, setSmallScreen] = useState(window.innerWidth < 768);\n  const history = useHistory();\n\n  useEffect(() => {\n    const checkScreenSize = () => {\n      setSmallScreen(window.innerWidth < 768);\n    };\n\n    window.addEventListener('resize', checkScreenSize);\n\n    return () => {\n      window.removeEventListener('resize', checkScreenSize);\n    };\n  }, []);\n\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      try {\n        const { data } = await axiosReq.get(`profiles/${userId}`);\n        setProfileData(data);\n        setIsFollowing(data.following_id ? true : false);\n        setHasLoaded(true);\n      } catch (err) {\n        if (err.response?.status === 404) {\n          history.push('/404-error-page');\n        } else {\n          // console.log(err.response.data);\n        }\n      }\n    };\n\n    setHasLoaded(false);\n    fetchProfileData();\n  }, [userId, history]);\n\n  const handleFollow = async (profile) => {\n    try {\n      const { data } = await axiosRes.post('followers/', {\n        followed: profile.id,\n      });\n\n      setProfileData((prevState) => ({\n        ...prevState,\n        followers_count: prevState.followers_count + 1,\n        following_id: data.id,\n      }));\n\n      setIsFollowing(true);\n    } catch (err) {\n      // console.log(err.response.data);\n    }\n  };\n\n  const handleUnfollow = async (profile) => {\n    try {\n      await axiosRes.delete(`followers/${profile.following_id}`);\n\n      setProfileData((prevState) => ({\n        ...prevState,\n        followers_count: prevState.followers_count - 1,\n      }));\n\n      setIsFollowing(false);\n    } catch (err) {\n      // console.log(err.response.data);\n    }\n  };\n\n  const followButton = (\n    <OverlayTrigger\n      placement='bottom'\n      overlay={<Tooltip id='follow-tooltip'>Follow</Tooltip>}\n    >\n      <Button\n        className={btnStyles.TransparentButton}\n        onClick={() => handleFollow(profileData)}\n      >\n        <FontAwesomeIcon\n          icon={emptyStar}\n          size='xl'\n          className={styles.ProfileBottomRightIcon}\n        />\n      </Button>\n    </OverlayTrigger>\n  );\n\n  const unfollowButton = (\n    <OverlayTrigger\n      placement='bottom'\n      overlay={<Tooltip id='unfollow-tooltip'>Unfollow</Tooltip>}\n    >\n      <Button\n        className={btnStyles.TransparentButton}\n        onClick={() => handleUnfollow(profileData)}\n      >\n        <FontAwesomeIcon\n          icon={faStar}\n          size='xl'\n          className={styles.ProfileBottomRightIcon}\n        />\n      </Button>\n    </OverlayTrigger>\n  );\n\n  const editButton = (\n    <OverlayTrigger\n      placement='bottom'\n      overlay={<Tooltip id='edit-tooltip'>Edit</Tooltip>}\n    >\n      <Button\n        className={btnStyles.TransparentButton}\n        onClick={() => history.push(`/profile/${userId}/edit`)}\n      >\n        <FontAwesomeIcon\n          icon={faPen}\n          size='xl'\n          className={styles.ProfileBottomRightIcon}\n        />\n      </Button>\n    </OverlayTrigger>\n  );\n\n  const feedbackButton = (\n    <OverlayTrigger\n      placement='bottom'\n      overlay={<Tooltip id='feedback-tooltip'>Help us improve!</Tooltip>}\n    >\n      <Button\n        onClick={() => history.push('/feedback/create')}\n        className={btnStyles.TransparentButton}\n      >\n        <FontAwesomeIcon\n          icon={faCommentDots}\n          size='xl'\n          className={styles.ProfileTopRightIcon}\n        />\n      </Button>\n    </OverlayTrigger>\n  );\n\n  const smallScreenStatsContainer = (\n    <>\n      <Row className={styles.StatsRow}>\n        <p className={styles.StatsItem}>\n          Playlists: {profileData.playlists_count}\n        </p>\n      </Row>\n      <Row className={styles.StatsRow}>\n        <p className={styles.StatsItem}>\n          Followers: {profileData.followers_count}\n        </p>\n      </Row>\n      <Row className={styles.StatsRow}>\n        <p className={styles.StatsItem}>\n          Following: {profileData.following_count}\n        </p>\n      </Row>\n    </>\n  );\n\n  const largeScreenStatsContainer = (\n    <Row className={styles.StatsRow}>\n      <Col md={4} className='align-self-center'>\n        <h4 className='mb-0'>{profileData.playlists_count}</h4>\n        <p className={styles.StatsItem}>Playlists</p>\n      </Col>\n      <Col md={4} className='align-self-center'>\n        <h4 className='mb-0'>{profileData.followers_count}</h4>\n        <p className={styles.StatsItem}>Followers</p>\n      </Col>\n      <Col md={4} className='align-self-center'>\n        <h4 className='mb-0'>{profileData.following_count}</h4>\n        <p className={styles.StatsItem}>Following</p>\n      </Col>\n    </Row>\n  );\n\n  return hasLoaded ? (\n    // Profile data loaded\n    <Container\n      className={styles.ProfileContainer}\n      style={{ backgroundImage: `url(${profileData.background})` }}\n    >\n      {/* Header */}\n      <Container>\n        <Row>\n          {/* Back button */}\n          <Col xs={3}>\n            <OverlayTrigger\n              placement='bottom'\n              overlay={<Tooltip id='back-tooltip'>Back</Tooltip>}\n            >\n              <FontAwesomeIcon\n                icon={faBackward}\n                size='xl'\n                className={styles.FontAwesomeIcon}\n                onClick={() => history.goBack()}\n              />\n            </OverlayTrigger>\n          </Col>\n          <Col xs={6}>\n            <h2 className='mb-0'>{profileData.owner}</h2>\n            {profileData.is_owner && (\n              <em className={styles.SmallText}>You&apos;re logged in as:</em>\n            )}\n          </Col>\n          <Col xs={3}>\n            <SignOutButton />\n          </Col>\n        </Row>\n      </Container>\n\n      {/* Profile picture and stats */}\n      <Container className={styles.AvatarStatsContainer}>\n        <Row className={styles.AlignItemsCenter}>\n          <Col xs={3} className={styles.AvatarContainer}>\n            <Button\n              type='link'\n              className={btnStyles.TransparentButton}\n              onClick={() => history.push(`/profile/${profileData.id}`)}\n            >\n              <Avatar src={profileData.image} height={100} />\n            </Button>\n\n            {/* Follow/Unfollow button - if the current user is not the owner of the profile */}\n            {currentUser &&\n              !profileData?.is_owner &&\n              (isFollowing ? unfollowButton : !isFollowing && followButton)}\n\n            {/* Edit button - if the current user is the owner of the profile */}\n            {currentUser && profileData?.is_owner && editButton}\n\n            {/* Feedback button - if the current user is the owner of the profile */}\n            {currentUser && profileData?.is_owner && feedbackButton}\n          </Col>\n          <Col xs={9}>\n            {smallScreen\n              ? smallScreenStatsContainer\n              : largeScreenStatsContainer}\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  ) : (\n    // Profile data not yet loaded\n    <>\n      {/* Replicated container structure and styles */}\n      <Container className={styles.ProfileContainer}>\n        <Container>\n          <LoadingSpinner className={loadingStyles.Centered} />\n        </Container>\n        <Container className={styles.AvatarStatsContainer}>\n          <LoadingSpinner className={loadingStyles.Centered} />\n        </Container>\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { useRedirect } from '../hooks/useRedirect';\n\nimport PlaylistsPage from './PlaylistsPage';\nimport Profile from '../components/Profile';\n\nconst ProfilePage = () => {\n  const { userId } = useParams();\n  useRedirect();\n  return (\n    <>\n      <Profile userId={userId} />\n      <PlaylistsPage filter={`owner__profile=${userId}`} profileView />\n    </>\n  );\n};\n\nexport default ProfilePage;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { axiosReq } from '../api/axiosDefaults';\nimport Profile from '../components/Profile';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\n\nimport styles from '../styles/EditCreateForms.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\nfunction ProfileEditForm() {\n  const { userId } = useParams();\n  const history = useHistory();\n  const profileImageInput = useRef(null);\n  const backgroundImageInput = useRef(null);\n\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`profiles/${userId}`);\n        const { is_owner } = data;\n\n        if (!is_owner) {\n          history.push(`/profile/${userId}`);\n        }\n      } catch (err) {\n        // console.log(err.response?.data);\n      }\n    };\n    handleMount();\n  }, [history, userId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    if (profileImageInput?.current?.files[0]) {\n      formData.append('image', profileImageInput.current.files[0]);\n    }\n    if (backgroundImageInput?.current?.files[0]) {\n      formData.append('background', backgroundImageInput.current.files[0]);\n    }\n\n    try {\n      await axiosReq.put(`profiles/${userId}`, formData);\n      history.push(`/profile/${userId}`);\n    } catch (err) {\n      if (err.response?.status !== 401) {\n        setErrors(err.response?.data);\n      }\n      // console.log(err.response?.data);\n    }\n  };\n\n  return (\n    <>\n      <Profile userId={userId} />\n      <Form onSubmit={handleSubmit}>\n        <Container className={styles.Container}>\n          <Row className='justify-content-center'>\n            <Form.Group className={styles.FormGroup}>\n              <Col>\n                <Form.Label\n                  className={btnStyles.Button}\n                  htmlFor='profile-image-upload'\n                >\n                  Change profile image\n                </Form.Label>\n\n                <Form.File\n                  className={styles.TextAlignLast}\n                  id='profile-image-upload'\n                  accept='image/*'\n                  ref={profileImageInput}\n                />\n              </Col>\n            </Form.Group>\n          </Row>\n          {errors?.image?.map((message, idx) => (\n            <Alert variant='warning' key={idx}>\n              {message}\n            </Alert>\n          ))}\n          <br />\n          <Row className='justify-content-center'>\n            <Form.Group className={styles.FormGroup}>\n              <Col>\n                <Form.Label\n                  className={btnStyles.Button}\n                  htmlFor='background-image-upload'\n                >\n                  Change background image\n                </Form.Label>\n\n                <Form.File\n                  className={styles.TextAlignLast}\n                  id='background-image-upload'\n                  accept='image/*'\n                  ref={backgroundImageInput}\n                />\n              </Col>\n            </Form.Group>\n          </Row>\n          {errors?.background?.map((message, idx) => (\n            <Alert variant='warning' key={idx}>\n              {message}\n            </Alert>\n          ))}\n          <Button type='submit' className={btnStyles.Button}>\n            Save\n          </Button>\n        </Container>\n      </Form>\n    </>\n  );\n}\n\nexport default ProfileEditForm;\n","import React, { useEffect, useState } from 'react';\n\nimport { axiosReq, axiosRes } from '../api/axiosDefaults';\nimport {\n  calculateAverageRatingPUT,\n  calculateAverageRatingPOST,\n} from '../utils/dataUtils';\n\nimport { Rating, StickerStar } from '@smastrom/react-rating';\nimport Alert from 'react-bootstrap/Alert';\n\nconst StarRating = ({ playlist, setPlaylist }) => {\n  const [rating, setRating] = useState(0);\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  useEffect(() => {\n    const fetchRatingData = async () => {\n      if (playlist.rating_id) {\n        try {\n          const { data } = await axiosRes.get(`ratings/${playlist.rating_id}`);\n          setRating(data.score);\n        } catch (err) {\n          setErrors({\n            message: 'Error fetching rating data',\n          });\n        }\n        setShowAlert(true);\n      }\n    };\n    fetchRatingData();\n  }, [playlist]);\n\n  const handleChange = async (selectedValue) => {\n    // Clear any previous errors\n    setErrors({});\n\n    // If the user clicks the same rating, do nothing\n    // Clicking the same rating defaults selectedValue = 0\n    if (selectedValue === 0) {\n      return;\n    }\n\n    if (playlist.rating_id) {\n      try {\n        await axiosReq.put(`ratings/${playlist.rating_id}`, {\n          score: selectedValue,\n        });\n\n        setRating(selectedValue);\n        setPlaylist((prevState) => ({\n          ...prevState,\n          average_rating: calculateAverageRatingPUT(\n            prevState,\n            rating,\n            selectedValue\n          ),\n          // If the user is the owner of the playlist, update owner_rating state\n          ...(playlist.is_owner ? { owner_rating: selectedValue } : {}),\n        }));\n      } catch (err) {\n        setErrors({\n          message: 'Error updating rating, please try again.',\n        });\n        setShowAlert(true);\n      }\n    } else {\n      try {\n        const { data } = await axiosReq.post('ratings/', {\n          playlist: playlist.id,\n          score: selectedValue,\n        });\n\n        setRating(selectedValue);\n        setPlaylist((prevState) => ({\n          ...prevState,\n          rating_id: data.id,\n          ratings_count: prevState.ratings_count + 1,\n          average_rating: calculateAverageRatingPOST(prevState, selectedValue),\n          // If the user is the owner of the playlist, update owner_rating state\n          ...(playlist.is_owner ? { owner_rating: selectedValue } : {}),\n        }));\n      } catch (err) {\n        setErrors({\n          message: 'Error adding rating, please try again.',\n        });\n        setShowAlert(true);\n      }\n    }\n  };\n\n  const myStyles = {\n    itemShapes: StickerStar,\n    activeFillColor: '#df604e',\n    inactiveFillColor: '#df5f4e6e',\n  };\n\n  return (\n    <>\n      <p style={{ marginBottom: '0' }}>\n        <em>Your rating:</em>\n      </p>\n      <Rating\n        value={rating}\n        onChange={handleChange}\n        style={{ maxWidth: 250, margin: 'auto' }}\n        itemStyles={myStyles}\n        items={5}\n      />\n\n      {showAlert && errors?.message && (\n        <Alert\n          variant='warning'\n          onClose={() => setShowAlert(false)}\n          dismissible\n        >\n          {errors.message}\n        </Alert>\n      )}\n\n      {rating ? (\n        <p style={{ fontSize: '0.9rem' }}>\n          <em>(Click to edit your rating)</em>\n        </p>\n      ) : (\n        <p style={{ fontSize: '0.9rem' }}>\n          <em>(Click to add your rating)</em>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default StarRating;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { useSetSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\nimport { useRedirect } from '../hooks/useRedirect';\nimport { axiosReq } from '../api/axiosDefaults';\n\nimport Playlist from '../components/Playlist';\nimport Profile from '../components/Profile';\nimport { Rating, StickerStar } from '@smastrom/react-rating';\nimport StarRating from '../components/StarRating';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Row from 'react-bootstrap/Row';\nimport Tooltip from 'react-bootstrap/Tooltip';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpotify } from '@fortawesome/free-brands-svg-icons';\n\nimport styles from '../styles/PlaylistDetail.module.css';\nimport btnStyles from '../styles/Button.module.css';\nimport loadingStyles from '../styles/LoadingSpinner.module.css';\n\nconst PlaylistDetail = () => {\n  const { id } = useParams();\n  const [playlist, setPlaylist] = useState([]);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const setSpotifyPlayerUri = useSetSpotifyPlayerUri();\n  const history = useHistory();\n\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  useRedirect();\n\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      try {\n        const { data: playlist } = await axiosReq.get(`playlists/${id}`);\n\n        setPlaylist(playlist);\n        setHasLoaded(true);\n      } catch (err) {\n        if (err.response?.status === 404) {\n          history.push('/404-error-page');\n        } else {\n          setErrors({\n            message: 'Error fetching playlist data, please refresh the page',\n          });\n          setShowAlert(true);\n        }\n      }\n    };\n\n    setHasLoaded(false);\n    fetchPlaylist();\n  }, [id, history]);\n\n  const redirectToEdit = () => {\n    history.push(`/playlist/${id}/edit`);\n  };\n\n  const updateSpotifyPlayerUri = (uri) => {\n    setSpotifyPlayerUri(uri);\n  };\n\n  // Custom styles for the <Rating /> component\n  const averageRatingStyles = {\n    itemShapes: StickerStar,\n    activeFillColor: '#df604e',\n    inactiveFillColor: '#df5f4e6e',\n  };\n  const ownerRatingStyles = {\n    itemShapes: StickerStar,\n    itemStrokeWidth: 2,\n    activeFillColor: '#d14e3d',\n    activeStrokeColor: '#5a5550',\n    inactiveFillColor: '#df5f4e2a',\n    inactiveStrokeColor: '#5a5550',\n  };\n\n  const displayOwnerAndRating = (\n    <Row>\n      {/* Empty - to help with alignment */}\n      <Col xs={6}></Col>\n\n      {/* Owners name and own rating */}\n      <Col xs={6} style={{ textAlign: 'center' }}>\n        <p style={{ marginBottom: '0' }}>-{playlist.owner}</p>\n        <Rating\n          readOnly={true}\n          value={playlist.owner_rating}\n          style={{ minWidth: 75, maxWidth: 100, margin: 'auto' }}\n          itemStyles={ownerRatingStyles}\n        />\n      </Col>\n    </Row>\n  );\n\n  const displayJustOwner = (\n    <Row>\n      {/* Empty - to help with alignment */}\n      <Col xs={6}></Col>\n\n      {/* Owners name and own rating */}\n      <Col xs={6} style={{ textAlign: 'center' }}>\n        <p style={{ marginBottom: '0' }}>-{playlist.owner}</p>\n      </Col>\n    </Row>\n  );\n\n  return hasLoaded ? (\n    <>\n      <Profile userId={playlist.owner_id} />\n      <Container className={styles.Container}>\n        <Row>\n          <Col>\n            <h2>{playlist.title}</h2>\n          </Col>\n        </Row>\n        <Row className={styles.RowPadding}>\n          {/* Average rating information */}\n          <Col xs={6}>\n            <em>Average Rating: {playlist.average_rating || 0}</em>\n            <Rating\n              readOnly={true}\n              value={playlist.average_rating || 0}\n              style={{ maxWidth: 180, margin: 'auto' }}\n              itemStyles={averageRatingStyles}\n            />\n            <em>Rated: {playlist.ratings_count} time(s)</em>\n          </Col>\n\n          {/* Play button */}\n          <Col xs={6}>\n            <p style={{ marginBottom: '0' }}>click here..</p>\n            <OverlayTrigger\n              placement='bottom'\n              overlay={<Tooltip id='back-tooltip'>Play</Tooltip>}\n            >\n              <Button\n                variant='link'\n                onClick={() => updateSpotifyPlayerUri(playlist.iframe_uri)}\n              >\n                <FontAwesomeIcon\n                  icon={faSpotify}\n                  style={{ color: '#1db954' }}\n                  size='2xl'\n                />\n              </Button>\n            </OverlayTrigger>\n            <p style={{ marginBottom: '0' }}>..have a listen!</p>\n          </Col>\n        </Row>\n\n        {/* Playlist's image and description */}\n        <Row className={styles.HighlightedContainer}>\n          <Col xs={4}>\n            <Button\n              variant='link'\n              onClick={() => history.push(`/profile/${playlist.owner_id}`)}\n              className={styles.Button}\n            >\n              <Playlist image={playlist.image} title={playlist.title} />\n            </Button>\n          </Col>\n          <Col xs={8}>\n            <Row>\n              <Col className={styles.ScreenSizeContidionalPadding}>\n                {playlist.description ? (\n                  <p className={styles.WordBreak}>\n                    &quot;{playlist.description}&quot;\n                  </p>\n                ) : (\n                  <p>\n                    <em>\n                      -{playlist.owner} hasn&apos;t said anything about this\n                      playlist yet-\n                    </em>\n                  </p>\n                )}\n              </Col>\n            </Row>\n\n            {/* Displays owners name and rating, if rating. If no rating, displays owners name, if description. Else, null */}\n            {playlist.owner_rating\n              ? displayOwnerAndRating\n              : !playlist.owner_rating &&\n                playlist.description &&\n                displayJustOwner}\n          </Col>\n        </Row>\n\n        {/* StarRating component - lets user/owner add/edit rating objects */}\n        <Row>\n          <Col>\n            <StarRating playlist={playlist} setPlaylist={setPlaylist} />\n          </Col>\n        </Row>\n        {/* Edit playlist for playlist owner */}\n        {playlist.is_owner && (\n          <>\n            <Row>\n              <Col>\n                <Button onClick={redirectToEdit} className={btnStyles.Button}>\n                  Edit Playlist\n                </Button>\n              </Col>\n            </Row>\n          </>\n        )}\n      </Container>\n\n      {showAlert && errors?.message && (\n        <Alert\n          variant='warning'\n          onClose={() => setShowAlert(false)}\n          dismissible\n        >\n          {errors.message}\n        </Alert>\n      )}\n    </>\n  ) : (\n    <LoadingSpinner className={loadingStyles.Centered} />\n  );\n};\n\nexport default PlaylistDetail;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { axiosReq } from '../api/axiosDefaults';\n\nimport Profile from '../components/Profile';\nimport Playlist from '../components/Playlist';\nimport ModalWindow from '../components/ModalWindow';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashCan } from '@fortawesome/free-regular-svg-icons';\n\nimport styles from '../styles/EditCreateForms.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\nfunction PlaylistEditForm() {\n  const [playlistData, setPlaylistData] = useState({\n    owner_id: '',\n    title: '',\n    description: '',\n    image: '',\n    spotify_id: '',\n    iframe_uri: '',\n    url: '',\n  });\n  const { owner_id, title, description, image, spotify_id, iframe_uri, url } =\n    playlistData;\n\n  const { id } = useParams();\n  const history = useHistory();\n  const [modalShow, setModalShow] = useState(false);\n\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`playlists/${id}`);\n        const {\n          is_owner,\n          owner_id,\n          title,\n          description,\n          image,\n          spotify_id,\n          iframe_uri,\n          url,\n        } = data;\n\n        is_owner\n          ? setPlaylistData({\n              owner_id,\n              title,\n              description,\n              image,\n              spotify_id,\n              iframe_uri,\n              url,\n            })\n          : history.push(`/playlist/${id}`);\n      } catch (err) {\n        // console.log(err.response?.data);\n      }\n    };\n    handleMount();\n  }, [history, id]);\n\n  const handleChange = (e) => {\n    setPlaylistData({\n      ...playlistData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    formData.append('title', title);\n    formData.append('description', description);\n\n    // Currently non-editable fields; but payload requires them\n    formData.append('spotify_id', spotify_id);\n    formData.append('image', image);\n    formData.append('url', url);\n    formData.append('iframe_uri', iframe_uri);\n\n    try {\n      await axiosReq.put(`playlists/${id}`, formData);\n      history.push(`/playlist/${id}`);\n    } catch (err) {\n      if (err.response?.status !== 401) {\n        setErrors(err.response?.data);\n      }\n      // console.log(err.response?.data);\n    }\n  };\n\n  const handleDelete = async (event) => {\n    event.preventDefault();\n    try {\n      await axiosReq.delete(`playlists/${id}`);\n      setModalShow(false);\n      history.push(`/profile/${owner_id}`);\n    } catch (err) {\n      setErrors({\n        message:\n          err.response?.data || 'Something went wrong! Please try again.',\n      });\n      setShowAlert(true);\n    }\n  };\n\n  return (\n    <>\n      <Profile userId={owner_id} />\n      <Form onSubmit={handleSubmit}>\n        <Container className={styles.Container}>\n          <Row>\n            <Col>\n              <h4>Edit Playlist</h4>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group className={styles.FormGroup}>\n                <Form.Label>Title:</Form.Label>\n                <Form.Control\n                  type='text'\n                  name='title'\n                  value={title}\n                  onChange={handleChange}\n                  className={styles.FormControl}\n                />\n              </Form.Group>\n              {errors?.title?.map((message, idx) => (\n                <Alert variant='warning' key={idx}>\n                  {message}\n                </Alert>\n              ))}\n            </Col>\n          </Row>\n          <Row className={styles.Playlist}>\n            <Col>\n              <Playlist image={image} title={title} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group className={styles.FormGroup}>\n                <Form.Label>\n                  If you like, some details about this playlist:\n                </Form.Label>\n                <Form.Control\n                  as='textarea'\n                  rows={4}\n                  name='description'\n                  value={description}\n                  placeholder='How does this playlist make you feel? Where do you most enjoy listening to it?...'\n                  onChange={handleChange}\n                  className={styles.FormControl}\n                />\n              </Form.Group>\n              {errors?.description?.map((message, idx) => (\n                <Alert variant='warning' key={idx}>\n                  {message}\n                </Alert>\n              ))}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Button\n                className={`${btnStyles.TransparentButton} ${btnStyles.MarginLeftRight}`}\n                onClick={() => setModalShow(true)}\n              >\n                <FontAwesomeIcon icon={faTrashCan} size='xl' />\n              </Button>\n              <Button\n                type='button'\n                className={`${btnStyles.Button} ${btnStyles.MarginLeftRight}`}\n                onClick={() => history.push(`/playlist/${id}`)}\n              >\n                Cancel\n              </Button>\n              <Button\n                type='submit'\n                className={`${btnStyles.Button} ${btnStyles.MarginLeftRight}`}\n              >\n                Save\n              </Button>\n            </Col>\n          </Row>\n          {showAlert && errors?.message && (\n            <Alert\n              variant='warning'\n              onClose={() => setShowAlert(false)}\n              dismissible\n            >\n              {errors.message}\n            </Alert>\n          )}\n        </Container>\n      </Form>\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleDelete}\n        title={`Delete ${title}?`}\n        body=\"Are you sure you want to delete this playlist? There's no going back.\"\n      />\n    </>\n  );\n}\n\nexport default PlaylistEditForm;\n","// SOURCE: https://developer.spotify.com/documentation/web-api/tutorials/code-pkce-flow\n\n// Code verifier\nconst generateRandomString = (length) => {\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const values = crypto.getRandomValues(new Uint8Array(length));\n  return values.reduce((acc, x) => acc + possible[x % possible.length], '');\n};\n\n// Code challenge\nconst sha256 = async (plain) => {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return window.crypto.subtle.digest('SHA-256', data);\n};\n\nconst base64encode = (input) => {\n  return btoa(String.fromCharCode(...new Uint8Array(input)))\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n};\n\n// Exports\nexport const clientId = '51c949a050b74ceba5688d10a1c7f5f1';\nexport const codeVerifier = generateRandomString(64);\nexport const getCodeChallenge = async () => {\n  const hashed = await sha256(codeVerifier);\n  return base64encode(hashed);\n};\n\n// Redirect URI\nexport let redirectUri;\nif (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test') {\n  redirectUri = 'http://localhost:3000/spotify-search';\n} else {\n  redirectUri =\n    'https://we-rate-music-react-f931068bb6db.herokuapp.com/spotify-search';\n}\n\n// Refreshing the access token\nexport const getRefreshToken = async () => {\n  // refresh token that has been previously stored\n  const refreshToken = localStorage.getItem('refresh_token');\n  const url = 'https://accounts.spotify.com/api/token';\n\n  const payload = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: new URLSearchParams({\n      grant_type: 'refresh_token',\n      refresh_token: refreshToken,\n      client_id: clientId,\n    }),\n  };\n  const body = await fetch(url, payload);\n  const response = await body.json();\n\n  localStorage.setItem('access_token', response.access_token);\n  localStorage.setItem('refresh_token', response.refresh_token);\n};\n","// SOURCE: https://developer.spotify.com/documentation/web-api/tutorials/code-pkce-flow\nimport { useEffect } from 'react';\nimport {\n  clientId,\n  codeVerifier,\n  getCodeChallenge,\n  redirectUri,\n} from '../utils/spotifyAuthUtils';\n\nexport const useSpotifyAuth = () => {\n  const spotifyAuthentication = async () => {\n    const scope = 'user-read-private user-read-email streaming';\n    const authUrl = new URL('https://accounts.spotify.com/authorize');\n\n    // generated in utils/spotifyAuthUtils.js\n    window.localStorage.setItem('code_verifier', codeVerifier);\n\n    const codeChallenge = await getCodeChallenge();\n\n    const params = {\n      response_type: 'code',\n      client_id: clientId,\n      scope,\n      code_challenge_method: 'S256',\n      code_challenge: codeChallenge,\n      redirect_uri: redirectUri,\n    };\n\n    authUrl.search = new URLSearchParams(params).toString();\n    window.location.href = authUrl.toString();\n  };\n\n  const getToken = async (code) => {\n    // stored from spotifyAuthentication()\n    let codeVerifier = localStorage.getItem('code_verifier');\n\n    const payload = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        client_id: clientId,\n        grant_type: 'authorization_code',\n        code,\n        redirect_uri: redirectUri,\n        code_verifier: codeVerifier,\n      }),\n    };\n\n    const url = 'https://accounts.spotify.com/api/token';\n    const body = await fetch(url, payload);\n    const response = await body.json();\n\n    if (response.access_token) {\n      localStorage.setItem('access_token', response.access_token);\n      localStorage.setItem('refresh_token', response.refresh_token);\n    } else {\n      // console.log('Error: ', response);\n    }\n  };\n\n  const handleAuthentication = async () => {\n    await spotifyAuthentication();\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    let code = urlParams.get('code');\n    if (code) {\n      window.localStorage.setItem('code', code);\n      getToken(code);\n    }\n  }, []);\n\n  return { handleAuthentication };\n};\n","import React, { useState } from 'react';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport { axiosRes } from '../api/axiosDefaults';\n\nimport ModalWindow from '../components/ModalWindow';\nimport Playlist from '../components/Playlist';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\n\nimport btnStyles from '../styles/Button.module.css';\n\nfunction AddPlaylistButton({ playlistData: playlist }) {\n  const currentUser = useCurrentUser();\n  const [modalShow, setModalShow] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = {\n      spotify_id: playlist.id,\n      title: playlist.name,\n      image: playlist.images[0]?.url,\n      url: playlist.external_urls.spotify,\n      iframe_uri: playlist.uri,\n      owner: currentUser.profile_id,\n    };\n\n    try {\n      await axiosRes.post('playlists/', data);\n      setModalShow(false);\n    } catch (error) {\n      setErrors({\n        message:\n          error.response?.data || 'Something went wrong! Please try again.',\n      });\n      setShowAlert(true);\n    }\n  };\n\n  return (\n    <>\n      <Button onClick={() => setModalShow(true)} className={btnStyles.Button}>\n        Add\n      </Button>\n\n      {showAlert && errors?.message && (\n        <Alert\n          variant='warning'\n          onClose={() => setShowAlert(false)}\n          dismissible\n        >\n          {errors.message}\n        </Alert>\n      )}\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleSubmit}\n        title={`Add \"${playlist.name}\" to your profile?`}\n        body={\n          <Playlist image={playlist.images[0]?.url} title={playlist.name} />\n        }\n      />\n    </>\n  );\n}\n\nexport default AddPlaylistButton;\n","import React, { useEffect, useState } from 'react';\n\nimport { useSetSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\nimport { useSpotifyAuth } from './useSpotifyAuth';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport { useRedirect } from '../hooks/useRedirect';\nimport { getRefreshToken } from '../utils/spotifyAuthUtils';\n\nimport Profile from '../components/Profile';\nimport SearchBar from '../components/SearchBar';\nimport Playlist from '../components/Playlist';\nimport AddPlaylistButton from './AddPlaylistButton';\nimport ModalWindow from '../components/ModalWindow';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport styles from '../styles/SpotifySearchPage.module.css';\n\nconst SpotifySearchPage = () => {\n  useRedirect();\n\n  const { handleAuthentication } = useSpotifyAuth();\n  const setSpotifyPlayerUri = useSetSpotifyPlayerUri();\n  const currentUser = useCurrentUser();\n  const [searchResults, setSearchResults] = useState();\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n\n  useEffect(() => {\n    setModalShow(false);\n    // Loads the last search from local storage, if it exists\n    const lastSearch = localStorage.getItem('lastSearch');\n    if (lastSearch) {\n      setSearchResults(JSON.parse(lastSearch));\n    }\n\n    // Delay - to allow useSpotityAuth the time to set access_token to localStorage (Blunt force fix)\n    const delay = setTimeout(() => {\n      // Checks if the user has access_token in local storage\n      const access_token = localStorage.getItem('access_token');\n      if (!access_token) {\n        setModalShow(true);\n      }\n    }, 1000);\n\n    // Cleanup\n    return () => {\n      clearTimeout(delay);\n    };\n  }, []);\n\n  const handleSearch = async (searchQuery) => {\n    setErrors({});\n    // Empty search field\n    if (!searchQuery) {\n      setErrors({ message: 'Search field is empty' });\n      setShowAlert(true);\n      return;\n    }\n\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    try {\n      // Refreshes the access token before every search\n      await getRefreshToken();\n\n      const response = await fetch(\n        `https://api.spotify.com/v1/search?q=${searchQuery}&type=album%2Cplaylist%2Cartist&limit=50`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('access_token'),\n          },\n          signal: signal,\n        }\n      );\n      const data = await response.json();\n\n      // Combine the items from albums, playlists, and artists\n      const combinedData = [\n        ...(data.albums?.items || []),\n        ...(data.playlists?.items || []),\n        ...(data.artists?.items || []),\n      ];\n\n      setSearchResults(combinedData);\n\n      // Saves the search results to local storage for later use\n      if (combinedData.length) {\n        localStorage.setItem('lastSearch', JSON.stringify(combinedData));\n      }\n    } catch (error) {\n      setErrors({\n        message: error.response?.data || 'An error occurred in fetching',\n      });\n      setShowAlert(true);\n    }\n\n    // Cleanup - in case of early unmounting\n    return () => {\n      controller.abort();\n    };\n  };\n\n  const updateSpotifyPlayerUri = (uri) => {\n    setSpotifyPlayerUri(uri);\n  };\n\n  return (\n    <>\n      {currentUser?.profile_id && <Profile userId={currentUser?.profile_id} />}\n      <Container className={styles.Container}>\n        <SearchBar onSearch={handleSearch} />\n        {showAlert && errors?.message && (\n          <Alert\n            variant='warning'\n            onClose={() => setShowAlert(false)}\n            dismissible\n          >\n            {errors.message}\n          </Alert>\n        )}\n        <Container>\n          <Row>\n            {searchResults?.length ? (\n              searchResults?.map((result) => (\n                <Col\n                  className={styles.PaddingReset}\n                  key={result.id}\n                  xs={4}\n                  md={3}\n                >\n                  <Button\n                    variant='link'\n                    onClick={() => updateSpotifyPlayerUri(result.uri)}\n                    className={styles.PaddingReset}\n                  >\n                    <Playlist\n                      image={result.images[0]?.url}\n                      title={result.name}\n                    />\n                  </Button>\n                  <Row>\n                    <Col className={styles.MarginBottom}>\n                      <p className={styles.Margin}>{result.name}</p>\n                      <AddPlaylistButton playlistData={result} />\n                    </Col>\n                  </Row>\n                </Col>\n              ))\n            ) : (\n              <p>No search stored results...</p>\n            )}\n          </Row>\n        </Container>\n      </Container>\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleAuthentication}\n        title={'You will be redirected to Spotify'}\n        body='Please authenticate this app with your Spotify account to take full advantage of its features. Once you are authenticated, you will be redirected back to the app. Thank you!'\n      />\n    </>\n  );\n};\n\nexport default SpotifySearchPage;\n","import React, { useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nimport { axiosReq } from '../api/axiosDefaults';\nimport { useRedirect } from '../hooks/useRedirect';\n\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\n\nimport styles from '../styles/EditCreateForms.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\nfunction FeedbackCreateForm() {\n  useRedirect();\n\n  const [feedbackData, setfeedbackData] = useState({\n    title: '',\n    feedback: '',\n    image: '',\n  });\n  const { title, feedback } = feedbackData;\n  const imageFile = useRef();\n\n  const history = useHistory();\n  const [errors, setErrors] = useState({});\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('feedback', feedback);\n    if (imageFile?.current?.files[0]) {\n      formData.append('image', imageFile?.current?.files[0]);\n    }\n    try {\n      await axiosReq.post('feedback/', formData);\n      setShowSuccess(true);\n      setTimeout(() => {\n        history.push('/');\n      }, 4000);\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n  const handleChange = (event) => {\n    setfeedbackData({\n      ...feedbackData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const warmWelcome = (\n    <>\n      <Row className='pt-3'>\n        <Col>\n          <h1 className={styles.Title}>Welcome,</h1>\n          <h3>and thank you for taking your time!</h3>\n        </Col>\n      </Row>\n      <Row className={styles.HighlightedContainer}>\n        <Col>\n          <p>\n            This is your chance to help us improve the app. A direct channel to\n            the developers. Please be sensible and respectful. We appreciate\n            your feedback and will consider all of your suggestions and\n            implement them if possible.\n          </p>\n        </Col>\n      </Row>\n    </>\n  );\n\n  const textFields = (\n    <>\n      <Form.Group>\n        <Form.Label>Title:</Form.Label>\n        <Form.Control\n          type='text'\n          value={title}\n          onChange={handleChange}\n          name='title'\n          placeholder='Please add a title'\n          className={styles.FormControl}\n        />\n      </Form.Group>\n      {errors?.title?.map((message, idx) => (\n        <Alert variant='warning' key={idx}>\n          {message}\n        </Alert>\n      ))}\n      <Form.Group>\n        <Form.Label>Your feedback:</Form.Label>\n        <Form.Control\n          as='textarea'\n          rows={6}\n          value={feedback}\n          onChange={handleChange}\n          name='feedback'\n          placeholder='Please add your feedback here (positive feedback is always welcome!)...'\n          className={styles.FormControl}\n        />\n      </Form.Group>\n      {errors?.feedback?.map((message, idx) => (\n        <Alert variant='warning' key={idx}>\n          {message}\n        </Alert>\n      ))}\n    </>\n  );\n\n  return (\n    <Container className={styles.OverflowHidden}>\n      <Container>{warmWelcome}</Container>\n      <Form\n        onSubmit={handleSubmit}\n        style={{ 'margin-bottom': '76px', 'padding-bottom': '10px' }}\n      >\n        <Row>\n          <Col>\n            <Container>{textFields}</Container>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Container>\n              <Form.Group>\n                <Form.Label htmlFor='image-upload'>\n                  Upload an image (optional):\n                </Form.Label>\n                <Form.File\n                  className={styles.TextAlignLast}\n                  id='image-upload'\n                  ref={imageFile}\n                  accept='image/*'\n                  onChange={(e) => {\n                    if (e.target.files.length) {\n                      setfeedbackData({\n                        ...feedbackData,\n                        image: URL.createObjectURL(e.target.files[0]),\n                      });\n                    }\n                  }}\n                />\n                {errors?.image?.map((message, idx) => (\n                  <Alert variant='warning' key={idx}>\n                    {message}\n                  </Alert>\n                ))}\n              </Form.Group>\n            </Container>\n          </Col>\n        </Row>\n        <Button className={btnStyles.Button} onClick={() => history.goBack()}>\n          Cancel\n        </Button>\n        <Button className={btnStyles.Button} type='submit'>\n          Submit\n        </Button>\n        {showSuccess && (\n          <Container className='pt-3'>\n            <Alert\n              variant='success'\n              onClose={() => setShowSuccess(false)}\n              dismissible\n            >\n              Feedback submitted, Thank you! You will be directed back to your\n              profile shortly.\n            </Alert>\n          </Container>\n        )}\n      </Form>\n    </Container>\n  );\n}\n\nexport default FeedbackCreateForm;\n","export default __webpack_public_path__ + \"static/media/waveform.329b796b.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFaceDizzy } from '@fortawesome/free-regular-svg-icons';\n\nimport waveform from '../assets/waveform.png';\n\nconst PageNotFound404 = () => {\n  return (\n    <Container style={{ padding: '150px 0', overflow: 'hidden' }}>\n      <Row>\n        <Col>\n          <h1>\n            4<FontAwesomeIcon icon={faFaceDizzy} />4\n          </h1>\n          <h4>Page not found</h4>\n          <img src={waveform} alt='Sound waveform' style={{ width: '100%' }} />\n          <p>\n            Oops... The link you clicked may be broken or the page may have been\n            removed. Click to go back to the <Link to='/'>homepage</Link>.\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PageNotFound404;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { useCurrentUser } from './contexts/CurrentUserContext';\nimport './api/axiosDefaults';\n\nimport NavBar from './components/NavBar';\nimport AccordionWindow from './components/AccordionWindow';\n\nimport Homepage from './pages/Homepage';\nimport SignUpForm from './pages/auth/SignUpForm';\nimport SignInForm from './pages/auth/SignInForm';\nimport ProfilePage from './pages/ProfilePage';\nimport ProfileEditForm from './forms/ProfileEditForm';\nimport PlaylistsPage from './pages/PlaylistsPage';\nimport PlaylistDetail from './pages/PlaylistDetail';\nimport PlaylistEditForm from './forms/PlaylistEditForm';\nimport SpotifySearchPage from './spotify/SpotifySearchPage';\nimport FeedbackCreateForm from './forms/FeedbackCreateForm';\nimport PageNotFound404 from './pages/PageNotFound404';\n\nimport '@smastrom/react-rating/style.css';\nimport styles from './App.module.css';\n\nfunction App() {\n  const currentUser = useCurrentUser();\n  const profile_id = currentUser?.profile_id || '';\n\n  return (\n    <div className={styles.App}>\n      <NavBar />\n      <AccordionWindow />\n      <Switch>\n        <Route exact path='/' render={() => <Homepage />} />\n        <Route exact path='/signin' render={() => <SignInForm />} />\n        <Route exact path='/signup' render={() => <SignUpForm />} />\n        <Route\n          exact\n          path='/global'\n          render={() => <PlaylistsPage pageName='All Playlists' />}\n        />\n        <Route\n          exact\n          path='/feed'\n          render={() => (\n            <PlaylistsPage\n              pageName='Playlists of Followed Users'\n              filter={`owner__followed_by__owner__profile=${profile_id}`}\n            />\n          )}\n        />\n        <Route exact path='/profile/:userId' render={() => <ProfilePage />} />\n        <Route\n          exact\n          path='/profile/:userId/edit'\n          render={() => <ProfileEditForm />}\n        />\n        <Route\n          exact\n          path='/rated-playlists'\n          render={() => (\n            <PlaylistsPage\n              pageName='All Playlists You Have Rated'\n              filter={`ratings__owner__profile=${profile_id}`}\n            />\n          )}\n        />\n        <Route exact path='/playlist/:id' render={() => <PlaylistDetail />} />\n        <Route\n          exact\n          path='/playlist/:id/edit'\n          render={() => <PlaylistEditForm />}\n        />\n        <Route\n          exact\n          path='/spotify-search'\n          render={() => <SpotifySearchPage />}\n        />\n        <Route\n          exact\n          path='/feedback/create'\n          render={() => <FeedbackCreateForm />}\n        />\n        <Route render={() => <PageNotFound404 />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { CurrentUserProvider } from './contexts/CurrentUserContext';\nimport { SpotifyPlayerUriProvider } from './contexts/SpotifyPlayerUriContext';\n\nReactDOM.render(\n  <Router>\n    <CurrentUserProvider>\n      <SpotifyPlayerUriProvider>\n        <App />\n      </SpotifyPlayerUriProvider>\n    </CurrentUserProvider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileContainer\":\"Profile_ProfileContainer__1MhJH\",\"AvatarContainer\":\"Profile_AvatarContainer__314Ah\",\"AvatarStatsContainer\":\"Profile_AvatarStatsContainer__2LRQA\",\"StatsRow\":\"Profile_StatsRow__dTi8j\",\"StatsItem\":\"Profile_StatsItem__1s6Rh\",\"FontAwesomeIcon\":\"Profile_FontAwesomeIcon__1XfKb\",\"ProfileBottomRightIcon\":\"Profile_ProfileBottomRightIcon__gTIrd\",\"ProfileTopRightIcon\":\"Profile_ProfileTopRightIcon__31h-G\",\"SmallText\":\"Profile_SmallText__-iVK2\",\"AlignItemsCenter\":\"Profile_AlignItemsCenter__3z0zF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"EditCreateForms_Container__2DsIC\",\"OverflowHidden\":\"EditCreateForms_OverflowHidden__3fhes\",\"Playlist\":\"EditCreateForms_Playlist__1cGCN\",\"FormGroup\":\"EditCreateForms_FormGroup__1AQPR\",\"FormControl\":\"EditCreateForms_FormControl__U6OqG\",\"TextAlignLast\":\"EditCreateForms_TextAlignLast__3y1Ow\",\"HighlightedContainer\":\"EditCreateForms_HighlightedContainer__3q1wl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__1amC6\",\"Brand\":\"NavBar_Brand__iWmt7\",\"SignInOut\":\"NavBar_SignInOut__3hTFe\",\"MarginRight\":\"NavBar_MarginRight__1UDrv\",\"SignUpIn\":\"NavBar_SignUpIn__3Qj2P\",\"Active\":\"NavBar_Active__3PBZb\",\"ProfileActive\":\"NavBar_ProfileActive__2t0Zs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"SignInUpForm_Row__3PbVy\",\"Input\":\"SignInUpForm_Input__3xaLZ\",\"Header\":\"SignInUpForm_Header__3joQJ\",\"Link\":\"SignInUpForm_Link__1BeMm\",\"SignUpCol\":\"SignInUpForm_SignUpCol__28o4y\",\"SignInCol\":\"SignInUpForm_SignInCol__3ImPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Content\":\"App_Content__ZaMNr\",\"FillerImage\":\"App_FillerImage__2ob-g\",\"PaddingReset\":\"App_PaddingReset__2Yixf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Centered\":\"LoadingSpinner_Centered__2UoRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccordionPosition\":\"AccordionWindow_AccordionPosition__3Pg_2\",\"Header\":\"AccordionWindow_Header__3EVT_\",\"Card\":\"AccordionWindow_Card__RFCw5\",\"PaddingReset\":\"AccordionWindow_PaddingReset__RMqnf\",\"Hidden\":\"AccordionWindow_Hidden__ZcMNb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Homepage_Container__sxUK-\",\"TitleContainer\":\"Homepage_TitleContainer__rTDdU\",\"Title\":\"Homepage_Title__jDukA\",\"IntroContainer\":\"Homepage_IntroContainer__1pqil\",\"Line\":\"Homepage_Line__3qZsO\",\"SecondLine\":\"Homepage_SecondLine__2Ymv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PlaylistDetail_Container__37TnQ\",\"HighlightedContainer\":\"PlaylistDetail_HighlightedContainer__1Lqrp\",\"RowPadding\":\"PlaylistDetail_RowPadding__2gbU9\",\"WordBreak\":\"PlaylistDetail_WordBreak__3E_Bg\",\"ScreenSizeContidionalPadding\":\"PlaylistDetail_ScreenSizeContidionalPadding__2iVym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropdownMenu\":\"SearchBar_DropdownMenu__2J2wk\",\"DropdownItem\":\"SearchBar_DropdownItem__3uVVu\",\"InfiniteScroll\":\"SearchBar_InfiniteScroll__1tS1z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PlaylistsPage_Container__KgRlF\",\"ProfileContainer\":\"PlaylistsPage_ProfileContainer__1ky5y\",\"HighlightedContainer\":\"PlaylistsPage_HighlightedContainer__3oKHx\",\"Button\":\"PlaylistsPage_Button__2jYpK\",\"InfiniteScroll\":\"PlaylistsPage_InfiniteScroll__1cMqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SpotifySearchPage_Container__31uhH\",\"PaddingReset\":\"SpotifySearchPage_PaddingReset__2gaVg\",\"Margin\":\"SpotifySearchPage_Margin__sjI4C\",\"MarginBottom\":\"SpotifySearchPage_MarginBottom__1JwwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"ModalWindow_Header__hiHjJ\",\"Body\":\"ModalWindow_Body__13Mmm\",\"Color\":\"ModalWindow_Color__9jnUe\",\"Footer\":\"ModalWindow_Footer__3oRO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Avatar_Avatar__196lW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"Playlist_Image__2QZQC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FontAwesomeIcon\":\"SignOutButton_FontAwesomeIcon__WBpEv\"};"],"sourceRoot":""}