{"version":3,"sources":["api/axiosDefaults.js","contexts/CurrentUserContext.js","components/Avatar.js","components/NavBar.js","pages/auth/SignUpForm.js","pages/auth/SignInForm.js","utils/spotifyAuthUtils.js","spotify/useSpotifyAuth.js","contexts/SpotifyPlayerUriContext.js","components/LoadingSpinner.js","components/Profile.js","components/SearchBar.js","components/Playlist.js","components/ModalWindow.js","spotify/AddPlaylistButton.js","spotify/SpotifySearchPage.js","spotify/SpotifyPlayer.js","components/AccordionWindow.js","pages/PlaylistsPage.js","utils/dataUtils.js","pages/ProfilePage.js","pages/PlaylistDetail.js","App.js","reportWebVitals.js","index.js","styles/SignInUpForm.module.css","styles/NavBar.module.css","styles/Button.module.css","App.module.css","styles/Profile.module.css","styles/AccordionWindow.module.css","styles/LoadingSpinner.module.css","styles/ModalWindow.module.css","styles/PlaylistsPage.module.css","styles/SpotifySearchPage.module.css","styles/PlaylistDetail.module.css","styles/Avatar.module.css","styles/Playlist.module.css","styles/AddPlaylistButton.module.css"],"names":["axios","defaults","baseURL","headers","post","withCredentials","axiosReq","create","axiosRes","CurrentUserContext","createContext","SetCurrentUserContext","useCurrentUser","useContext","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","useState","history","useHistory","useEffect","async","source","CancelToken","data","get","cancelToken","token","err","isCancel","console","log","message","handleMount","useMemo","interceptors","request","use","prevCurrentUser","push","config","Promise","reject","response","_err$response","status","_jsx","Provider","value","Avatar","src","height","className","styles","width","alt","concat","username","NavBar","loggedOutIcons","_jsxs","_Fragment","Nav","NavLink","activeClassName","Active","to","FontAwesomeIcon","icon","faUserPlus","size","faRightToBracket","loggedInIcons","faStar","faPeopleGroup","profile_id","profile_image","faSquare","faSpotify","style","color","Navbar","CustomBackground","expand","fixed","Container","SignUpForm","_errors$username","_errors$password","_errors$password2","_errors$non_field_err","signUpData","setSignUpData","password1","password2","errors","setErrors","handleChange","event","target","name","Row","Col","md","appStyles","Content","Header","Form","onSubmit","preventDefault","Group","controlId","Label","Control","Input","type","placeholder","onChange","map","idx","Alert","variant","Button","btnStyles","Wide","Bright","non_field_errors","Link","SignUpCol","Image","FillerImage","SignInForm","signInData","setSignInData","password","user","goBack","SignInCol","clientId","codeVerifier","length","possible","crypto","getRandomValues","Uint8Array","reduce","acc","x","generateRandomString","getCodeChallenge","hashed","TextEncoder","encode","plain","window","subtle","digest","sha256","input","btoa","String","fromCharCode","replace","redirectUri","useSpotifyAuth","code","URLSearchParams","location","search","localStorage","setItem","getItem","payload","method","body","client_id","grant_type","redirect_uri","code_verifier","fetch","json","access_token","getToken","handleAuthentication","authUrl","URL","codeChallenge","params","response_type","scope","code_challenge_method","code_challenge","toString","href","spotifyAuthentication","SpotifyPlayerUriContext","SetSpotifyPlayerUriContext","useSetSpotifyPlayerUri","SpotifyPlayerUriProvider","spotifyPlayerUri","setSpotifyPlayerUri","LoadingSpinner","faCompactDisc","spin","Profile","userId","profileData","setProfileData","hasLoaded","setHasLoaded","fetchProfileData","cancel","ProfileContainer","backgroundImage","background","xs","faBackward","owner","StatsContainer","image","followers_count","following_count","playlists_count","loadingStyles","Centered","SearchBar","onSearch","searchQuery","setSearchQuery","e","InputGroup","Append","faMagnifyingGlass","Playlist","title","ModalWindow","props","Modal","centered","closeButton","Title","id","Color","Body","Footer","onClick","onHide","onConfirm","AddPlaylistButton","_playlist$images$2","playlistData","playlist","modalShow","setModalShow","showAlert","setShowAlert","faSquarePlus","onClose","dismissible","show","_playlist$images$","spotify_id","images","url","external_urls","spotify","iframe_uri","uri","error","_error$response","SpotifySearchPage","searchResults","setSearchResults","lastSearch","JSON","parse","pk","controller","AbortController","signal","_data$albums","_data$playlists","_data$artists","Authorization","combinedData","albums","items","playlists","artists","stringify","abort","result","_result$images$","PaddingReset","updateSpotifyPlayerUri","SpotifyPlayer","playerRef","useRef","embedController","setEmbedController","script","document","createElement","appendChild","onSpotifyIframeApiReady","IFrameAPI","options","createController","current","EmbedController","loadUri","ref","AccordionWindow","Accordion","AccordionPosition","Card","Toggle","as","eventKey","faCaretUp","Collapse","PlaylistsPage","filter","profileView","setPlaylists","fetchPlaylists","InfiniteScroll","dataLength","results","loader","hasMore","next","resource","setResource","prevResource","curr","some","accResult","fetchMoreData","ProfilePage","useParams","PlaylistDetail","setPlaylist","ratings","setRatings","all","fetchPlaylist","owner_id","average_rating","ratings_count","App","Switch","Route","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","Router","getElementById","module","exports"],"mappings":"oQAGAA,IAAMC,SAASC,QAAU,OACzBF,IAAMC,SAASE,QAAQC,KAAK,gBAAkB,sBAC9CJ,IAAMC,SAASI,iBAAkB,EAE1B,MAAMC,EAAWN,IAAMO,SACjBC,EAAWR,IAAMO,S,kBCDvB,MAAME,EAAqBC,0BACrBC,EAAwBD,0BAExBE,EAAiBA,IAAMC,qBAAWJ,GAGlCK,EAAsBC,IAAmB,IAAlB,SAAEC,GAAUD,EAC9C,MAAOE,EAAaC,GAAkBC,mBAAS,MACzCC,EAAUC,cA2EhB,OAlDAC,qBAAU,KAvBUC,WAClB,MACMC,EADcxB,IAAMyB,YACCD,SAE3B,IACE,MAAM,KAAEE,SAAelB,EAASmB,IAAI,qBAAsB,CACxDC,YAAaJ,EAAOK,QAEtBX,EAAeQ,EACjB,CAAE,MAAOI,GACH9B,IAAM+B,SAASD,GACjBE,QAAQC,IAAI,mBAAoBH,EAAII,SAEpCF,QAAQC,IAAIH,EAEhB,CAKC,EAIDK,EAAa,GACZ,IAEHC,mBAAQ,KACN9B,EAAS+B,aAAaC,QAAQC,KAC5BhB,UAEE,UACQvB,IAAMI,KAAK,+BACnB,CAAE,MAAO0B,GAQP,OAPAZ,GAAgBsB,IACVA,GACFpB,EAAQqB,KAAK,WAER,QAGFC,CACT,CAEA,OAAOA,CAAM,IAEdZ,GACQa,QAAQC,OAAOd,KAI1BtB,EAAS6B,aAAaQ,SAASN,KAC5BM,GAAaA,IACdtB,UAAgB,IAADuB,EACb,GAA6B,OAAb,QAAZA,EAAAhB,EAAIe,gBAAQ,IAAAC,OAAA,EAAZA,EAAcC,QAAgB,CAChC,UACQ/C,IAAMI,KAAK,+BACnB,CAAE,MAAO0B,GACPZ,GAAgBsB,IACVA,GACFpB,EAAQqB,KAAK,WAER,OAGX,CACA,OAAOzC,IAAM8B,EAAIY,OACnB,CACA,OAAOC,QAAQC,OAAOd,EAAI,GAE7B,GACA,CAACV,IAGF4B,cAACvC,EAAmBwC,SAAQ,CAACC,MAAOjC,EAAYD,SAC9CgC,cAACrC,EAAsBsC,SAAQ,CAACC,MAAOhC,EAAeF,SACnDA,KAEyB,E,qBC5EnBmC,MAfApC,IAA2B,IAA1B,IAAEqC,EAAG,OAAEC,EAAS,IAAItC,EAClC,MAAME,EAAcL,IACpB,OACEoC,cAAA,QAAAhC,SACEgC,cAAA,OACEM,UAAWC,IAAOJ,OAClBC,IAAKA,EACLC,OAAQA,EACRG,MAAOH,EACPI,IAAG,GAAAC,OAAgB,OAAXzC,QAAW,IAAXA,OAAW,EAAXA,EAAa0C,SAAQ,eAE1B,ECgGIC,MA/FAA,KACb,MAAM3C,EAAcL,IAEdiD,EACJC,eAAAC,WAAA,CAAA/C,SAAA,CACE8C,eAACE,IAAG,CAACV,UAAU,SAAQtC,SAAA,CACrBgC,cAACiB,IAAO,CACNX,UAAWC,IAAOU,QAClBC,gBAAiBX,IAAOY,OACxBC,GAAG,UAASpD,SAGZgC,cAACqB,IAAe,CAACC,KAAMC,IAAYC,KAAK,UAChC,cAIZV,eAACE,IAAG,CAACV,UAAU,SAAQtC,SAAA,CACrBgC,cAACiB,IAAO,CACNX,UAAWC,IAAOU,QAClBC,gBAAiBX,IAAOY,OACxBC,GAAG,UAASpD,SAGZgC,cAACqB,IAAe,CAACC,KAAMG,IAAkBD,KAAK,UACtC,cAKVE,EACJZ,eAAAC,WAAA,CAAA/C,SAAA,CACEgC,cAACgB,IAAG,CAACV,UAAU,UAAStC,SACtBgC,cAACiB,IAAO,CACNX,UAAWC,IAAOU,QAClBC,gBAAiBX,IAAOY,OACxBC,GAAG,WAAUpD,SAGbgC,cAACqB,IAAe,CAACC,KAAMK,IAAQH,KAAK,YAIxCxB,cAACgB,IAAG,CAACV,UAAU,UAAStC,SACtBgC,cAACiB,IAAO,CACNX,UAAWC,IAAOU,QAClBC,gBAAiBX,IAAOY,OACxBC,GAAG,QAAOpD,SAGVgC,cAACqB,IAAe,CAACC,KAAMM,IAAeJ,KAAK,YAI/CxB,cAACgB,IAAG,CAAAhD,SACFgC,cAACiB,IAAO,CACNX,UAAWC,IAAOU,QAClBG,GAAE,YAAAV,OAAyB,OAAXzC,QAAW,IAAXA,OAAW,EAAXA,EAAa4D,YAAa7D,SAG1CgC,cAACG,EAAM,CAACC,IAAgB,OAAXnC,QAAW,IAAXA,OAAW,EAAXA,EAAa6D,cAAezB,OAAQ,SAIrDL,cAACgB,IAAG,CAACV,UAAU,UAAStC,SACtBgC,cAACiB,IAAO,CACNX,UAAWC,IAAOU,QAClBC,gBAAiBX,IAAOY,OACxBC,GAAG,eAAcpD,SAGjBgC,cAACqB,IAAe,CAACC,KAAMS,IAAUP,KAAK,YAI1CxB,cAACgB,IAAG,CAACV,UAAU,UAAStC,SACtBgC,cAACiB,IAAO,CAACX,UAAWC,IAAOU,QAASG,GAAG,kBAAiBpD,SAEtDgC,cAACqB,IAAe,CACdC,KAAMU,IACNC,MAAO,CAAEC,MAAO,WAChBV,KAAK,eAOf,OACExB,cAACmC,IAAM,CAAC7B,UAAWC,IAAO6B,iBAAkBC,OAAO,KAAKC,MAAM,SAAQtE,SACpEgC,cAACuC,IAAS,CAAAvE,SAAEC,EAAcyD,EAAgBb,KACnC,E,kFCkCE2B,MAzHIA,KAAO,IAADC,EAAAC,EAAAC,EAAAC,EAEvB,MAAOC,EAAYC,GAAiB3E,mBAAS,CAC3CwC,SAAU,GACVoC,UAAW,GACXC,UAAW,MAEP,SAAErC,EAAQ,UAAEoC,EAAS,UAAEC,GAAcH,GAEpCI,EAAQC,GAAa/E,mBAAS,CAAC,GAEhCC,EAAUC,cAEV8E,EAAgBC,IACpBN,EAAc,IACTD,EACH,CAACO,EAAMC,OAAOC,MAAOF,EAAMC,OAAOnD,OAClC,EAaJ,OACEY,eAACyC,IAAG,CAACjD,UAAWC,IAAOgD,IAAIvF,SAAA,CACzB8C,eAAC0C,IAAG,CAAClD,UAAU,sBAAsBmD,GAAI,EAAEzF,SAAA,CACzC8C,eAACyB,IAAS,CAACjC,UAAS,GAAAI,OAAKgD,IAAUC,QAAO,SAAQ3F,SAAA,CAChDgC,cAAA,MAAIM,UAAWC,IAAOqD,OAAO5F,SAAC,YAE9B8C,eAAC+C,IAAI,CAACC,SAhBOvF,UACnB6E,EAAMW,iBACN,UACQ/G,IAAMI,KAAK,8BAA+ByF,GAChDzE,EAAQqB,KAAK,UACf,CAAE,MAAOX,GAAM,IAADgB,EACZoD,EAAsB,QAAbpD,EAAChB,EAAIe,gBAAQ,IAAAC,OAAA,EAAZA,EAAcpB,KAC1B,GASmCV,SAAA,CAC3B8C,eAAC+C,IAAKG,MAAK,CAACC,UAAU,WAAUjG,SAAA,CAC9BgC,cAAC6D,IAAKK,MAAK,CAAC5D,UAAU,SAAQtC,SAAC,aAC/BgC,cAAC6D,IAAKM,QAAO,CACX7D,UAAWC,IAAO6D,MAClBC,KAAK,OACLC,YAAY,WACZhB,KAAK,WACLpD,MAAOS,EACP4D,SAAUpB,OAGE,QADHV,EACZQ,EAAOtC,gBAAQ,IAAA8B,OAAA,EAAfA,EAAiB+B,KAAI,CAACtF,EAASuF,IAC9BzE,cAAC0E,IAAK,CAACC,QAAQ,UAAS3G,SACrBkB,GAD2BuF,KAKhC3D,eAAC+C,IAAKG,MAAK,CAACC,UAAU,YAAWjG,SAAA,CAC/BgC,cAAC6D,IAAKK,MAAK,CAAC5D,UAAU,SAAQtC,SAAC,aAC/BgC,cAAC6D,IAAKM,QAAO,CACX7D,UAAWC,IAAO6D,MAClBC,KAAK,WACLC,YAAY,WACZhB,KAAK,YACLpD,MAAO6C,EACPwB,SAAUpB,OAGG,QADJT,EACZO,EAAOF,iBAAS,IAAAL,OAAA,EAAhBA,EAAkB8B,KAAI,CAACtF,EAASuF,IAC/BzE,cAAC0E,IAAK,CAAWC,QAAQ,UAAS3G,SAC/BkB,GADSuF,KAKd3D,eAAC+C,IAAKG,MAAK,CAACC,UAAU,YAAWjG,SAAA,CAC/BgC,cAAC6D,IAAKK,MAAK,CAAC5D,UAAU,SAAQtC,SAAC,qBAC/BgC,cAAC6D,IAAKM,QAAO,CACX7D,UAAWC,IAAO6D,MAClBC,KAAK,WACLC,YAAY,mBACZhB,KAAK,YACLpD,MAAO8C,EACPuB,SAAUpB,OAGG,QADJR,EACZM,EAAOD,iBAAS,IAAAL,OAAA,EAAhBA,EAAkB6B,KAAI,CAACtF,EAASuF,IAC/BzE,cAAC0E,IAAK,CAAWC,QAAQ,UAAS3G,SAC/BkB,GADSuF,KAKdzE,cAAC4E,IAAM,CACLtE,UAAS,GAAAI,OAAKmE,IAAUD,OAAM,KAAAlE,OAAImE,IAAUC,KAAI,KAAApE,OAAImE,IAAUE,QAC9DV,KAAK,SAAQrG,SACd,YAGuB,QADf4E,EACRK,EAAO+B,wBAAgB,IAAApC,OAAA,EAAvBA,EAAyB4B,KAAI,CAACtF,EAASuF,IACtCzE,cAAC0E,IAAK,CAAWC,QAAQ,UAAUrE,UAAU,OAAMtC,SAChDkB,GADSuF,WAOlBzE,cAACuC,IAAS,CAACjC,UAAS,QAAAI,OAAUgD,IAAUC,SAAU3F,SAChD8C,eAACmE,IAAI,CAAC3E,UAAWC,IAAO0E,KAAM7D,GAAG,UAASpD,SAAA,CAAC,4BAChBgC,cAAA,QAAAhC,SAAM,oBAIrCgC,cAACwD,IAAG,CACFC,GAAI,EACJnD,UAAS,iCAAAI,OAAmCH,IAAO2E,WAAYlH,SAE/DgC,cAACmF,IAAK,CACJ7E,UAAS,GAAAI,OAAKgD,IAAU0B,aACxBhF,IAAK,uEAGL,ECdKiF,MAvGf,WAAuB,IAAD5C,EAAAC,EAAAE,EACpB,MAAM1E,EJV+BL,qBAAWF,IIazC2H,EAAYC,GAAiBpH,mBAAS,CAC3CwC,SAAU,GACV6E,SAAU,MAEN,SAAE7E,EAAQ,SAAE6E,GAAaF,GAExBrC,EAAQC,GAAa/E,mBAAS,CAAC,GAEhCC,EAAUC,cAaV8E,EAAgBC,IACpBmC,EAAc,IACTD,EACH,CAAClC,EAAMC,OAAOC,MAAOF,EAAMC,OAAOnD,OAClC,EAGJ,OACEY,eAACyC,IAAG,CAACjD,UAAWC,IAAOgD,IAAIvF,SAAA,CACzB8C,eAAC0C,IAAG,CAAClD,UAAU,qBAAqBmD,GAAI,EAAEzF,SAAA,CACxC8C,eAACyB,IAAS,CAACjC,UAAS,GAAAI,OAAKgD,IAAUC,QAAO,SAAQ3F,SAAA,CAChDgC,cAAA,MAAIM,UAAWC,IAAOqD,OAAO5F,SAAC,YAC9B8C,eAAC+C,IAAI,CAACC,SAxBOvF,UACnB6E,EAAMW,iBAEN,IACE,MAAM,KAAErF,SAAe1B,IAAMI,KAAK,uBAAwBkI,GAC1DpH,EAAeQ,EAAK+G,MACpBrH,EAAQsH,QACV,CAAE,MAAO5G,GAAM,IAADgB,EACZoD,EAAsB,QAAbpD,EAAChB,EAAIe,gBAAQ,IAAAC,OAAA,EAAZA,EAAcpB,KAC1B,GAemCV,SAAA,CAC3B8C,eAAC+C,IAAKG,MAAK,CAACC,UAAU,WAAUjG,SAAA,CAC9BgC,cAAC6D,IAAKK,MAAK,CAAC5D,UAAU,SAAQtC,SAAC,aAC/BgC,cAAC6D,IAAKM,QAAO,CACXE,KAAK,OACLC,YAAY,WACZhB,KAAK,WACLhD,UAAWC,IAAO6D,MAClBlE,MAAOS,EACP4D,SAAUpB,OAGE,QADHV,EACZQ,EAAOtC,gBAAQ,IAAA8B,OAAA,EAAfA,EAAiB+B,KAAI,CAACtF,EAASuF,IAC9BzE,cAAC0E,IAAK,CAAWC,QAAQ,UAAS3G,SAC/BkB,GADSuF,KAKd3D,eAAC+C,IAAKG,MAAK,CAACC,UAAU,WAAUjG,SAAA,CAC9BgC,cAAC6D,IAAKK,MAAK,CAAC5D,UAAU,SAAQtC,SAAC,aAC/BgC,cAAC6D,IAAKM,QAAO,CACXE,KAAK,WACLC,YAAY,WACZhB,KAAK,WACLhD,UAAWC,IAAO6D,MAClBlE,MAAOsF,EACPjB,SAAUpB,OAGE,QADHT,EACZO,EAAOuC,gBAAQ,IAAA9C,OAAA,EAAfA,EAAiB8B,KAAI,CAACtF,EAASuF,IAC9BzE,cAAC0E,IAAK,CAAWC,QAAQ,UAAS3G,SAC/BkB,GADSuF,KAIdzE,cAAC4E,IAAM,CACLtE,UAAS,GAAAI,OAAKmE,IAAUD,OAAM,KAAAlE,OAAImE,IAAUC,KAAI,KAAApE,OAAImE,IAAUE,QAC9DV,KAAK,SAAQrG,SACd,YAGuB,QADf4E,EACRK,EAAO+B,wBAAgB,IAAApC,OAAA,EAAvBA,EAAyB4B,KAAI,CAACtF,EAASuF,IACtCzE,cAAC0E,IAAK,CAAWC,QAAQ,UAAUrE,UAAU,OAAMtC,SAChDkB,GADSuF,WAMlBzE,cAACuC,IAAS,CAACjC,UAAS,QAAAI,OAAUgD,IAAUC,SAAU3F,SAChD8C,eAACmE,IAAI,CAAC3E,UAAWC,IAAO0E,KAAM7D,GAAG,UAASpD,SAAA,CAAC,0BAClBgC,cAAA,QAAAhC,SAAM,yBAInCgC,cAACwD,IAAG,CACFC,GAAI,EACJnD,UAAS,iCAAAI,OAAmCH,IAAOoF,WAAY3H,SAE/DgC,cAACmF,IAAK,CACJ7E,UAAS,GAAAI,OAAKgD,IAAU0B,aACxBhF,IAAK,sEAKf,ECtHA,MAsBawF,EAAW,mCACXC,EAvBiBC,KAC5B,MAAMC,EACJ,iEAEF,OADeC,OAAOC,gBAAgB,IAAIC,WAAWJ,IACvCK,QAAO,CAACC,EAAKC,IAAMD,EAAML,EAASM,EAAIN,KAAkB,GAAG,EAmB/CO,CAAqB,IACpCC,EAAmBhI,UAC9B,MAAMiI,OAjBOjI,WACb,MACMG,GADU,IAAI+H,aACCC,OAAOC,GAC5B,OAAOC,OAAOZ,OAAOa,OAAOC,OAAO,UAAWpI,EAAK,EAc9BqI,CAAOlB,GAC5B,OAZoBmB,EAYAR,EAXbS,KAAKC,OAAOC,gBAAgB,IAAIjB,WAAWc,KAC/CI,QAAQ,KAAM,IACdA,QAAQ,MAAO,KACfA,QAAQ,MAAO,KAJEJ,KAYO,EAItB,IAAIK,EAITA,EACE,sEC5BG,MAAMC,EAAiBA,KAwD5BhJ,qBAAU,KAER,IAAIiJ,EADc,IAAIC,gBAAgBZ,OAAOa,SAASC,QACjC/I,IAAI,QACrB4I,IACFX,OAAOe,aAAaC,QAAQ,OAAQL,GArCvBhJ,WAEf,IAAIsH,EAAe8B,aAAaE,QAAQ,iBAExC,MAAMC,EAAU,CACdC,OAAQ,OACR5K,QAAS,CACP,eAAgB,qCAElB6K,KAAM,IAAIR,gBAAgB,CACxBS,UAAWrC,EACXsC,WAAY,qBACZX,OACAY,aAAcd,EACde,cAAevC,KAKbmC,QAAaK,MADP,yCACkBP,GACxBjI,QAAiBmI,EAAKM,OAExBzI,EAAS0I,aACXZ,aAAaC,QAAQ,eAAgB/H,EAAS0I,cAE9CvJ,QAAQC,IAAI,UAAWY,EACzB,EAYE2I,CAASjB,GACX,GACC,IAEI,CAAEkB,qBAboBlK,eAnDCA,WAC5B,MACMmK,EAAU,IAAIC,IAAI,0CAGxB/B,OAAOe,aAAaC,QAAQ,gBAAiB/B,GAE7C,MAAM+C,QAAsBrC,IAEtBsC,EAAS,CACbC,cAAe,OACfb,UAAWrC,EACXmD,MAXY,8CAYZC,sBAAuB,OACvBC,eAAgBL,EAChBT,aAAcd,GAGhBqB,EAAQhB,OAAS,IAAIF,gBAAgBqB,GAAQK,WAC7CtC,OAAOa,SAAS0B,KAAOT,EAAQQ,UAAU,EAiCnCE,EAAuB,IC7DpBC,EAA0B3L,0BAC1B4L,EAA6B5L,0BAG7B6L,EAAyBA,IACpC1L,qBAAWyL,GAEAE,EAA2BzL,IAAmB,IAAlB,SAAEC,GAAUD,EACnD,MAAO0L,EAAkBC,GAAuBvL,mBAC9C,wCAGF,OACE6B,cAACqJ,EAAwBpJ,SAAQ,CAACC,MAAOuJ,EAAiBzL,SACxDgC,cAACsJ,EAA2BrJ,SAAQ,CAACC,MAAOwJ,EAAoB1L,SAC7DA,KAE8B,ECPxB2L,MARQA,IAEnB3J,cAAA,OAAAhC,SACEgC,cAACqB,IAAe,CAACC,KAAMsI,IAAepI,KAAK,MAAMqI,MAAI,M,wCCyG5CC,OAlGC/L,IAAiB,IAAhB,OAAEgM,GAAQhM,EACzB,MAAOiM,EAAaC,GAAkB9L,mBAAS,OACxC+L,EAAWC,GAAgBhM,oBAAS,GAgC3C,OA9BAG,qBAAU,KAER,MACME,EADcxB,IAAMyB,YACCD,SAsB3B,OAJA2L,GAAa,GAhBY5L,WACvB,IACE,MAAM,KAAEG,SAAepB,EAASqB,IAAI,YAAD+B,OAAaqJ,GAAU,CACxDnL,YAAaJ,EAAOK,QAEtBoL,EAAevL,GACfyL,GAAa,EACf,CAAE,MAAOrL,GACH9B,IAAM+B,SAASD,GACjBE,QAAQC,IAAI,mBAAoBH,EAAII,SAEpCF,QAAQC,IAAIH,EAEhB,GAIFsL,GAGO,KACL5L,EAAO6L,OAAO,mBAAmB,CAClC,GACA,CAACN,IAEGG,EAELpJ,eAACyB,IAAS,CACRjC,UAAWC,KAAO+J,iBAClBrI,MAAO,CAAEsI,gBAAgB,OAAD7J,OAASsJ,EAAYQ,WAAU,MAAMxM,SAAA,CAG7DgC,cAACuC,IAAS,CAAAvE,SACR8C,eAACyC,IAAG,CAAAvF,SAAA,CACFgC,cAACwD,IAAG,CAACiH,GAAI,EAAEzM,SACTgC,cAACqB,IAAe,CACdC,KAAMoJ,IACNlJ,KAAK,KACLlB,UAAWC,KAAOc,oBAGtBrB,cAACwD,IAAG,CAACiH,GAAI,EAAEzM,SACTgC,cAAA,MAAAhC,SAAKgM,EAAYW,UAEnB3K,cAACwD,IAAG,CAACiH,GAAI,EAAEzM,SAAC,kBAKhBgC,cAACuC,IAAS,CAACjC,UAAWC,KAAOqK,eAAe5M,SAC1C8C,eAACyC,IAAG,CAAAvF,SAAA,CACFgC,cAACwD,IAAG,CAACiH,GAAI,EAAEzM,SACTgC,cAACG,EAAM,CAACC,IAAK4J,EAAYa,MAAOxK,OAAQ,QAE1CL,cAACwD,IAAG,CAACiH,GAAI,EAAEzM,SACT8C,eAACyC,IAAG,CAAAvF,SAAA,CACF8C,eAAC0C,IAAG,CAACiH,GAAI,EAAEzM,SAAA,CACTgC,cAAA,MAAAhC,SAAKgM,EAAYc,kBACjB9K,cAAA,KAAAhC,SAAG,iBAEL8C,eAAC0C,IAAG,CAACiH,GAAI,EAAEzM,SAAA,CACTgC,cAAA,MAAAhC,SAAKgM,EAAYe,kBACjB/K,cAAA,KAAAhC,SAAG,iBAEL8C,eAAC0C,IAAG,CAACiH,GAAI,EAAEzM,SAAA,CACTgC,cAAA,MAAAhC,SAAKgM,EAAYgB,kBACjBhL,cAAA,KAAAhC,SAAG,8BASfgC,cAAAe,WAAA,CAAA/C,SAEE8C,eAACyB,IAAS,CAACjC,UAAWC,KAAO+J,iBAAiBtM,SAAA,CAC5CgC,cAACuC,IAAS,CAAAvE,SACRgC,cAAC2J,EAAc,CAACrJ,UAAW2K,KAAcC,aAE3ClL,cAACuC,IAAS,CAACjC,UAAWC,KAAOqK,eAAe5M,SAC1CgC,cAAC2J,EAAc,CAACrJ,UAAW2K,KAAcC,iBAIhD,E,UCvEYC,OAhCf,SAAkBpN,GAAgB,IAAf,SAAEqN,GAAUrN,EAC7B,MAAOsN,EAAaC,GAAkBnN,mBAAS,IAO/C,OACE6B,cAAC6D,IAAI,CAACC,SANavF,UACnBgN,EAAExH,iBACFqH,EAASC,EAAY,EAIQrN,SAC3BgC,cAAC6D,IAAKG,MAAK,CAACC,UAAU,aAAYjG,SAChC8C,eAAC0K,KAAU,CAAAxN,SAAA,CACTgC,cAAC6D,IAAKM,QAAO,CACXE,KAAK,OACLC,YAAY,iBACZC,SAAWgH,GAAMD,EAAeC,EAAElI,OAAOnD,SAE3CF,cAACwL,KAAWC,OAAM,CAAAzN,SAChBgC,cAAC4E,IAAM,CAACP,KAAK,SAAS/D,UAAWuE,IAAUD,OAAO5G,SAChDgC,cAACqB,IAAe,CACdC,KAAMoK,IACNzJ,MAAO,CAAEC,MAAO,WAChBV,KAAK,iBAQrB,E,oBCbemK,OAVE5N,IAAuB,IAAtB,MAAE8M,EAAK,MAAEe,GAAO7N,EAChC,OACEiC,cAAA,OACEI,IAAKyK,GAXT,wFAYIvK,UAAWC,KAAO4E,MAClB1E,IAAG,GAAAC,OAAKkL,EAAK,iBACb,E,8BCkBSC,OArBf,SAAqBC,GACnB,OACEhL,eAACiL,KAAK,IAAKD,EAAOtK,KAAK,KAAK,kBAAgB,qBAAqBwK,UAAQ,EAAAhO,SAAA,CACvEgC,cAAC+L,KAAMnI,OAAM,CAACtD,UAAWC,KAAOqD,OAAQqI,aAAW,EAAAjO,SACjDgC,cAAC+L,KAAMG,MAAK,CAACC,GAAG,qBAAqB7L,UAAWC,KAAO6L,MAAMpO,SAC1D8N,EAAMF,UAGX5L,cAAC+L,KAAMM,KAAI,CAAC/L,UAAWC,KAAO8L,KAAKrO,SAAE8N,EAAM9D,OAC3ClH,eAACiL,KAAMO,OAAM,CAAChM,UAAWC,KAAO+L,OAAOtO,SAAA,CACrCgC,cAAC4E,IAAM,CAAC2H,QAAST,EAAMU,OAAQlM,UAAWuE,IAAUD,OAAO5G,SAAC,UAG5DgC,cAAC4E,IAAM,CAAC2H,QAAST,EAAMW,UAAWnM,UAAWuE,IAAUD,OAAO5G,SAAC,iBAMvE,E,oBCsCe0O,OA3Df,SAA0B3O,GAA8B,IAAD4O,EAAA,IAA1BC,aAAcC,GAAU9O,EACnD,MAAME,EAAcL,KACbkP,EAAWC,GAAgB5O,oBAAS,IACpC8E,EAAQC,GAAa/E,mBAAS,CAAC,IAC/B6O,EAAWC,GAAgB9O,oBAAS,GA0B3C,OACE2C,eAAAC,WAAA,CAAA/C,SAAA,CACEgC,cAAC4E,IAAM,CAAC2H,QAASA,IAAMQ,GAAa,GAAOzM,UAAWC,KAAOqE,OAAO5G,SAClEgC,cAACqB,IAAe,CAACC,KAAM4L,QAGxBF,IAAmB,OAAN/J,QAAM,IAANA,OAAM,EAANA,EAAQ/D,UACpBc,cAAC0E,IAAK,CACJC,QAAQ,UACRwI,QAASA,IAAMF,GAAa,GAC5BG,aAAW,EAAApP,SAEViF,EAAO/D,UAIZc,cAAC6L,GAAW,CACVwB,KAAMP,EACNN,OAAQA,IAAMO,GAAa,GAC3BN,UA3CelO,UAAkB,IAAD+O,EACpClK,EAAMW,iBACN,MAAMrF,EAAO,CACX6O,WAAYV,EAASV,GACrBP,MAAOiB,EAASvJ,KAChBuH,MAAyB,QAApByC,EAAET,EAASW,OAAO,UAAE,IAAAF,OAAA,EAAlBA,EAAoBG,IAC3BA,IAAKZ,EAASa,cAAcC,QAC5BC,WAAYf,EAASgB,IACrBlD,MAAO1M,EAAYkO,IAGrB,IACE,MAAMtM,QAAiBrC,EAASJ,KAAK,aAAcsB,GACnDM,QAAQC,IAAIY,GACZkN,GAAa,EACf,CAAE,MAAOe,GAAQ,IAADC,EACd7K,EAAU,CACRhE,SACgB,QAAd6O,EAAAD,EAAMjO,gBAAQ,IAAAkO,OAAA,EAAdA,EAAgBrP,OAAQ,4CAE5BuO,GAAa,EACf,GAuBIrB,MAAK,QAAAlL,OAAUmM,EAASvJ,KAAI,sBAC5B0E,KACEhI,cAAC2L,GAAQ,CAACd,MAAyB,QAApB8B,EAAEE,EAASW,OAAO,UAAE,IAAAb,OAAA,EAAlBA,EAAoBc,IAAK7B,MAAOiB,EAASvJ,WAKpE,E,oBC4De0K,OArHWA,KACxB,MAAM,qBAAEvF,GAAyBnB,IAC3BoC,EAAsBH,IACtBtL,EAAcL,KACbqQ,EAAeC,GAAoB/P,sBACnC8E,EAAQC,GAAa/E,mBAAS,CAAC,IAC/B6O,EAAWC,GAAgB9O,oBAAS,GAG3CG,qBAAU,KACR,MAAM6P,EAAaxG,aAAaE,QAAQ,cACxC7I,QAAQC,IAAIkP,GACRA,IACFD,EAAiBE,KAAKC,MAAMF,IAC5BnP,QAAQC,IAAImP,KAAKC,MAAMF,IACzB,GACC,IAqDH,OACErN,eAAAC,WAAA,CAAA/C,SAAA,CACEgC,cAAC8J,GAAO,CAACC,OAAmB,OAAX9L,QAAW,IAAXA,OAAW,EAAXA,EAAaqQ,KAC9BxN,eAACyB,IAAS,CAACjC,UAAWC,KAAOgC,UAAUvE,SAAA,CACrCgC,cAACmL,GAAS,CAACC,SAvDI7M,UAEnB,IAAK8M,EAGH,OAFAnI,EAAU,CAAEhE,QAAS,+BACrB+N,GAAa,GAIf,MAAMsB,EAAa,IAAIC,gBACjBC,EAASF,EAAWE,OAE1B,IAAK,IAADC,EAAAC,EAAAC,EACF,MAAM/O,QAAiBwI,MAAM,uCAAD3H,OACa2K,EAAW,4CAClD,CACElO,QAAS,CACP0R,cAAe,UAAYlH,aAAaE,QAAQ,iBAElD4G,OAAQA,IAGN/P,QAAamB,EAASyI,OAGtBwG,EAAe,KACJ,QAAXJ,EAAAhQ,EAAKqQ,cAAM,IAAAL,OAAA,EAAXA,EAAaM,QAAS,OACR,QAAdL,EAAAjQ,EAAKuQ,iBAAS,IAAAN,OAAA,EAAdA,EAAgBK,QAAS,OACb,QAAZJ,EAAAlQ,EAAKwQ,eAAO,IAAAN,OAAA,EAAZA,EAAcI,QAAS,IAG7Bd,EAAiBY,GACjB9P,QAAQC,IAAI6P,GAEZnH,aAAaC,QAAQ,aAAcwG,KAAKe,UAAUL,GACpD,CAAE,MAAOhB,GAAQ,IAADC,EACd7K,EAAU,CACRhE,SAAuB,QAAd6O,EAAAD,EAAMjO,gBAAQ,IAAAkO,OAAA,EAAdA,EAAgBrP,OAAQ,kCAEnCuO,GAAa,EACf,CAGA,MAAO,KACLsB,EAAWa,OAAO,CACnB,IAYIpC,IAAmB,OAAN/J,QAAM,IAANA,OAAM,EAANA,EAAQ/D,UACpBc,cAAC0E,IAAK,CACJC,QAAQ,UACRwI,QAASA,IAAMF,GAAa,GAC5BG,aAAW,EAAApP,SAEViF,EAAO/D,UAGZc,cAAC4E,IAAM,CAAC2H,QAAS9D,EAAqBzK,SAAC,iBACvCgC,cAACuC,IAAS,CAAAvE,SACRgC,cAACuD,IAAG,CAAAvF,SACY,OAAbiQ,QAAa,IAAbA,OAAa,EAAbA,EAAezJ,KAAK6K,IAAM,IAAAC,EAAA,OACzBxO,eAAC0C,IAAG,CACFlD,UAAWC,KAAOgP,aAElB9E,GAAI,EACJhH,GAAI,EAAEzF,SAAA,CAENgC,cAAC4E,IAAM,CACLD,QAAQ,OACR4H,QAASA,KAAMiD,OA9BC3B,EA8BsBwB,EAAOxB,SA7B3DnE,EAAoBmE,GADUA,KA8BkC,EAClDvN,UAAWC,KAAOgP,aAAavR,SAE/BgC,cAAC2L,GAAQ,CAACd,MAAuB,QAAlByE,EAAED,EAAO7B,OAAO,UAAE,IAAA8B,OAAA,EAAhBA,EAAkB7B,IAAK7B,MAAOyD,EAAO/L,SAExDtD,cAACuD,IAAG,CAAAvF,SACF8C,eAAC0C,IAAG,CAAAxF,SAAA,CACF8C,eAAA,QAAA9C,SAAA,CAAOqR,EAAO/L,KAAK,OACnBtD,cAAA,QAAAhC,SACEgC,cAAC0M,GAAiB,CAACE,aAAcyC,aAflCA,EAAOlD,GAmBR,aAKb,E,wCCxFQsD,OAnCf,WACE,MAAMC,EAAYC,mBACZlG,ERDiC5L,qBAAWwL,IQE3CuG,EAAiBC,GAAsB1R,mBAAS,MA6BvD,OA3BAG,qBAAU,KACR,MAAMwR,EAASC,SAASC,cAAc,UACtCF,EAAO1P,IAAM,+CACb0P,EAAOvR,OAAQ,EACfwR,SAAS/H,KAAKiI,YAAYH,GAE1BlJ,OAAOsJ,wBAA2BC,IAChC,MAAMC,EAAU,CACd5P,MAAO,OACPH,OAAQ,QACRwN,IAAKpE,GAOP0G,EAAUE,iBAAiBX,EAAUY,QAASF,GAJ5BG,IAChBV,EAAmBU,EAAgB,GAG2B,CACjE,GACA,CAAC9G,IAEJnL,qBAAU,KACJsR,GACFA,EAAgBY,QAAQ/G,EAC1B,GACC,CAACA,EAAkBmG,IAEf5P,cAAA,OAAKyQ,IAAKf,GACnB,ECHegB,OA3Bf,WACE,OACE1Q,cAAC2Q,KACC,CACArQ,UAAWC,KAAOqQ,kBAAkB5S,SAEpC8C,eAAC+P,KAAI,CAACvQ,UAAWC,KAAOsQ,KAAK7S,SAAA,CAC3BgC,cAAC6Q,KAAKjN,OAAM,CAACtD,UAAWC,KAAOqD,OAAO5F,SACpCgC,cAAC2Q,KAAUG,OAAM,CACfC,GAAInM,IACJD,QAAQ,OACRqM,SAAS,IACT1Q,UAAWC,KAAOgP,aAAavR,SAE/BgC,cAACqB,IAAe,CAACC,KAAM2P,UAG3BjR,cAAC2Q,KAAUO,SAAQ,CAACF,SAAS,IAAGhT,SAC9BgC,cAAC6Q,KAAKxE,KAAI,CAAC/L,UAAWC,KAAOgP,aAAavR,SACxCgC,cAACyP,GAAa,YAM1B,E,iCCwDe0B,OAxEOpT,IAA2C,IAA1C,OAAEqT,EAAS,GAAE,YAAEC,GAAc,GAAOtT,EACzD,MAAOkR,EAAWqC,GAAgBnT,mBAAS,KACpC+L,EAAWC,GAAgBhM,oBAAS,GACrCC,EAAUC,cAiChB,OA/BAC,qBAAU,KAER,MACME,EADcxB,IAAMyB,YACCD,SAuB3B,OAJA2L,GAAa,GAjBU5L,WACrB,IACE,MAAM,KAAEG,SAAepB,EAASqB,IAAI,cAAD+B,OAAe0Q,GAAU,CAC1DxS,YAAaJ,EAAOK,QAEtByS,EAAa5S,GACbM,QAAQC,IAAIP,GACZyL,GAAa,EACf,CAAE,MAAOrL,GACH9B,IAAM+B,SAASD,GACjBE,QAAQC,IAAI,mBAAoBH,EAAII,SAEpCF,QAAQC,IAAIH,EAEhB,GAIFyS,GAGO,KACL/S,EAAO6L,OAAO,mBAAmB,CAClC,GACA,CAAC+G,IAEGlH,EACLlK,cAACuC,IAAS,CACRjC,UAAW+Q,EAAc9Q,KAAO+J,iBAAmB/J,KAAOgC,UAAUvE,SAEpEgC,cAACwR,KAAc,CACbC,WAAYxC,EAAUyC,QAAQ5L,OAC9B6L,OAAQ3R,cAAC2J,EAAc,IACvBiI,UAAW3C,EAAU4C,KACrBA,KAAMA,ICnDetT,OAAOuT,EAAUC,KAC5C,IACE,MAAM,KAAErT,SAAepB,EAASqB,IAAImT,EAASD,MAC7CE,GAAaC,IAAY,IACpBA,EACHH,KAAMnT,EAAKmT,KACXH,QAAShT,EAAKgT,QAAQvL,QAAO,CAACC,EAAK6L,IAC1B7L,EAAI8L,MAAMC,GAAcA,EAAUhG,KAAO8F,EAAK9F,KACjD/F,EACA,IAAIA,EAAK6L,IACZD,EAAaN,YAEpB,CAAE,MAAO5S,GACPE,QAAQC,IAAIH,EACd,GDqCkBsT,CAAcnD,EAAWqC,GACrChR,UAAWC,KAAOiR,eAAexT,SAEjCgC,cAACuD,IAAG,CAAAvF,SACDiR,EAAUyC,QAAQlN,KAAKqI,GACtB7M,cAACwD,IAAG,CACFlD,UAAWoD,IAAU6L,aAErB9E,GAAI,EACJhH,GAAI,EAAEzF,SAENgC,cAAC4E,IAAM,CACLD,QAAQ,OACR4H,QAASA,IAAMnO,EAAQqB,KAAK,aAADiB,OAAcmM,EAASV,KAClD7L,UAAWC,KAAOqE,OAAO5G,SAEzBgC,cAAC2L,GAAQ,CAACd,MAAOgC,EAAShC,MAAOe,MAAOiB,EAASjB,WAT9CiB,EAASV,YAiBxBnM,cAAC2J,EAAc,CAACrJ,UAAW2K,KAAcC,UAC1C,EErEYmH,OAVKA,KAClB,MAAM,OAAEtI,GAAWuI,cACnB,OACExR,eAAAC,WAAA,CAAA/C,SAAA,CACEgC,cAAC8J,GAAO,CAACC,OAAQA,IACjB/J,cAACmR,GAAa,CAACC,OAAM,kBAAA1Q,OAAoBqJ,GAAUsH,aAAW,MAC7D,E,oBCqEQkB,OArEQA,KACrB,MAAM,GAAEpG,GAAOmG,eACRzF,EAAU2F,GAAerU,mBAAS,KAClCsU,EAASC,GAAcvU,mBAAS,IAEjCC,GADsBmL,IACZlL,eAEhBC,qBAAU,KACcC,WACpB,IACE,OAASG,KAAMmO,IAAcnO,KAAM+T,UAAmB9S,QAAQgT,IAAI,CAChErV,EAASqB,IAAI,aAAD+B,OAAcyL,IAC1B7O,EAASqB,IAAI,qBAAD+B,OAAsByL,MAGpCqG,EAAY3F,GACZ6F,EAAWD,GACXzT,QAAQC,IAAI4N,GACZ7N,QAAQC,IAAIwT,EACd,CAAE,MAAO3T,GACPE,QAAQC,IAAIH,EACd,GAGF8T,EAAe,GACd,CAACzG,IAOJ,OACErL,eAAAC,WAAA,CAAA/C,SAAA,CACEgC,cAAC8J,GAAO,CAACC,OAAQ8C,EAASgG,WAC1B7S,cAACuC,IAAS,CAACjC,UAAWC,KAAOgC,UAAUvE,SACrC8C,eAACyC,IAAG,CAAAvF,SAAA,CACFgC,cAACwD,IAAG,CAACiH,GAAI,EAAEzM,SACTgC,cAAC4E,IAAM,CACLD,QAAQ,OACR4H,QAASA,IAAMnO,EAAQsH,SACvBpF,UAAWC,KAAOqE,OAAO5G,SAEzBgC,cAAC2L,GAAQ,CAACd,MAAOgC,EAAShC,MAAOe,MAAOiB,EAASjB,YAGrD9K,eAAC0C,IAAG,CAACiH,GAAI,EAAEzM,SAAA,CACTgC,cAACuD,IAAG,CAAAvF,SACFgC,cAACwD,IAAG,CAAAxF,SACFgC,cAAA,MAAAhC,SAAK6O,EAASjB,YAGlB9K,eAACyC,IAAG,CAAAvF,SAAA,CACF8C,eAAC0C,IAAG,CAACiH,GAAI,EAAEzM,SAAA,CACTgC,cAAA,MAAAhC,SAAI,mBACJgC,cAAA,KAAAhC,SAAI6O,EAASiG,gBAAkB,SAEjChS,eAAC0C,IAAG,CAACiH,GAAI,EAAEzM,SAAA,CACTgC,cAAA,MAAAhC,SAAI,iBACJgC,cAAA,KAAAhC,SAAI6O,EAASkG,gCAMtB,ECrBQC,OA1Cf,WACE,MAAM/U,EAAcL,IACdiE,GAAwB,OAAX5D,QAAW,IAAXA,OAAW,EAAXA,EAAaqQ,KAAM,GAEtC,OACExN,eAAA,OAAKR,UAAWC,IAAOyS,IAAIhV,SAAA,CACzBgC,cAACY,EAAM,IACPZ,cAAC0Q,GAAe,IAChB5P,eAACmS,IAAM,CAAAjV,SAAA,CACLgC,cAACkT,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,OAAQA,IAAMrT,cAAA,MAAAhC,SAAI,gBACxCgC,cAACkT,IAAK,CAACC,OAAK,EAACC,KAAK,UAAUC,OAAQA,IAAMrT,cAACqF,EAAU,MACrDrF,cAACkT,IAAK,CAACC,OAAK,EAACC,KAAK,UAAUC,OAAQA,IAAMrT,cAACwC,EAAU,MACrDxC,cAACkT,IAAK,CAACC,OAAK,EAACC,KAAK,mBAAmBC,OAAQA,IAAMrT,cAACqS,GAAW,MAC/DrS,cAACkT,IAAK,CACJC,OAAK,EACLC,KAAK,WACLC,OAAQA,IACNrT,cAACmR,GAAa,CAACC,OAAM,2BAAA1Q,OAA6BmB,OAGtD7B,cAACkT,IAAK,CAACC,OAAK,EAACC,KAAK,gBAAgBC,OAAQA,IAAMrT,cAACuS,GAAc,MAC/DvS,cAACkT,IAAK,CACJC,OAAK,EACLC,KAAK,QACLC,OAAQA,IACNrT,cAACmR,GAAa,CACZC,OAAM,sCAAA1Q,OAAwCmB,OAIpD7B,cAACkT,IAAK,CACJC,OAAK,EACLC,KAAK,kBACLC,OAAQA,IAAMrT,cAACgO,GAAiB,MAElChO,cAACkT,IAAK,CAACC,OAAK,EAACC,KAAK,eAAeC,OAAQA,IAAMrT,cAAA,MAAAhC,SAAI,kBACnDgC,cAACkT,IAAK,CAACG,OAAQA,IAAMrT,cAAA,MAAAhC,SAAI,2BAIjC,EC1CesV,OAZSC,IAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK1V,IAAkD,IAAjD,OAAE2V,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS/V,EACpE2V,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EAAY,GAExB,ECAFQ,IAASV,OACPrT,cAACgU,IAAMC,WAAU,CAAAjW,SACfgC,cAAClC,EAAmB,CAAAE,SAClBgC,cAACwJ,EAAwB,CAAAxL,SACvBgC,cAACkU,IAAM,CAAAlW,SACLgC,cAACgT,GAAG,YAKZjD,SAASoE,eAAe,SAM1Bb,I,qBCxBAc,EAAOC,QAAU,CAAC,IAAM,0BAA0B,MAAQ,4BAA4B,OAAS,6BAA6B,KAAO,2BAA2B,UAAY,gCAAgC,UAAY,gC,qBCAtND,EAAOC,QAAU,CAAC,iBAAmB,iCAAiC,QAAU,wBAAwB,OAAS,uB,qBCAjHD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,aAAe,6B,qBCA7FD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,qBAAqB,YAAc,yBAAyB,aAAe,0B,qBCA9HD,EAAOC,QAAU,CAAC,iBAAmB,kCAAkC,gBAAkB,iCAAiC,eAAiB,gC,qBCA3ID,EAAOC,QAAU,CAAC,kBAAoB,2CAA2C,OAAS,gCAAgC,KAAO,8BAA8B,aAAe,sC,qBCA9KD,EAAOC,QAAU,CAAC,SAAW,iC,qBCA7BD,EAAOC,QAAU,CAAC,OAAS,4BAA4B,KAAO,0BAA0B,MAAQ,2BAA2B,OAAS,4B,qBCApID,EAAOC,QAAU,CAAC,UAAY,iCAAiC,iBAAmB,wCAAwC,OAAS,8BAA8B,eAAiB,sC,qBCAlLD,EAAOC,QAAU,CAAC,UAAY,qCAAqC,aAAe,wC,qBCAlFD,EAAOC,QAAU,CAAC,UAAY,kCAAkC,OAAS,+B,qBCAzED,EAAOC,QAAU,CAAC,OAAS,uB,qBCA3BD,EAAOC,QAAU,CAAC,MAAQ,wB,qBCA1BD,EAAOC,QAAU,CAAC,OAAS,kC","file":"static/js/main.65f885c9.chunk.js","sourcesContent":["// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport axios from 'axios';\n\naxios.defaults.baseURL = '/api';\naxios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\naxios.defaults.withCredentials = true;\n\nexport const axiosReq = axios.create();\nexport const axiosRes = axios.create();","// CREDIT: Code taken from Code Institute's 'Moments' walkthrough project\nimport { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { axiosReq, axiosRes } from '../api/axiosDefaults';\nimport { useHistory } from 'react-router';\n// import { removeTokenTimestamp, shouldRefreshToken } from '../utils/utils';\n\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory();\n\n  const handleMount = async () => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    try {\n      const { data } = await axiosRes.get('dj-rest-auth/user/', {\n        cancelToken: source.token,\n      });\n      setCurrentUser(data);\n    } catch (err) {\n      if (axios.isCancel(err)) {\n        console.log('Request canceled', err.message);\n      } else {\n        console.log(err);\n      }\n    }\n\n    // Cleanup\n    return () => {\n      source.cancel('Request canceled');\n    };\n  };\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  useMemo(() => {\n    axiosReq.interceptors.request.use(\n      async (config) => {\n        // if (shouldRefreshToken()) {\n        try {\n          await axios.post('/dj-rest-auth/token/refresh/');\n        } catch (err) {\n          setCurrentUser((prevCurrentUser) => {\n            if (prevCurrentUser) {\n              history.push('/signin');\n            }\n            return null;\n          });\n          // removeTokenTimestamp();\n          return config;\n        }\n        // }\n        return config;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n\n    axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err.response?.status === 401) {\n          try {\n            await axios.post('/dj-rest-auth/token/refresh/');\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                history.push('/signin');\n              }\n              return null;\n            });\n            // removeTokenTimestamp();\n          }\n          return axios(err.config);\n        }\n        return Promise.reject(err);\n      }\n    );\n  }, [history]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n","import React from 'react';\nimport styles from '../styles/Avatar.module.css';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nconst Avatar = ({ src, height = 45 }) => {\n  const currentUser = useCurrentUser();\n  return (\n    <span>\n      <img\n        className={styles.Avatar}\n        src={src}\n        height={height}\n        width={height}\n        alt={`${currentUser?.username}' avatar`}\n      />\n    </span>\n  )\n}\n\nexport default Avatar","import styles from '../styles/NavBar.module.css';\nimport React from 'react';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpotify } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faStar,\n  faPeopleGroup,\n  faSquare,\n  faUserPlus,\n  faRightToBracket,\n} from '@fortawesome/free-solid-svg-icons';\nimport { NavLink } from 'react-router-dom';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport Avatar from './Avatar';\n\nconst NavBar = () => {\n  const currentUser = useCurrentUser();\n\n  const loggedOutIcons = (\n    <>\n      <Nav className='m-auto'>\n        <NavLink\n          className={styles.NavLink}\n          activeClassName={styles.Active}\n          to='/signup'\n        >\n          {/* Signup icon */}\n          <FontAwesomeIcon icon={faUserPlus} size='2xl' />\n        </NavLink>\n        Sign Up!\n      </Nav>\n\n      <Nav className='m-auto'>\n        <NavLink\n          className={styles.NavLink}\n          activeClassName={styles.Active}\n          to='/signin'\n        >\n          {/* Signin icon */}\n          <FontAwesomeIcon icon={faRightToBracket} size='2xl' />\n        </NavLink>\n        Login\n      </Nav>\n    </>\n  );\n  const loggedInIcons = (\n    <>\n      <Nav className='mr-auto'>\n        <NavLink\n          className={styles.NavLink}\n          activeClassName={styles.Active}\n          to='/popular'\n        >\n          {/* Star icon */}\n          <FontAwesomeIcon icon={faStar} size='2xl' />\n        </NavLink>\n      </Nav>\n\n      <Nav className='mr-auto'>\n        <NavLink\n          className={styles.NavLink}\n          activeClassName={styles.Active}\n          to='/feed'\n        >\n          {/* Group/Follow icon */}\n          <FontAwesomeIcon icon={faPeopleGroup} size='2xl' />\n        </NavLink>\n      </Nav>\n\n      <Nav>\n        <NavLink\n          className={styles.NavLink}\n          to={`/profile/${currentUser?.profile_id}`}\n        >\n          {/* Profile image */}\n          <Avatar src={currentUser?.profile_image} height={40} />\n        </NavLink>\n      </Nav>\n\n      <Nav className='ml-auto'>\n        <NavLink\n          className={styles.NavLink}\n          activeClassName={styles.Active}\n          to='/placeholder'\n        >\n          {/* Placeholder */}\n          <FontAwesomeIcon icon={faSquare} size='2xl' />\n        </NavLink>\n      </Nav>\n\n      <Nav className='ml-auto'>\n        <NavLink className={styles.NavLink} to='/spotify-search'>\n          {/* Spotify link */}\n          <FontAwesomeIcon\n            icon={faSpotify}\n            style={{ color: '#1db954' }}\n            size='2xl'\n          />\n        </NavLink>\n      </Nav>\n    </>\n  );\n\n  return (\n    <Navbar className={styles.CustomBackground} expand='md' fixed='bottom'>\n      <Container>{currentUser ? loggedInIcons : loggedOutIcons}</Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport styles from '../../styles/SignInUpForm.module.css';\nimport btnStyles from '../../styles/Button.module.css';\nimport appStyles from '../../App.module.css';\n\nimport {\n  Form,\n  Button,\n  Image,\n  Col,\n  Row,\n  Container,\n  Alert,\n} from 'react-bootstrap';\nimport axios from 'axios';\n// import { useRedirect } from '../../hooks/useRedirect';\n\nconst SignUpForm = () => {\n//   useRedirect('loggedIn');\n  const [signUpData, setSignUpData] = useState({\n    username: '',\n    password1: '',\n    password2: '',\n  });\n  const { username, password1, password2 } = signUpData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    setSignUpData({\n      ...signUpData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axios.post('/dj-rest-auth/registration/', signUpData);\n      history.push('/signin');\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <Row className={styles.Row}>\n      <Col className='my-auto py-2 p-md-2' md={6}>\n        <Container className={`${appStyles.Content} p-4 `}>\n          <h1 className={styles.Header}>sign up</h1>\n\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId='username'>\n              <Form.Label className='d-none'>username</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type='text'\n                placeholder='Username'\n                name='username'\n                value={username}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.username?.map((message, idx) => (\n              <Alert variant='warning' key={idx}>\n                {message}\n              </Alert>\n            ))}\n\n            <Form.Group controlId='password1'>\n              <Form.Label className='d-none'>Password</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type='password'\n                placeholder='Password'\n                name='password1'\n                value={password1}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password1?.map((message, idx) => (\n              <Alert key={idx} variant='warning'>\n                {message}\n              </Alert>\n            ))}\n\n            <Form.Group controlId='password2'>\n              <Form.Label className='d-none'>Confirm password</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type='password'\n                placeholder='Confirm password'\n                name='password2'\n                value={password2}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password2?.map((message, idx) => (\n              <Alert key={idx} variant='warning'>\n                {message}\n              </Alert>\n            ))}\n\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright}`}\n              type='submit'\n            >\n              Sign up\n            </Button>\n            {errors.non_field_errors?.map((message, idx) => (\n              <Alert key={idx} variant='warning' className='mt-3'>\n                {message}\n              </Alert>\n            ))}\n          </Form>\n        </Container>\n\n        <Container className={`mt-3 ${appStyles.Content}`}>\n          <Link className={styles.Link} to='/signin'>\n            Already have an account? <span>Sign in</span>\n          </Link>\n        </Container>\n      </Col>\n      <Col\n        md={6}\n        className={`my-auto d-none d-md-block p-2 ${styles.SignUpCol}`}\n      >\n        <Image\n          className={`${appStyles.FillerImage}`}\n          src={'https://codeinstitute.s3.amazonaws.com/AdvancedReact/hero2.jpg'}\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport default SignUpForm;","// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nimport Form from 'react-bootstrap/Form';\nimport Alert from 'react-bootstrap/Alert';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Image from 'react-bootstrap/Image';\nimport Container from 'react-bootstrap/Container';\n\nimport { Link, useHistory } from 'react-router-dom';\n\nimport styles from '../../styles/SignInUpForm.module.css';\nimport btnStyles from '../../styles/Button.module.css';\nimport appStyles from '../../App.module.css';\nimport { useSetCurrentUser } from '../../contexts/CurrentUserContext';\n// import { useRedirect } from '../../hooks/useRedirect';\n\nfunction SignInForm() {\n  const setCurrentUser = useSetCurrentUser();\n//   useRedirect('loggedIn');\n\n  const [signInData, setSignInData] = useState({\n    username: '',\n    password: '',\n  });\n  const { username, password } = signInData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await axios.post('/dj-rest-auth/login/', signInData);\n      setCurrentUser(data.user);\n      history.goBack();\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n\n  const handleChange = (event) => {\n    setSignInData({\n      ...signInData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <Row className={styles.Row}>\n      <Col className='my-auto p-0 p-md-2' md={6}>\n        <Container className={`${appStyles.Content} p-4 `}>\n          <h1 className={styles.Header}>sign in</h1>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId='username'>\n              <Form.Label className='d-none'>Username</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Username'\n                name='username'\n                className={styles.Input}\n                value={username}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.username?.map((message, idx) => (\n              <Alert key={idx} variant='warning'>\n                {message}\n              </Alert>\n            ))}\n\n            <Form.Group controlId='password'>\n              <Form.Label className='d-none'>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Password'\n                name='password'\n                className={styles.Input}\n                value={password}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password?.map((message, idx) => (\n              <Alert key={idx} variant='warning'>\n                {message}\n              </Alert>\n            ))}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright}`}\n              type='submit'\n            >\n              Sign in\n            </Button>\n            {errors.non_field_errors?.map((message, idx) => (\n              <Alert key={idx} variant='warning' className='mt-3'>\n                {message}\n              </Alert>\n            ))}\n          </Form>\n        </Container>\n        <Container className={`mt-3 ${appStyles.Content}`}>\n          <Link className={styles.Link} to='/signup'>\n            Don't have an account? <span>Sign up now!</span>\n          </Link>\n        </Container>\n      </Col>\n      <Col\n        md={6}\n        className={`my-auto d-none d-md-block p-2 ${styles.SignInCol}`}\n      >\n        <Image\n          className={`${appStyles.FillerImage}`}\n          src={'https://codeinstitute.s3.amazonaws.com/AdvancedReact/hero.jpg'}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nexport default SignInForm;","// SOURCE: https://developer.spotify.com/documentation/web-api/tutorials/code-pkce-flow\n\n// Code verifier\nconst generateRandomString = (length) => {\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const values = crypto.getRandomValues(new Uint8Array(length));\n  return values.reduce((acc, x) => acc + possible[x % possible.length], '');\n};\n\n// Code challenge\nconst sha256 = async (plain) => {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return window.crypto.subtle.digest('SHA-256', data);\n};\n\nconst base64encode = (input) => {\n  return btoa(String.fromCharCode(...new Uint8Array(input)))\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n};\n\n// Exports\nexport const clientId = '51c949a050b74ceba5688d10a1c7f5f1';\nexport const codeVerifier = generateRandomString(64);\nexport const getCodeChallenge = async () => {\n  const hashed = await sha256(codeVerifier);\n  return base64encode(hashed);\n};\n\n// Redirect URI\nexport let redirectUri;\nif (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test') {\n  redirectUri = 'http://localhost:3000/spotify-search';\n} else {\n  redirectUri =\n    'https://we-rate-music-drf-1626129441d6.herokuapp.com/spotify-search';\n}\n","// SOURCE: https://developer.spotify.com/documentation/web-api/tutorials/code-pkce-flow\n\nimport { useEffect } from 'react';\nimport {\n  clientId,\n  codeVerifier,\n  getCodeChallenge,\n  redirectUri,\n} from '../utils/spotifyAuthUtils';\n\nexport const useSpotifyAuth = () => {\n  const spotifyAuthentication = async () => {\n    const scope = 'user-read-private user-read-email streaming';\n    const authUrl = new URL('https://accounts.spotify.com/authorize');\n\n    // generated in utils/spotifyAuthUtils.js\n    window.localStorage.setItem('code_verifier', codeVerifier);\n\n    const codeChallenge = await getCodeChallenge();\n\n    const params = {\n      response_type: 'code',\n      client_id: clientId,\n      scope,\n      code_challenge_method: 'S256',\n      code_challenge: codeChallenge,\n      redirect_uri: redirectUri,\n    };\n\n    authUrl.search = new URLSearchParams(params).toString();\n    window.location.href = authUrl.toString();\n  };\n\n  const getToken = async (code) => {\n    // stored from spotifyAuthentication()\n    let codeVerifier = localStorage.getItem('code_verifier');\n\n    const payload = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        client_id: clientId,\n        grant_type: 'authorization_code',\n        code,\n        redirect_uri: redirectUri,\n        code_verifier: codeVerifier,\n      }),\n    };\n\n    const url = 'https://accounts.spotify.com/api/token';\n    const body = await fetch(url, payload);\n    const response = await body.json();\n\n    if (response.access_token) {\n      localStorage.setItem('access_token', response.access_token);\n    } else {\n      console.log('Error: ', response);\n    }\n  };\n\n  const handleAuthentication = async () => {\n    await spotifyAuthentication();\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    let code = urlParams.get('code');\n    if (code) {\n      window.localStorage.setItem('code', code);\n      getToken(code);\n    }\n  }, []);\n\n  return { handleAuthentication };\n};\n","import { createContext, useContext, useState } from 'react';\n\nexport const SpotifyPlayerUriContext = createContext();\nexport const SetSpotifyPlayerUriContext = createContext();\n\nexport const useSpotifyPlayerUri = () => useContext(SpotifyPlayerUriContext);\nexport const useSetSpotifyPlayerUri = () =>\n  useContext(SetSpotifyPlayerUriContext);\n\nexport const SpotifyPlayerUriProvider = ({ children }) => {\n  const [spotifyPlayerUri, setSpotifyPlayerUri] = useState(\n    'spotify:album:1VrravzsxruIeQf1cuE6zB'\n  );\n\n  return (\n    <SpotifyPlayerUriContext.Provider value={spotifyPlayerUri}>\n      <SetSpotifyPlayerUriContext.Provider value={setSpotifyPlayerUri}>\n        {children}\n      </SetSpotifyPlayerUriContext.Provider>\n    </SpotifyPlayerUriContext.Provider>\n  );\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCompactDisc } from '@fortawesome/free-solid-svg-icons';\n\nconst LoadingSpinner = () => {\n  return (\n    <div>\n      <FontAwesomeIcon icon={faCompactDisc} size='2xl' spin />\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { axiosReq } from '../api/axiosDefaults';\nimport axios from 'axios';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBackward } from '@fortawesome/free-solid-svg-icons';\n\nimport Avatar from './Avatar';\nimport LoadingSpinner from './LoadingSpinner';\n\nimport styles from '../styles/Profile.module.css';\nimport loadingStyles from '../styles/LoadingSpinner.module.css';\n\nconst Profile = ({ userId }) => {\n  const [profileData, setProfileData] = useState(null);\n  const [hasLoaded, setHasLoaded] = useState(false);\n\n  useEffect(() => {\n    // Sends a CancelToken with the request\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    const fetchProfileData = async () => {\n      try {\n        const { data } = await axiosReq.get(`profiles/${userId}`, {\n          cancelToken: source.token,\n        });\n        setProfileData(data);\n        setHasLoaded(true);\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          console.log('Request canceled', err.message);\n        } else {\n          console.log(err);\n        }\n      }\n    };\n\n    setHasLoaded(false);\n    fetchProfileData();\n\n    // Cleanup\n    return () => {\n      source.cancel('Request canceled');\n    };\n  }, [userId]);\n\n  return hasLoaded ? (\n    // Profile data loaded\n    <Container\n      className={styles.ProfileContainer}\n      style={{ backgroundImage: `url(${profileData.background})` }}\n    >\n      {/* Header */}\n      <Container>\n        <Row>\n          <Col xs={3}>\n            <FontAwesomeIcon\n              icon={faBackward}\n              size='xl'\n              className={styles.FontAwesomeIcon}\n            />\n          </Col>\n          <Col xs={6}>\n            <h2>{profileData.owner}</h2>\n          </Col>\n          <Col xs={3}>Settings</Col>\n        </Row>\n      </Container>\n\n      {/* Profile picture and stats */}\n      <Container className={styles.StatsContainer}>\n        <Row>\n          <Col xs={3}>\n            <Avatar src={profileData.image} height={100} />\n          </Col>\n          <Col xs={9}>\n            <Row>\n              <Col xs={4}>\n                <h3>{profileData.followers_count}</h3>\n                <p>Followers</p>\n              </Col>\n              <Col xs={4}>\n                <h3>{profileData.following_count}</h3>\n                <p>Following</p>\n              </Col>\n              <Col xs={4}>\n                <h3>{profileData.playlists_count}</h3>\n                <p>Playlists</p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  ) : (\n    // Profile data not yet loaded\n    <>\n      {/* Replicated container structure and styles */}\n      <Container className={styles.ProfileContainer}>\n        <Container>\n          <LoadingSpinner className={loadingStyles.Centered} />\n        </Container>\n        <Container className={styles.StatsContainer}>\n          <LoadingSpinner className={loadingStyles.Centered} />\n        </Container>\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport btnStyles from '../styles/Button.module.css';\nimport { Form, Button, InputGroup } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\n\nfunction SearchBar({ onSearch }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    onSearch(searchQuery);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Group controlId='searchForm'>\n        <InputGroup>\n          <Form.Control\n            type='text'\n            placeholder='Search Spotify'\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n          <InputGroup.Append>\n            <Button type='submit' className={btnStyles.Button}>\n              <FontAwesomeIcon\n                icon={faMagnifyingGlass}\n                style={{ color: '#3d3d3d' }}\n                size='lg'\n              />\n            </Button>\n          </InputGroup.Append>\n        </InputGroup>\n      </Form.Group>\n    </Form>\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport styles from '../styles/Playlist.module.css';\n\n// Set default image if no image is provided\nconst defaultImage =\n  'https://res.cloudinary.com/dxgzepuov/image/upload/v1702896303/default_post_uq5gxz.jpg';\n\n/**\n * Playlist component to display the image of a playlist. Default image is used if no image is provided.\n *\n * @param {string} image - The image URL of the playlist\n * @param {string} title - The title of the playlist\n */\nconst Playlist = ({ image, title }) => {\n  return (\n    <img\n      src={image || defaultImage}\n      className={styles.Image}\n      alt={`${title}'s cover art`}\n    />\n  );\n};\n\nexport default Playlist;\n","import React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\nimport styles from '../styles/ModalWindow.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\n/**\n * ModalWindow component renders a modal window.\n *\n * Must be used with the following props:\n * - show={modalShow}\n * - onHide={() => setModalShow(false)}\n * - onConfirm: custom function\n * - title: string\n * - body: JSX\n */\nfunction ModalWindow(props) {\n  return (\n    <Modal {...props} size='sm' aria-labelledby='confirmation modal' centered>\n      <Modal.Header className={styles.Header} closeButton>\n        <Modal.Title id='confirmation modal' className={styles.Color}>\n          {props.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className={styles.Body}>{props.body}</Modal.Body>\n      <Modal.Footer className={styles.Footer}>\n        <Button onClick={props.onHide} className={btnStyles.Button}>\n          Close\n        </Button>\n        <Button onClick={props.onConfirm} className={btnStyles.Button}>\n          Confirm\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default ModalWindow;\n","import React, { useState } from 'react';\nimport { Button, Alert } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSquarePlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport { axiosRes } from '../api/axiosDefaults';\n\nimport ModalWindow from '../components/ModalWindow';\nimport Playlist from '../components/Playlist';\n\nimport styles from '../styles/AddPlaylistButton.module.css';\n\nfunction AddPlaylistButton({ playlistData: playlist }) {\n  const currentUser = useCurrentUser();\n  const [modalShow, setModalShow] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = {\n      spotify_id: playlist.id,\n      title: playlist.name,\n      image: playlist.images[0]?.url,\n      url: playlist.external_urls.spotify,\n      iframe_uri: playlist.uri,\n      owner: currentUser.id,\n    };\n\n    try {\n      const response = await axiosRes.post('playlists/', data);\n      console.log(response);\n      setModalShow(false);\n    } catch (error) {\n      setErrors({\n        message:\n          error.response?.data || 'Something went wrong! Please try again.',\n      });\n      setShowAlert(true);\n    }\n  };\n\n  return (\n    <>\n      <Button onClick={() => setModalShow(true)} className={styles.Button}>\n        <FontAwesomeIcon icon={faSquarePlus} />\n      </Button>\n\n      {showAlert && errors?.message && (\n        <Alert\n          variant='warning'\n          onClose={() => setShowAlert(false)}\n          dismissible\n        >\n          {errors.message}\n        </Alert>\n      )}\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleSubmit}\n        title={`Add \"${playlist.name}\" to your profile?`}\n        body={\n          <Playlist image={playlist.images[0]?.url} title={playlist.name} />\n        }\n      />\n    </>\n  );\n}\n\nexport default AddPlaylistButton;\n","import React, { useEffect, useState } from 'react';\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap';\n\nimport { useSpotifyAuth } from './useSpotifyAuth';\nimport { useSetSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport Profile from '../components/Profile';\nimport SearchBar from '../components/SearchBar';\nimport Playlist from '../components/Playlist';\nimport AddPlaylistButton from './AddPlaylistButton';\n\nimport styles from '../styles/SpotifySearchPage.module.css';\n\nconst SpotifySearchPage = () => {\n  const { handleAuthentication } = useSpotifyAuth();\n  const setSpotifyPlayerUri = useSetSpotifyPlayerUri();\n  const currentUser = useCurrentUser();\n  const [searchResults, setSearchResults] = useState();\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  // Loads the last search from local storage, if it exists\n  useEffect(() => {\n    const lastSearch = localStorage.getItem('lastSearch');\n    console.log(lastSearch);\n    if (lastSearch) {\n      setSearchResults(JSON.parse(lastSearch));\n      console.log(JSON.parse(lastSearch));\n    }\n  }, []);\n\n  const handleSearch = async (searchQuery) => {\n    // Empty search field\n    if (!searchQuery) {\n      setErrors({ message: 'Search field is empty' });\n      setShowAlert(true);\n      return;\n    }\n\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    try {\n      const response = await fetch(\n        `https://api.spotify.com/v1/search?q=${searchQuery}&type=album%2Cplaylist%2Cartist&limit=50`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('access_token'),\n          },\n          signal: signal,\n        }\n      );\n      const data = await response.json();\n\n      // Combine the items from albums, playlists, and artists\n      const combinedData = [\n        ...(data.albums?.items || []),\n        ...(data.playlists?.items || []),\n        ...(data.artists?.items || []),\n      ];\n\n      setSearchResults(combinedData);\n      console.log(combinedData);\n      // Saves the search results to local storage for later use\n      localStorage.setItem('lastSearch', JSON.stringify(combinedData));\n    } catch (error) {\n      setErrors({\n        message: error.response?.data || 'An error occurred in fetching',\n      });\n      setShowAlert(true);\n    }\n\n    // Cleanup - in case of early unmounting\n    return () => {\n      controller.abort();\n    };\n  };\n\n  const updateSpotifyPlayerUri = (uri) => {\n    setSpotifyPlayerUri(uri);\n  };\n\n  return (\n    <>\n      <Profile userId={currentUser?.pk} />\n      <Container className={styles.Container}>\n        <SearchBar onSearch={handleSearch} />\n        {showAlert && errors?.message && (\n          <Alert\n            variant='warning'\n            onClose={() => setShowAlert(false)}\n            dismissible\n          >\n            {errors.message}\n          </Alert>\n        )}\n        <Button onClick={handleAuthentication}>Authenticate</Button>\n        <Container>\n          <Row>\n            {searchResults?.map((result) => (\n              <Col\n                className={styles.PaddingReset}\n                key={result.id}\n                xs={4}\n                md={3}\n              >\n                <Button\n                  variant='link'\n                  onClick={() => updateSpotifyPlayerUri(result.uri)}\n                  className={styles.PaddingReset}\n                >\n                  <Playlist image={result.images[0]?.url} title={result.name} />\n                </Button>\n                <Row>\n                  <Col>\n                    <span>{result.name} </span>\n                    <span>\n                      <AddPlaylistButton playlistData={result} />\n                    </span>\n                  </Col>\n                </Row>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      </Container>\n    </>\n  );\n};\n\nexport default SpotifySearchPage;\n","// SOURCE: https://developer.spotify.com/documentation/embeds/tutorials/using-the-iframe-api\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\n\nfunction SpotifyPlayer() {\n  const playerRef = useRef();\n  const spotifyPlayerUri = useSpotifyPlayerUri();\n  const [embedController, setEmbedController] = useState(null);\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://open.spotify.com/embed/iframe-api/v1';\n    script.async = true;\n    document.body.appendChild(script);\n\n    window.onSpotifyIframeApiReady = (IFrameAPI) => {\n      const options = {\n        width: '100%',\n        height: '352px', // 352px is the minimum height before the player resizes to a smaller size\n        uri: spotifyPlayerUri,\n      };\n\n      const callback = (EmbedController) => {\n        setEmbedController(EmbedController);\n      };\n\n      IFrameAPI.createController(playerRef.current, options, callback);\n    };\n  }, [spotifyPlayerUri]);\n\n  useEffect(() => {\n    if (embedController) {\n      embedController.loadUri(spotifyPlayerUri);\n    }\n  }, [spotifyPlayerUri, embedController]);\n\n  return <div ref={playerRef}></div>;\n}\n\nexport default SpotifyPlayer;\n","import React from 'react';\nimport styles from '../styles/AccordionWindow.module.css';\nimport { Accordion, Card, Button } from 'react-bootstrap';\nimport SpotifyPlayer from '../spotify/SpotifyPlayer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp } from '@fortawesome/free-solid-svg-icons';\n\nfunction AccordionWindow() {\n  return (\n    <Accordion\n      // defaultActiveKey='0'\n      className={styles.AccordionPosition}\n    >\n      <Card className={styles.Card}>\n        <Card.Header className={styles.Header}>\n          <Accordion.Toggle\n            as={Button}\n            variant='link'\n            eventKey='0'\n            className={styles.PaddingReset}\n          >\n            <FontAwesomeIcon icon={faCaretUp} />\n          </Accordion.Toggle>\n        </Card.Header>\n        <Accordion.Collapse eventKey='0'>\n          <Card.Body className={styles.PaddingReset}>\n            <SpotifyPlayer />\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  );\n}\n\nexport default AccordionWindow;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport axios from 'axios';\nimport { axiosReq } from '../api/axiosDefaults';\nimport { fetchMoreData } from '../utils/dataUtils';\n\nimport Playlist from '../components/Playlist';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nimport styles from '../styles/PlaylistsPage.module.css';\nimport appStyles from '../App.module.css';\nimport loadingStyles from '../styles/LoadingSpinner.module.css';\n\nconst PlaylistsPage = ({ filter = '', profileView = false }) => {\n  const [playlists, setPlaylists] = useState([]);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    // Sends a CancelToken with the request\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    const fetchPlaylists = async () => {\n      try {\n        const { data } = await axiosReq.get(`playlists/?${filter}`, {\n          cancelToken: source.token,\n        });\n        setPlaylists(data);\n        console.log(data);\n        setHasLoaded(true);\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          console.log('Request canceled', err.message);\n        } else {\n          console.log(err);\n        }\n      }\n    };\n\n    setHasLoaded(false);\n    fetchPlaylists();\n\n    // Cleanup\n    return () => {\n      source.cancel('Request canceled');\n    };\n  }, [filter]);\n\n  return hasLoaded ? (\n    <Container\n      className={profileView ? styles.ProfileContainer : styles.Container}\n    >\n      <InfiniteScroll\n        dataLength={playlists.results.length}\n        loader={<LoadingSpinner />}\n        hasMore={!!playlists.next}\n        next={() => fetchMoreData(playlists, setPlaylists)}\n        className={styles.InfiniteScroll}\n      >\n        <Row>\n          {playlists.results.map((playlist) => (\n            <Col\n              className={appStyles.PaddingReset}\n              key={playlist.id}\n              xs={4}\n              md={3}\n            >\n              <Button\n                variant='link'\n                onClick={() => history.push(`/playlist/${playlist.id}`)}\n                className={styles.Button}\n              >\n                <Playlist image={playlist.image} title={playlist.title} />\n              </Button>\n            </Col>\n          ))}\n        </Row>\n      </InfiniteScroll>\n    </Container>\n  ) : (\n    <LoadingSpinner className={loadingStyles.Centered} />\n  );\n};\n\nexport default PlaylistsPage;\n","import { axiosReq } from '../api/axiosDefaults';\n\n/**\n * Fetches more data from a paginated API and updates the state of the resource.\n * CREDIT: Code taken from Code Institute's 'Moments' walkthrough project\n *\n * @param {Object} resource - resource to be updated\n * @param {Function} setResource - function to update the resource\n */\nexport const fetchMoreData = async (resource, setResource) => {\n  try {\n    const { data } = await axiosReq.get(resource.next);\n    setResource((prevResource) => ({\n      ...prevResource,\n      next: data.next,\n      results: data.results.reduce((acc, curr) => {\n        return acc.some((accResult) => accResult.id === curr.id)\n          ? acc\n          : [...acc, curr];\n      }, prevResource.results),\n    }));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n/**\n * Normalises data from the Spotify API to match the format of DRF's API\n *\n * @param {Object} - data from the Spotify API\n * @returns {Object} - normalised data for the Playlist component\n */\nexport function normaliseSpotifyData(data) {\n  return {\n    spotify_id: data.id,\n    title: data.name,\n    image: data.images[0]?.url,\n    url: data.external_urls.spotify,\n    iframe_uri: data.uri,\n\n    id: null,\n    owner: null,\n    is_owner: null,\n    added_on: null,\n    average_rating: null,\n    rating_id: null,\n    ratings_count: null,\n  };\n}\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaylistsPage from './PlaylistsPage';\nimport Profile from '../components/Profile';\n\nconst ProfilePage = () => {\n  const { userId } = useParams();\n  return (\n    <>\n      <Profile userId={userId} />\n      <PlaylistsPage filter={`owner__profile=${userId}`} profileView />\n    </>\n  );\n};\n\nexport default ProfilePage;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { axiosReq } from '../api/axiosDefaults';\nimport { useSetSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\n\nimport Playlist from '../components/Playlist';\nimport Profile from '../components/Profile';\n\nimport styles from '../styles/PlaylistDetail.module.css';\n\nconst PlaylistDetail = () => {\n  const { id } = useParams();\n  const [playlist, setPlaylist] = useState([]);\n  const [ratings, setRatings] = useState([]);\n  const setSpotifyPlayerUri = useSetSpotifyPlayerUri();\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      try {\n        const [{ data: playlist }, { data: ratings }] = await Promise.all([\n          axiosReq.get(`playlists/${id}`),\n          axiosReq.get(`ratings/?playlist=${id}`),\n        ]);\n\n        setPlaylist(playlist);\n        setRatings(ratings);\n        console.log(playlist);\n        console.log(ratings);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchPlaylist();\n  }, [id]);\n\n  // NOTE: ATTACH THIS LOGIC TO ANOTHER BUTTON\n  const updateSpotifyPlayerUri = (uri) => {\n    setSpotifyPlayerUri(uri);\n  };\n\n  return (\n    <>\n      <Profile userId={playlist.owner_id} />\n      <Container className={styles.Container}>\n        <Row>\n          <Col xs={4}>\n            <Button\n              variant='link'\n              onClick={() => history.goBack()}\n              className={styles.Button}\n            >\n              <Playlist image={playlist.image} title={playlist.title} />\n            </Button>\n          </Col>\n          <Col xs={8}>\n            <Row>\n              <Col>\n                <h5>{playlist.title}</h5>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={6}>\n                <h6>Average Rating</h6>\n                <p>{playlist.average_rating || '0'}</p>\n              </Col>\n              <Col xs={6}>\n                <h6># of Ratings</h6>\n                <p>{playlist.ratings_count}</p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default PlaylistDetail;\n","import styles from './App.module.css';\n// import logo from './logo.svg';\nimport NavBar from './components/NavBar';\nimport { Route, Switch } from 'react-router-dom';\nimport './api/axiosDefaults';\nimport SignUpForm from './pages/auth/SignUpForm';\nimport SignInForm from './pages/auth/SignInForm';\nimport SpotifySearchPage from './spotify/SpotifySearchPage';\nimport { useCurrentUser } from './contexts/CurrentUserContext';\nimport AccordionWindow from './components/AccordionWindow';\nimport ProfilePage from './pages/ProfilePage';\nimport PlaylistsPage from './pages/PlaylistsPage';\nimport PlaylistDetail from './pages/PlaylistDetail';\n\nfunction App() {\n  const currentUser = useCurrentUser();\n  const profile_id = currentUser?.pk || '';\n\n  return (\n    <div className={styles.App}>\n      <NavBar />\n      <AccordionWindow />\n      <Switch>\n        <Route exact path='/' render={() => <h1>Home Page</h1>} />\n        <Route exact path='/signin' render={() => <SignInForm />} />\n        <Route exact path='/signup' render={() => <SignUpForm />} />\n        <Route exact path='/profile/:userId' render={() => <ProfilePage />} />\n        <Route\n          exact\n          path='/popular'\n          render={() => (\n            <PlaylistsPage filter={`ratings__owner__profile=${profile_id}`} />\n          )}\n        />\n        <Route exact path='/playlist/:id' render={() => <PlaylistDetail />} />\n        <Route\n          exact\n          path='/feed'\n          render={() => (\n            <PlaylistsPage\n              filter={`owner__followed_by__owner__profile=${profile_id}`}\n            />\n          )}\n        />\n        <Route\n          exact\n          path='/spotify-search'\n          render={() => <SpotifySearchPage />}\n        />\n        <Route exact path='/placeholder' render={() => <h1>Placeholder</h1>} />\n        <Route render={() => <h1>Page Not Found!</h1>} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { CurrentUserProvider } from './contexts/CurrentUserContext';\nimport { SpotifyPlayerUriProvider } from './contexts/SpotifyPlayerUriContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CurrentUserProvider>\n      <SpotifyPlayerUriProvider>\n        <Router>\n          <App />\n        </Router>\n      </SpotifyPlayerUriProvider>\n    </CurrentUserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"SignInUpForm_Row__3PbVy\",\"Input\":\"SignInUpForm_Input__3xaLZ\",\"Header\":\"SignInUpForm_Header__3joQJ\",\"Link\":\"SignInUpForm_Link__1BeMm\",\"SignUpCol\":\"SignInUpForm_SignUpCol__28o4y\",\"SignInCol\":\"SignInUpForm_SignInCol__3ImPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomBackground\":\"NavBar_CustomBackground__3zgb5\",\"NavLink\":\"NavBar_NavLink__34ons\",\"Active\":\"NavBar_Active__3PBZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__27i9m\",\"Wide\":\"Button_Wide__2ScDr\",\"PaddingReset\":\"Button_PaddingReset__3EaQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Content\":\"App_Content__ZaMNr\",\"FillerImage\":\"App_FillerImage__2ob-g\",\"PaddingReset\":\"App_PaddingReset__2Yixf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileContainer\":\"Profile_ProfileContainer__1MhJH\",\"FontAwesomeIcon\":\"Profile_FontAwesomeIcon__1XfKb\",\"StatsContainer\":\"Profile_StatsContainer__1jyTN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccordionPosition\":\"AccordionWindow_AccordionPosition__3Pg_2\",\"Header\":\"AccordionWindow_Header__3EVT_\",\"Card\":\"AccordionWindow_Card__RFCw5\",\"PaddingReset\":\"AccordionWindow_PaddingReset__RMqnf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Centered\":\"LoadingSpinner_Centered__2UoRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"ModalWindow_Header__hiHjJ\",\"Body\":\"ModalWindow_Body__13Mmm\",\"Color\":\"ModalWindow_Color__9jnUe\",\"Footer\":\"ModalWindow_Footer__3oRO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PlaylistsPage_Container__KgRlF\",\"ProfileContainer\":\"PlaylistsPage_ProfileContainer__1ky5y\",\"Button\":\"PlaylistsPage_Button__2jYpK\",\"InfiniteScroll\":\"PlaylistsPage_InfiniteScroll__1cMqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SpotifySearchPage_Container__31uhH\",\"PaddingReset\":\"SpotifySearchPage_PaddingReset__2gaVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PlaylistDetail_Container__37TnQ\",\"Button\":\"PlaylistDetail_Button__3EF93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Avatar_Avatar__196lW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"Playlist_Image__2QZQC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"AddPlaylistButton_Button__19nCc\"};"],"sourceRoot":""}