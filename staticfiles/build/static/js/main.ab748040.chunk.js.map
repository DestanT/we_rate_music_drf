{"version":3,"sources":["api/axiosDefaults.js","utils/dataUtils.js","contexts/CurrentUserContext.js","components/Avatar.js","components/NavBar.js","hooks/useRedirect.js","pages/auth/SignUpForm.js","pages/auth/SignInForm.js","utils/spotifyAuthUtils.js","spotify/useSpotifyAuth.js","contexts/SpotifyPlayerUriContext.js","components/LoadingSpinner.js","components/ModalWindow.js","components/SignOutButton.js","components/Profile.js","components/SearchBar.js","components/Playlist.js","spotify/AddPlaylistButton.js","spotify/SpotifySearchPage.js","spotify/SpotifyPlayer.js","components/AccordionWindow.js","pages/PlaylistsPage.js","pages/ProfilePage.js","components/StarRating.js","pages/PlaylistDetail.js","App.js","reportWebVitals.js","index.js","styles/SignInUpForm.module.css","styles/Button.module.css","styles/NavBar.module.css","App.module.css","styles/Profile.module.css","styles/AccordionWindow.module.css","styles/LoadingSpinner.module.css","styles/ModalWindow.module.css","styles/PlaylistsPage.module.css","styles/SearchBar.module.css","styles/SpotifySearchPage.module.css","styles/SignOutButton.module.css","styles/PlaylistDetail.module.css","styles/Avatar.module.css","styles/Playlist.module.css","styles/AddPlaylistButton.module.css"],"names":["axios","defaults","baseURL","headers","post","withCredentials","axiosReq","create","axiosRes","removeTokenTimestamp","localStorage","removeItem","CurrentUserContext","createContext","SetCurrentUserContext","useCurrentUser","useContext","useSetCurrentUser","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","useState","history","useHistory","useEffect","async","source","CancelToken","data","get","cancelToken","token","err","isCancel","console","log","message","handleMount","useMemo","interceptors","request","use","getItem","prevCurrentUser","push","config","Promise","reject","response","_err$response","status","_jsx","Provider","value","Avatar","src","height","className","styles","width","alt","concat","username","NavBar","loggedOutIcons","_jsxs","_Fragment","Nav","NavLink","activeClassName","Active","to","FontAwesomeIcon","icon","faUserPlus","size","faRightToBracket","loggedInIcons","faStar","faPeopleGroup","profile_id","profile_image","faSquare","faSpotify","style","color","Navbar","CustomBackground","expand","fixed","Container","useRedirect","userAuthStatus","authPages","includes","location","pathname","pk","SignUpForm","_errors$username","_errors$password","_errors$password2","_errors$non_field_err","signUpData","setSignUpData","password1","password2","errors","setErrors","handleChange","event","target","name","Row","Col","md","appStyles","Content","Header","Form","onSubmit","preventDefault","Group","controlId","Label","Control","Input","type","placeholder","onChange","map","idx","Alert","variant","Button","btnStyles","Wide","Bright","non_field_errors","Link","SignUpCol","Image","FillerImage","SignInForm","signInData","setSignInData","password","user","refreshTokenTimestamp","jwtDecode","refresh_token","exp","setItem","setTokenTimestamp","SignInCol","clientId","codeVerifier","length","possible","crypto","getRandomValues","Uint8Array","reduce","acc","x","generateRandomString","getCodeChallenge","hashed","TextEncoder","encode","plain","window","subtle","digest","sha256","input","btoa","String","fromCharCode","replace","redirectUri","useSpotifyAuth","code","URLSearchParams","search","payload","method","body","client_id","grant_type","redirect_uri","code_verifier","fetch","json","access_token","getToken","handleAuthentication","authUrl","URL","codeChallenge","params","response_type","scope","code_challenge_method","code_challenge","toString","href","spotifyAuthentication","SpotifyPlayerUriContext","SetSpotifyPlayerUriContext","useSetSpotifyPlayerUri","SpotifyPlayerUriProvider","spotifyPlayerUri","setSpotifyPlayerUri","LoadingSpinner","faCompactDisc","spin","ModalWindow","props","Modal","centered","closeButton","Title","id","Color","title","Body","Footer","onClick","onHide","onConfirm","SignOutButton","modalShow","setModalShow","faArrowRightFromBracket","show","Profile","userId","profileData","setProfileData","hasLoaded","setHasLoaded","isFollowing","setIsFollowing","following_id","fetchProfileData","cancel","ProfileContainer","backgroundImage","background","xs","faBackward","goBack","owner","StatsContainer","AvatarContainer","TransparentButton","image","is_owner","delete","profile","prevState","followers_count","handleUnfollow","ProfileFontAwesomeIcon","followed","handleFollow","emptyStar","following_count","playlists_count","loadingStyles","Centered","SearchBar","onSearch","liveSearch","searchQuery","setSearchQuery","filteredResults","setFilteredResults","showDropdown","setShowDropdown","dropdownResults","Dropdown","Menu","DropdownMenu","item","Item","DropdownItem","SearchResultImage","e","InputGroup","currentQuery","filteredItems","results","filter","toLowerCase","Append","disabled","faMagnifyingGlass","Playlist","AddPlaylistButton","_playlist$images$2","playlistData","playlist","showAlert","setShowAlert","faSquarePlus","onClose","dismissible","_playlist$images$","spotify_id","images","url","external_urls","spotify","iframe_uri","uri","error","_error$response","SpotifySearchPage","searchResults","setSearchResults","lastSearch","JSON","parse","controller","AbortController","signal","_data$albums","_data$playlists","_data$artists","Authorization","combinedData","albums","items","playlists","artists","stringify","abort","result","_result$images$","PaddingReset","updateSpotifyPlayerUri","SpotifyPlayer","playerRef","useRef","embedController","setEmbedController","script","document","createElement","appendChild","onSpotifyIframeApiReady","IFrameAPI","options","createController","current","EmbedController","loadUri","ref","AccordionWindow","Accordion","AccordionPosition","Card","Toggle","as","eventKey","faCaretUp","Collapse","PlaylistsPage","profileView","setPlaylists","fetchPlaylists","InfiniteScroll","dataLength","loader","hasMore","next","resource","setResource","prevResource","curr","some","accResult","fetchMoreData","ProfilePage","useParams","StarRating","rating","setRating","rating_id","score","fetchRatingData","myStyles","itemShapes","StickerStar","activeFillColor","inactiveFillColor","Rating","put","selectedValue","maxWidth","itemStyles","PlaylistDetail","setPlaylist","ratings","setRatings","all","fetchPlaylist","owner_id","average_rating","ratings_count","App","Switch","Route","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","Router","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ab748040.chunk.js","sourcesContent":["// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport axios from 'axios';\n\naxios.defaults.baseURL = '/api';\naxios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\naxios.defaults.withCredentials = true;\n\nexport const axiosReq = axios.create();\nexport const axiosRes = axios.create();","// CREDIT: Code taken from Code Institute's 'Moments' walkthrough project\nimport { axiosReq } from '../api/axiosDefaults';\nimport jwtDecode from 'jwt-decode';\n\n/**\n * Fetches more data from a paginated API and updates the state of the resource.\n *\n * @param {Object} resource - resource to be updated\n * @param {Function} setResource - function to update the resource\n */\nexport const fetchMoreData = async (resource, setResource) => {\n  try {\n    const { data } = await axiosReq.get(resource.next);\n    setResource((prevResource) => ({\n      ...prevResource,\n      next: data.next,\n      results: data.results.reduce((acc, curr) => {\n        return acc.some((accResult) => accResult.id === curr.id)\n          ? acc\n          : [...acc, curr];\n      }, prevResource.results),\n    }));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const setTokenTimestamp = (data) => {\n  const refreshTokenTimestamp = jwtDecode(data?.refresh_token).exp;\n  localStorage.setItem('refreshTokenTimestamp', refreshTokenTimestamp);\n};\n\nexport const shouldRefreshToken = () => {\n  return !!localStorage.getItem('refreshTokenTimestamp');\n};\n\nexport const removeTokenTimestamp = () => {\n  localStorage.removeItem('refreshTokenTimestamp');\n};\n","// CREDIT: Code taken from Code Institute's 'Moments' walkthrough project\nimport { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { axiosReq, axiosRes } from '../api/axiosDefaults';\nimport { useHistory } from 'react-router';\nimport { removeTokenTimestamp, shouldRefreshToken } from '../utils/dataUtils';\n\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory();\n\n  const handleMount = async () => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    try {\n      const { data } = await axiosRes.get('dj-rest-auth/user/', {\n        cancelToken: source.token,\n      });\n      setCurrentUser(data);\n    } catch (err) {\n      if (axios.isCancel(err)) {\n        console.log('Request canceled', err.message);\n      } else {\n        console.log(err);\n      }\n    }\n\n    // Cleanup\n    return () => {\n      source.cancel('Request canceled');\n    };\n  };\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  useMemo(() => {\n    axiosReq.interceptors.request.use(\n      async (config) => {\n        if (shouldRefreshToken()) {\n          try {\n            await axios.post('/dj-rest-auth/token/refresh/');\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                history.push('/signin');\n              }\n              return null;\n            });\n            removeTokenTimestamp();\n            return config;\n          }\n        }\n        return config;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n\n    axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err.response?.status === 401) {\n          try {\n            await axios.post('/dj-rest-auth/token/refresh/');\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                history.push('/signin');\n              }\n              return null;\n            });\n            removeTokenTimestamp();\n          }\n          return axios(err.config);\n        }\n        return Promise.reject(err);\n      }\n    );\n  }, [history]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n","import React from 'react';\nimport styles from '../styles/Avatar.module.css';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nconst Avatar = ({ src, height = 45 }) => {\n  const currentUser = useCurrentUser();\n  return (\n    <span>\n      <img\n        className={styles.Avatar}\n        src={src}\n        height={height}\n        width={height}\n        alt={`${currentUser?.username}' avatar`}\n      />\n    </span>\n  )\n}\n\nexport default Avatar","import styles from '../styles/NavBar.module.css';\nimport React from 'react';\nimport { Navbar, Container, Nav } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpotify } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faStar,\n  faPeopleGroup,\n  faSquare,\n  faUserPlus,\n  faRightToBracket,\n} from '@fortawesome/free-solid-svg-icons';\nimport { NavLink } from 'react-router-dom';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport Avatar from './Avatar';\n\nconst NavBar = () => {\n  const currentUser = useCurrentUser();\n\n  const loggedOutIcons = (\n    <>\n      <Nav className='m-auto'>\n        <NavLink\n          className={styles.NavLink}\n          activeClassName={styles.Active}\n          to='/signup'\n        >\n          {/* Signup icon */}\n          <FontAwesomeIcon icon={faUserPlus} size='2xl' />\n        </NavLink>\n        Sign Up!\n      </Nav>\n\n      <Nav className='m-auto'>\n        <NavLink\n          className={styles.NavLink}\n          activeClassName={styles.Active}\n          to='/signin'\n        >\n          {/* Signin icon */}\n          <FontAwesomeIcon icon={faRightToBracket} size='2xl' />\n        </NavLink>\n        Login\n      </Nav>\n    </>\n  );\n  const loggedInIcons = (\n    <>\n      <Nav className='mr-auto'>\n        <NavLink\n          className={styles.NavLink}\n          activeClassName={styles.Active}\n          to='/popular'\n        >\n          {/* Star icon */}\n          <FontAwesomeIcon icon={faStar} size='2xl' />\n        </NavLink>\n      </Nav>\n\n      <Nav className='mr-auto'>\n        <NavLink\n          className={styles.NavLink}\n          activeClassName={styles.Active}\n          to='/feed'\n        >\n          {/* Group/Follow icon */}\n          <FontAwesomeIcon icon={faPeopleGroup} size='2xl' />\n        </NavLink>\n      </Nav>\n\n      <Nav>\n        <NavLink\n          className={styles.NavLink}\n          to={`/profile/${currentUser?.profile_id}`}\n        >\n          {/* Profile image */}\n          <Avatar src={currentUser?.profile_image} height={40} />\n        </NavLink>\n      </Nav>\n\n      <Nav className='ml-auto'>\n        <NavLink\n          className={styles.NavLink}\n          activeClassName={styles.Active}\n          to='/placeholder'\n        >\n          {/* Placeholder */}\n          <FontAwesomeIcon icon={faSquare} size='2xl' />\n        </NavLink>\n      </Nav>\n\n      <Nav className='ml-auto'>\n        <NavLink className={styles.NavLink} to='/spotify-search'>\n          {/* Spotify link */}\n          <FontAwesomeIcon\n            icon={faSpotify}\n            style={{ color: '#1db954' }}\n            size='2xl'\n          />\n        </NavLink>\n      </Nav>\n    </>\n  );\n\n  return (\n    <Navbar className={styles.CustomBackground} expand='md' fixed='bottom'>\n      <Container>{currentUser ? loggedInIcons : loggedOutIcons}</Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import axios from 'axios';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\n/**\n * useRedirect hook: redirects users based on their logged in status\n */\nexport const useRedirect = () => {\n  const history = useHistory();\n  const currentUser = useCurrentUser();\n  const userAuthStatus = currentUser ? 'loggedIn' : 'loggedOut';\n  const authPages = ['/signin', '/signup'].includes(history.location.pathname);\n\n  useEffect(() => {\n    const handleMount = async () => {\n      // if user is logged in and on signin/signup page, redirect to profile page\n      if (authPages) {\n        if (userAuthStatus === 'loggedIn') {\n          history.push(`/profile/${currentUser.pk}`);\n          return;\n        }\n        if (userAuthStatus === 'loggedOut') {\n          return;\n        }\n      }\n      try {\n        await axios.post('/dj-rest-auth/token/refresh/');\n        // if userAuthStatus is logged in, do nothing\n        if (userAuthStatus === 'loggedIn') {\n          return;\n        }\n      } catch (err) {\n        // if user is not logged in, redirect to home/welcome page\n        if (userAuthStatus === 'loggedOut') {\n          history.push('/');\n        }\n      }\n    };\n\n    handleMount();\n  }, [history, userAuthStatus, currentUser, authPages]);\n};\n","// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useRedirect } from '../../hooks/useRedirect';\n\nimport {\n  Form,\n  Button,\n  Image,\n  Col,\n  Row,\n  Container,\n  Alert,\n} from 'react-bootstrap';\n\nimport styles from '../../styles/SignInUpForm.module.css';\nimport btnStyles from '../../styles/Button.module.css';\nimport appStyles from '../../App.module.css';\n\nimport axios from 'axios';\n\nconst SignUpForm = () => {\n  useRedirect();\n  const [signUpData, setSignUpData] = useState({\n    username: '',\n    password1: '',\n    password2: '',\n  });\n  const { username, password1, password2 } = signUpData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    setSignUpData({\n      ...signUpData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axios.post('/dj-rest-auth/registration/', signUpData);\n      history.push('/signin');\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <Row className={styles.Row}>\n      <Col className='my-auto py-2 p-md-2' md={6}>\n        <Container className={`${appStyles.Content} p-4 `}>\n          <h1 className={styles.Header}>sign up</h1>\n\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId='username'>\n              <Form.Label className='d-none'>username</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type='text'\n                placeholder='Username'\n                name='username'\n                value={username}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.username?.map((message, idx) => (\n              <Alert variant='warning' key={idx}>\n                {message}\n              </Alert>\n            ))}\n\n            <Form.Group controlId='password1'>\n              <Form.Label className='d-none'>Password</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type='password'\n                placeholder='Password'\n                name='password1'\n                value={password1}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password1?.map((message, idx) => (\n              <Alert key={idx} variant='warning'>\n                {message}\n              </Alert>\n            ))}\n\n            <Form.Group controlId='password2'>\n              <Form.Label className='d-none'>Confirm password</Form.Label>\n              <Form.Control\n                className={styles.Input}\n                type='password'\n                placeholder='Confirm password'\n                name='password2'\n                value={password2}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password2?.map((message, idx) => (\n              <Alert key={idx} variant='warning'>\n                {message}\n              </Alert>\n            ))}\n\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright}`}\n              type='submit'\n            >\n              Sign up\n            </Button>\n            {errors.non_field_errors?.map((message, idx) => (\n              <Alert key={idx} variant='warning' className='mt-3'>\n                {message}\n              </Alert>\n            ))}\n          </Form>\n        </Container>\n\n        <Container className={`mt-3 ${appStyles.Content}`}>\n          <Link className={styles.Link} to='/signin'>\n            Already have an account? <span>Sign in</span>\n          </Link>\n        </Container>\n      </Col>\n      <Col\n        md={6}\n        className={`my-auto d-none d-md-block p-2 ${styles.SignUpCol}`}\n      >\n        <Image\n          className={`${appStyles.FillerImage}`}\n          src={'https://codeinstitute.s3.amazonaws.com/AdvancedReact/hero2.jpg'}\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport default SignUpForm;\n","// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport React, { useState } from 'react';\nimport {\n  Form,\n  Alert,\n  Button,\n  Col,\n  Row,\n  Image,\n  Container,\n} from 'react-bootstrap';\n\nimport axios from 'axios';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport styles from '../../styles/SignInUpForm.module.css';\nimport appStyles from '../../App.module.css';\nimport btnStyles from '../../styles/Button.module.css';\n\nimport { useSetCurrentUser } from '../../contexts/CurrentUserContext';\nimport { useRedirect } from '../../hooks/useRedirect';\nimport { setTokenTimestamp } from '../../utils/dataUtils';\n\nfunction SignInForm() {\n  const setCurrentUser = useSetCurrentUser();\n  useRedirect();\n\n  const [signInData, setSignInData] = useState({\n    username: '',\n    password: '',\n  });\n  const { username, password } = signInData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await axios.post('/dj-rest-auth/login/', signInData);\n      setCurrentUser(data.user);\n      setTokenTimestamp(data);\n      history.push(`/profile/${data.user.pk}`);\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n\n  const handleChange = (event) => {\n    setSignInData({\n      ...signInData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <Row className={styles.Row}>\n      <Col className='my-auto p-0 p-md-2' md={6}>\n        <Container className={`${appStyles.Content} p-4 `}>\n          <h1 className={styles.Header}>sign in</h1>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group controlId='username'>\n              <Form.Label className='d-none'>Username</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Username'\n                name='username'\n                className={styles.Input}\n                value={username}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.username?.map((message, idx) => (\n              <Alert key={idx} variant='warning'>\n                {message}\n              </Alert>\n            ))}\n\n            <Form.Group controlId='password'>\n              <Form.Label className='d-none'>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Password'\n                name='password'\n                className={styles.Input}\n                value={password}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            {errors.password?.map((message, idx) => (\n              <Alert key={idx} variant='warning'>\n                {message}\n              </Alert>\n            ))}\n            <Button\n              className={`${btnStyles.Button} ${btnStyles.Wide} ${btnStyles.Bright}`}\n              type='submit'\n            >\n              Sign in\n            </Button>\n            {errors.non_field_errors?.map((message, idx) => (\n              <Alert key={idx} variant='warning' className='mt-3'>\n                {message}\n              </Alert>\n            ))}\n          </Form>\n        </Container>\n        <Container className={`mt-3 ${appStyles.Content}`}>\n          <Link className={styles.Link} to='/signup'>\n            Don't have an account? <span>Sign up now!</span>\n          </Link>\n        </Container>\n      </Col>\n      <Col\n        md={6}\n        className={`my-auto d-none d-md-block p-2 ${styles.SignInCol}`}\n      >\n        <Image\n          className={`${appStyles.FillerImage}`}\n          src={'https://codeinstitute.s3.amazonaws.com/AdvancedReact/hero.jpg'}\n        />\n      </Col>\n    </Row>\n  );\n}\n\nexport default SignInForm;\n","// SOURCE: https://developer.spotify.com/documentation/web-api/tutorials/code-pkce-flow\n\n// Code verifier\nconst generateRandomString = (length) => {\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const values = crypto.getRandomValues(new Uint8Array(length));\n  return values.reduce((acc, x) => acc + possible[x % possible.length], '');\n};\n\n// Code challenge\nconst sha256 = async (plain) => {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return window.crypto.subtle.digest('SHA-256', data);\n};\n\nconst base64encode = (input) => {\n  return btoa(String.fromCharCode(...new Uint8Array(input)))\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n};\n\n// Exports\nexport const clientId = '51c949a050b74ceba5688d10a1c7f5f1';\nexport const codeVerifier = generateRandomString(64);\nexport const getCodeChallenge = async () => {\n  const hashed = await sha256(codeVerifier);\n  return base64encode(hashed);\n};\n\n// Redirect URI\nexport let redirectUri;\nif (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test') {\n  redirectUri = 'http://localhost:3000/spotify-search';\n} else {\n  redirectUri =\n    'https://we-rate-music-drf-1626129441d6.herokuapp.com/spotify-search';\n}\n","// SOURCE: https://developer.spotify.com/documentation/web-api/tutorials/code-pkce-flow\n\nimport { useEffect } from 'react';\nimport {\n  clientId,\n  codeVerifier,\n  getCodeChallenge,\n  redirectUri,\n} from '../utils/spotifyAuthUtils';\n\nexport const useSpotifyAuth = () => {\n  const spotifyAuthentication = async () => {\n    const scope = 'user-read-private user-read-email streaming';\n    const authUrl = new URL('https://accounts.spotify.com/authorize');\n\n    // generated in utils/spotifyAuthUtils.js\n    window.localStorage.setItem('code_verifier', codeVerifier);\n\n    const codeChallenge = await getCodeChallenge();\n\n    const params = {\n      response_type: 'code',\n      client_id: clientId,\n      scope,\n      code_challenge_method: 'S256',\n      code_challenge: codeChallenge,\n      redirect_uri: redirectUri,\n    };\n\n    authUrl.search = new URLSearchParams(params).toString();\n    window.location.href = authUrl.toString();\n  };\n\n  const getToken = async (code) => {\n    // stored from spotifyAuthentication()\n    let codeVerifier = localStorage.getItem('code_verifier');\n\n    const payload = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        client_id: clientId,\n        grant_type: 'authorization_code',\n        code,\n        redirect_uri: redirectUri,\n        code_verifier: codeVerifier,\n      }),\n    };\n\n    const url = 'https://accounts.spotify.com/api/token';\n    const body = await fetch(url, payload);\n    const response = await body.json();\n\n    if (response.access_token) {\n      localStorage.setItem('access_token', response.access_token);\n    } else {\n      console.log('Error: ', response);\n    }\n  };\n\n  const handleAuthentication = async () => {\n    await spotifyAuthentication();\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    let code = urlParams.get('code');\n    if (code) {\n      window.localStorage.setItem('code', code);\n      getToken(code);\n    }\n  }, []);\n\n  return { handleAuthentication };\n};\n","import { createContext, useContext, useState } from 'react';\n\nexport const SpotifyPlayerUriContext = createContext();\nexport const SetSpotifyPlayerUriContext = createContext();\n\nexport const useSpotifyPlayerUri = () => useContext(SpotifyPlayerUriContext);\nexport const useSetSpotifyPlayerUri = () =>\n  useContext(SetSpotifyPlayerUriContext);\n\nexport const SpotifyPlayerUriProvider = ({ children }) => {\n  const [spotifyPlayerUri, setSpotifyPlayerUri] = useState(\n    'spotify:album:1VrravzsxruIeQf1cuE6zB'\n  );\n\n  return (\n    <SpotifyPlayerUriContext.Provider value={spotifyPlayerUri}>\n      <SetSpotifyPlayerUriContext.Provider value={setSpotifyPlayerUri}>\n        {children}\n      </SetSpotifyPlayerUriContext.Provider>\n    </SpotifyPlayerUriContext.Provider>\n  );\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCompactDisc } from '@fortawesome/free-solid-svg-icons';\n\nconst LoadingSpinner = () => {\n  return (\n    <div>\n      <FontAwesomeIcon icon={faCompactDisc} size='2xl' spin />\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\nimport styles from '../styles/ModalWindow.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\n/**\n * ModalWindow component renders a modal window.\n *\n * Must be used with the following props:\n * - show={modalShow}\n * - onHide={() => setModalShow(false)}\n * - onConfirm: custom function\n * - title: string\n * - body: JSX\n */\nfunction ModalWindow(props) {\n  return (\n    <Modal {...props} size='sm' aria-labelledby='confirmation modal' centered>\n      <Modal.Header className={styles.Header} closeButton>\n        <Modal.Title id='confirmation modal' className={styles.Color}>\n          {props.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className={styles.Body}>{props.body}</Modal.Body>\n      <Modal.Footer className={styles.Footer}>\n        <Button onClick={props.onHide} className={btnStyles.Button}>\n          Close\n        </Button>\n        <Button onClick={props.onConfirm} className={btnStyles.Button}>\n          Confirm\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default ModalWindow;\n","import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nimport axios from 'axios';\nimport ModalWindow from './ModalWindow';\nimport { useSetCurrentUser } from '../contexts/CurrentUserContext';\nimport { removeTokenTimestamp } from '../utils/dataUtils';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowRightFromBracket } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from '../styles/SignOutButton.module.css';\n\nconst SignOutButton = () => {\n  const setCurrentUser = useSetCurrentUser();\n  const [modalShow, setModalShow] = useState(false);\n  const history = useHistory();\n\n  const handleSignOut = async () => {\n    try {\n      await axios.post('/dj-rest-auth/logout/');\n      setCurrentUser(null);\n      removeTokenTimestamp();\n      setModalShow(false);\n      history.push('/');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <Button onClick={() => setModalShow(true)} className={styles.Button}>\n        <FontAwesomeIcon\n          className={styles.FontAwesomeIcon}\n          icon={faArrowRightFromBracket}\n          size='xl'\n        />\n      </Button>\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleSignOut}\n        title='Sign out?'\n        body='Are you sure you want to sign out?'\n      />\n    </>\n  );\n};\n\nexport default SignOutButton;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { axiosReq, axiosRes } from '../api/axiosDefaults';\nimport axios from 'axios';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBackward, faStar } from '@fortawesome/free-solid-svg-icons';\nimport { faStar as emptyStar } from '@fortawesome/free-regular-svg-icons';\n\nimport Avatar from './Avatar';\nimport LoadingSpinner from './LoadingSpinner';\nimport SignOutButton from './SignOutButton';\n\nimport styles from '../styles/Profile.module.css';\nimport loadingStyles from '../styles/LoadingSpinner.module.css';\n\nconst Profile = ({ userId }) => {\n  const currentUser = useCurrentUser();\n  const [profileData, setProfileData] = useState({});\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [isFollowing, setIsFollowing] = useState(false);\n  const history = useHistory();\n\n  useEffect(() => {\n    // Sends a CancelToken with the request\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    const fetchProfileData = async () => {\n      try {\n        const { data } = await axiosReq.get(`profiles/${userId}`, {\n          cancelToken: source.token,\n        });\n        setProfileData(data);\n        console.log('profiledata: ', data);\n        setIsFollowing(data.following_id ? true : false);\n        setHasLoaded(true);\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          console.log('Request canceled', err.message);\n        } else {\n          console.log(err);\n        }\n      }\n    };\n\n    setHasLoaded(false);\n    fetchProfileData();\n\n    // Cleanup\n    return () => {\n      source.cancel('Request canceled');\n    };\n  }, [userId]);\n\n  const handleFollow = async (profile) => {\n    try {\n      const { data } = await axiosRes.post('followers/', {\n        followed: profile.id,\n      });\n      console.log('handleFollow: ', data);\n\n      setProfileData((prevState) => ({\n        ...prevState,\n        followers_count: prevState.followers_count + 1,\n        following_id: data.id,\n      }));\n\n      setIsFollowing(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleUnfollow = async (profile) => {\n    try {\n      const { data } = await axiosRes.delete(\n        `followers/${profile.following_id}`\n      );\n      console.log('handleUnfollow: ', data);\n\n      setProfileData((prevState) => ({\n        ...prevState,\n        followers_count: prevState.followers_count - 1,\n      }));\n\n      setIsFollowing(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return hasLoaded ? (\n    // Profile data loaded\n    <Container\n      className={styles.ProfileContainer}\n      style={{ backgroundImage: `url(${profileData.background})` }}\n    >\n      {/* Header */}\n      <Container>\n        <Row>\n          <Col xs={3}>\n            <FontAwesomeIcon\n              icon={faBackward}\n              size='xl'\n              className={styles.FontAwesomeIcon}\n              onClick={() => history.goBack()}\n            />\n          </Col>\n          <Col xs={6}>\n            <h2>{profileData.owner}</h2>\n          </Col>\n          <Col xs={3}>\n            <SignOutButton />\n          </Col>\n        </Row>\n      </Container>\n\n      {/* Profile picture and stats */}\n      <Container className={styles.StatsContainer}>\n        <Row>\n          <Col xs={3} className={styles.AvatarContainer}>\n            <Button\n              type='link'\n              className={styles.TransparentButton}\n              onClick={() => history.push(`/profile/${profileData.id}`)}\n            >\n              <Avatar src={profileData.image} height={100} />\n            </Button>\n\n            {/* Follow button */}\n            {currentUser &&\n              !profileData?.is_owner &&\n              (isFollowing ? (\n                <Button\n                  className={styles.TransparentButton}\n                  onClick={() => handleUnfollow(profileData)}\n                >\n                  <FontAwesomeIcon\n                    icon={faStar}\n                    size='xl'\n                    className={styles.ProfileFontAwesomeIcon}\n                  />\n                </Button>\n              ) : (\n                // Unfollow button\n                !isFollowing && (\n                  <Button\n                    className={styles.TransparentButton}\n                    onClick={() => handleFollow(profileData)}\n                  >\n                    <FontAwesomeIcon\n                      icon={emptyStar}\n                      size='xl'\n                      className={styles.ProfileFontAwesomeIcon}\n                    />\n                  </Button>\n                )\n              ))}\n          </Col>\n          <Col xs={9}>\n            <Row>\n              <Col xs={4}>\n                <h3>{profileData.followers_count}</h3>\n                <p>Followers</p>\n              </Col>\n              <Col xs={4}>\n                <h3>{profileData.following_count}</h3>\n                <p>Following</p>\n              </Col>\n              <Col xs={4}>\n                <h3>{profileData.playlists_count}</h3>\n                <p>Playlists</p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  ) : (\n    // Profile data not yet loaded\n    <>\n      {/* Replicated container structure and styles */}\n      <Container className={styles.ProfileContainer}>\n        <Container>\n          <LoadingSpinner className={loadingStyles.Centered} />\n        </Container>\n        <Container className={styles.StatsContainer}>\n          <LoadingSpinner className={loadingStyles.Centered} />\n        </Container>\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { Form, Button, InputGroup, Dropdown, Row, Col } from 'react-bootstrap';\n\nimport styles from '../styles/SearchBar.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\n\nfunction SearchBar({ onSearch, liveSearch = false, data = null }) {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredResults, setFilteredResults] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    onSearch(searchQuery);\n  };\n\n  const handleInputChange = (e) => {\n    const currentQuery = e.target.value;\n    setSearchQuery(currentQuery);\n    console.log(currentQuery);\n\n    if (currentQuery === '') {\n      setShowDropdown(false);\n      return;\n    }\n\n    console.log(e.target.value);\n    if (liveSearch) {\n      const filteredItems = data.results.filter(\n        (item) =>\n          item.title.toLowerCase().includes(currentQuery.toLowerCase()) ||\n          item.owner.toLowerCase().includes(currentQuery.toLowerCase())\n      );\n      setFilteredResults(filteredItems);\n      setShowDropdown(filteredItems.length > 0);\n    }\n  };\n\n  const dropdownResults = (\n    <Dropdown show={showDropdown}>\n      <Dropdown.Menu className={styles.DropdownMenu}>\n        {filteredResults.map((item) => (\n          <Dropdown.Item key={item.id} className={styles.DropdownItem}>\n            <Row>\n              <Col xs={3}>\n                <img\n                  src={item.image}\n                  alt={`${item.title}'s Cover Art`}\n                  className={styles.SearchResultImage}\n                />\n              </Col>\n              <Col xs={6}>{item.title}</Col>\n              <Col xs={3}>\n                <em>({item.owner}'s playlist)</em>\n              </Col>\n            </Row>\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId='searchForm'>\n          <InputGroup>\n            <Form.Control\n              type='text'\n              placeholder='Search Spotify'\n              onChange={handleInputChange}\n            />\n            <InputGroup.Append>\n              {liveSearch ? (\n                <Button disabled className={btnStyles.Button}>\n                  <FontAwesomeIcon\n                    icon={faMagnifyingGlass}\n                    style={{ color: '#3d3d3d' }}\n                    size='lg'\n                  />\n                </Button>\n              ) : (\n                <Button type='submit' className={btnStyles.Button}>\n                  <FontAwesomeIcon\n                    icon={faMagnifyingGlass}\n                    style={{ color: '#3d3d3d' }}\n                    size='lg'\n                  />\n                </Button>\n              )}\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Form>\n      {liveSearch ? dropdownResults : null}\n    </>\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport styles from '../styles/Playlist.module.css';\n\n// Set default image if no image is provided\nconst defaultImage =\n  'https://res.cloudinary.com/dxgzepuov/image/upload/v1702896303/default_post_uq5gxz.jpg';\n\n/**\n * Playlist component to display the image of a playlist. Default image is used if no image is provided.\n *\n * @param {string} image - The image URL of the playlist\n * @param {string} title - The title of the playlist\n */\nconst Playlist = ({ image, title }) => {\n  return (\n    <img\n      src={image || defaultImage}\n      className={styles.Image}\n      alt={`${title}'s cover art`}\n    />\n  );\n};\n\nexport default Playlist;\n","import React, { useState } from 'react';\nimport { Button, Alert } from 'react-bootstrap';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSquarePlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport { axiosRes } from '../api/axiosDefaults';\n\nimport ModalWindow from '../components/ModalWindow';\nimport Playlist from '../components/Playlist';\n\nimport styles from '../styles/AddPlaylistButton.module.css';\n\nfunction AddPlaylistButton({ playlistData: playlist }) {\n  const currentUser = useCurrentUser();\n  const [modalShow, setModalShow] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = {\n      spotify_id: playlist.id,\n      title: playlist.name,\n      image: playlist.images[0]?.url,\n      url: playlist.external_urls.spotify,\n      iframe_uri: playlist.uri,\n      owner: currentUser.id,\n    };\n\n    try {\n      const response = await axiosRes.post('playlists/', data);\n      console.log(response);\n      setModalShow(false);\n    } catch (error) {\n      setErrors({\n        message:\n          error.response?.data || 'Something went wrong! Please try again.',\n      });\n      setShowAlert(true);\n    }\n  };\n\n  return (\n    <>\n      <Button onClick={() => setModalShow(true)} className={styles.Button}>\n        <FontAwesomeIcon icon={faSquarePlus} />\n      </Button>\n\n      {showAlert && errors?.message && (\n        <Alert\n          variant='warning'\n          onClose={() => setShowAlert(false)}\n          dismissible\n        >\n          {errors.message}\n        </Alert>\n      )}\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleSubmit}\n        title={`Add \"${playlist.name}\" to your profile?`}\n        body={\n          <Playlist image={playlist.images[0]?.url} title={playlist.name} />\n        }\n      />\n    </>\n  );\n}\n\nexport default AddPlaylistButton;\n","import React, { useEffect, useState } from 'react';\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap';\n\nimport { useSpotifyAuth } from './useSpotifyAuth';\nimport { useSetSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport { useRedirect } from '../hooks/useRedirect';\n\nimport Profile from '../components/Profile';\nimport SearchBar from '../components/SearchBar';\nimport Playlist from '../components/Playlist';\nimport AddPlaylistButton from './AddPlaylistButton';\n\nimport styles from '../styles/SpotifySearchPage.module.css';\n\nconst SpotifySearchPage = () => {\n  const { handleAuthentication } = useSpotifyAuth();\n  const setSpotifyPlayerUri = useSetSpotifyPlayerUri();\n  const currentUser = useCurrentUser();\n  const [searchResults, setSearchResults] = useState();\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  useRedirect();\n\n  // Loads the last search from local storage, if it exists\n  useEffect(() => {\n    const lastSearch = localStorage.getItem('lastSearch');\n    console.log(lastSearch);\n    if (lastSearch) {\n      setSearchResults(JSON.parse(lastSearch));\n      console.log(JSON.parse(lastSearch));\n    }\n  }, []);\n\n  const handleSearch = async (searchQuery) => {\n    // Empty search field\n    if (!searchQuery) {\n      setErrors({ message: 'Search field is empty' });\n      setShowAlert(true);\n      return;\n    }\n\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    try {\n      const response = await fetch(\n        `https://api.spotify.com/v1/search?q=${searchQuery}&type=album%2Cplaylist%2Cartist&limit=50`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('access_token'),\n          },\n          signal: signal,\n        }\n      );\n      const data = await response.json();\n\n      // Combine the items from albums, playlists, and artists\n      const combinedData = [\n        ...(data.albums?.items || []),\n        ...(data.playlists?.items || []),\n        ...(data.artists?.items || []),\n      ];\n\n      setSearchResults(combinedData);\n      console.log(combinedData);\n      // Saves the search results to local storage for later use\n      localStorage.setItem('lastSearch', JSON.stringify(combinedData));\n    } catch (error) {\n      setErrors({\n        message: error.response?.data || 'An error occurred in fetching',\n      });\n      setShowAlert(true);\n    }\n\n    // Cleanup - in case of early unmounting\n    return () => {\n      controller.abort();\n    };\n  };\n\n  const updateSpotifyPlayerUri = (uri) => {\n    setSpotifyPlayerUri(uri);\n  };\n\n  return (\n    <>\n      <Profile userId={currentUser?.pk} />\n      <Container className={styles.Container}>\n        <SearchBar onSearch={handleSearch} />\n        {showAlert && errors?.message && (\n          <Alert\n            variant='warning'\n            onClose={() => setShowAlert(false)}\n            dismissible\n          >\n            {errors.message}\n          </Alert>\n        )}\n        <Button onClick={handleAuthentication}>Authenticate</Button>\n        <Container>\n          <Row>\n            {searchResults?.map((result) => (\n              <Col\n                className={styles.PaddingReset}\n                key={result.id}\n                xs={4}\n                md={3}\n              >\n                <Button\n                  variant='link'\n                  onClick={() => updateSpotifyPlayerUri(result.uri)}\n                  className={styles.PaddingReset}\n                >\n                  <Playlist image={result.images[0]?.url} title={result.name} />\n                </Button>\n                <Row>\n                  <Col>\n                    <span>{result.name} </span>\n                    <span>\n                      <AddPlaylistButton playlistData={result} />\n                    </span>\n                  </Col>\n                </Row>\n              </Col>\n            ))}\n          </Row>\n        </Container>\n      </Container>\n    </>\n  );\n};\n\nexport default SpotifySearchPage;\n","// SOURCE: https://developer.spotify.com/documentation/embeds/tutorials/using-the-iframe-api\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\n\nfunction SpotifyPlayer() {\n  const playerRef = useRef();\n  const spotifyPlayerUri = useSpotifyPlayerUri();\n  const [embedController, setEmbedController] = useState(null);\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://open.spotify.com/embed/iframe-api/v1';\n    script.async = true;\n    document.body.appendChild(script);\n\n    window.onSpotifyIframeApiReady = (IFrameAPI) => {\n      const options = {\n        width: '100%',\n        height: '352px', // 352px is the minimum height before the player resizes to a smaller size\n        uri: spotifyPlayerUri,\n      };\n\n      const callback = (EmbedController) => {\n        setEmbedController(EmbedController);\n      };\n\n      IFrameAPI.createController(playerRef.current, options, callback);\n    };\n  }, [spotifyPlayerUri]);\n\n  useEffect(() => {\n    if (embedController) {\n      embedController.loadUri(spotifyPlayerUri);\n    }\n  }, [spotifyPlayerUri, embedController]);\n\n  return <div ref={playerRef}></div>;\n}\n\nexport default SpotifyPlayer;\n","import React from 'react';\nimport styles from '../styles/AccordionWindow.module.css';\nimport { Accordion, Card, Button } from 'react-bootstrap';\nimport SpotifyPlayer from '../spotify/SpotifyPlayer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp } from '@fortawesome/free-solid-svg-icons';\n\nfunction AccordionWindow() {\n  return (\n    <Accordion\n      // defaultActiveKey='0'\n      className={styles.AccordionPosition}\n    >\n      <Card className={styles.Card}>\n        <Card.Header className={styles.Header}>\n          <Accordion.Toggle\n            as={Button}\n            variant='link'\n            eventKey='0'\n            className={styles.PaddingReset}\n          >\n            <FontAwesomeIcon icon={faCaretUp} />\n          </Accordion.Toggle>\n        </Card.Header>\n        <Accordion.Collapse eventKey='0'>\n          <Card.Body className={styles.PaddingReset}>\n            <SpotifyPlayer />\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  );\n}\n\nexport default AccordionWindow;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport { useRedirect } from '../hooks/useRedirect';\n\nimport axios from 'axios';\nimport { axiosReq } from '../api/axiosDefaults';\nimport { fetchMoreData } from '../utils/dataUtils';\n\nimport Playlist from '../components/Playlist';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nimport styles from '../styles/PlaylistsPage.module.css';\nimport appStyles from '../App.module.css';\nimport loadingStyles from '../styles/LoadingSpinner.module.css';\nimport SearchBar from '../components/SearchBar';\n\nconst PlaylistsPage = ({ filter = '', profileView = false }) => {\n  const [playlists, setPlaylists] = useState([]);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const history = useHistory();\n\n  useRedirect();\n\n  useEffect(() => {\n    // Sends a CancelToken with the request\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    console.log('PlaylistsPage rendered');\n\n    const fetchPlaylists = async () => {\n      try {\n        const { data } = await axiosReq.get(`playlists/?${filter}`, {\n          cancelToken: source.token,\n        });\n        setPlaylists(data);\n        console.log('playlist data: ', data);\n        setHasLoaded(true);\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          console.log('Request canceled', err.message);\n        } else {\n          console.log(err);\n        }\n      }\n    };\n\n    setHasLoaded(false);\n    fetchPlaylists();\n\n    // Cleanup\n    return () => {\n      source.cancel('Request canceled');\n    };\n  }, [filter]);\n\n  return hasLoaded ? (\n    <Container\n      className={profileView ? styles.ProfileContainer : styles.Container}\n    >\n      {/* No SearchBar in pages with Profile.js component */}\n      {!profileView ? <SearchBar liveSearch data={playlists} /> : null}\n\n      <InfiniteScroll\n        dataLength={playlists.results.length}\n        loader={<LoadingSpinner />}\n        hasMore={!!playlists.next}\n        next={() => fetchMoreData(playlists, setPlaylists)}\n        className={styles.InfiniteScroll}\n      >\n        <Row>\n          {playlists.results.map((playlist) => (\n            <Col\n              className={appStyles.PaddingReset}\n              key={playlist.id}\n              xs={4}\n              md={3}\n            >\n              <Button\n                variant='link'\n                onClick={() => history.push(`/playlist/${playlist.id}`)}\n                className={styles.Button}\n              >\n                <Playlist image={playlist.image} title={playlist.title} />\n              </Button>\n            </Col>\n          ))}\n        </Row>\n      </InfiniteScroll>\n    </Container>\n  ) : (\n    <LoadingSpinner className={loadingStyles.Centered} />\n  );\n};\n\nexport default PlaylistsPage;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { useRedirect } from '../hooks/useRedirect';\n\nimport PlaylistsPage from './PlaylistsPage';\nimport Profile from '../components/Profile';\n\nconst ProfilePage = () => {\n  const { userId } = useParams();\n  useRedirect();\n  return (\n    <>\n      <Profile userId={userId} />\n      <PlaylistsPage filter={`owner__profile=${userId}`} profileView />\n    </>\n  );\n};\n\nexport default ProfilePage;\n","import React, { useEffect, useState } from 'react';\nimport { Rating, StickerStar } from '@smastrom/react-rating';\nimport '@smastrom/react-rating/style.css';\nimport { axiosReq, axiosRes } from '../api/axiosDefaults';\n\nconst StarRating = ({ playlist }) => {\n  const [rating, setRating] = useState(0);\n  console.log(playlist);\n\n  useEffect(() => {\n    const fetchRatingData = async () => {\n      if (playlist.rating_id) {\n        try {\n          const { data } = await axiosRes.get(`ratings/${playlist.rating_id}`);\n          setRating(data.score);\n          console.log('rating data: ', data);\n        } catch (err) {\n          console.log(err);\n        }\n      }\n    };\n    fetchRatingData();\n  }, [playlist]);\n\n  const handleChange = async (selectedValue) => {\n    if (playlist.rating_id) {\n      try {\n        await axiosReq.put(`ratings/${playlist.rating_id}`, {\n          score: selectedValue,\n        });\n\n        setRating(selectedValue);\n      } catch (err) {\n        console.log(err);\n      }\n    } else {\n      try {\n        await axiosReq.post('ratings/', {\n          playlist: playlist.id,\n          score: selectedValue,\n        });\n\n        setRating(selectedValue);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  };\n\n  const myStyles = {\n    itemShapes: StickerStar,\n    activeFillColor: '#df604e',\n    inactiveFillColor: '#df5f4e6e',\n  };\n\n  return (\n    <Rating\n      value={rating}\n      onChange={handleChange}\n      style={{ maxWidth: 250 }}\n      itemStyles={myStyles}\n      items={5}\n    />\n  );\n};\n\nexport default StarRating;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { useRedirect } from '../hooks/useRedirect';\n\nimport { axiosReq } from '../api/axiosDefaults';\nimport { useSetSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\n\nimport Playlist from '../components/Playlist';\nimport Profile from '../components/Profile';\nimport StarRating from '../components/StarRating';\n\nimport styles from '../styles/PlaylistDetail.module.css';\n\nconst PlaylistDetail = () => {\n  const { id } = useParams();\n  const [playlist, setPlaylist] = useState([]);\n  const [ratings, setRatings] = useState([]);\n  const setSpotifyPlayerUri = useSetSpotifyPlayerUri();\n  const history = useHistory();\n\n  useRedirect();\n\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      try {\n        const [{ data: playlist }, { data: ratings }] = await Promise.all([\n          axiosReq.get(`playlists/${id}`),\n          axiosReq.get(`ratings/?playlist=${id}`),\n        ]);\n\n        setPlaylist(playlist);\n        setRatings(ratings);\n        console.log(playlist);\n        console.log(ratings);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    fetchPlaylist();\n  }, [id]);\n\n  // NOTE: ATTACH THIS LOGIC TO ANOTHER BUTTON\n  const updateSpotifyPlayerUri = (uri) => {\n    setSpotifyPlayerUri(uri);\n  };\n\n  return (\n    <>\n      <Profile userId={playlist.owner_id} />\n      <Container className={styles.Container}>\n        <Row>\n          <Col xs={4}>\n            <Button\n              variant='link'\n              onClick={() => history.goBack()}\n              className={styles.Button}\n            >\n              <Playlist image={playlist.image} title={playlist.title} />\n            </Button>\n          </Col>\n          <Col xs={8}>\n            <Row>\n              <Col>\n                <h5>{playlist.title}</h5>\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={6}>\n                <h6>Average Rating</h6>\n                <p>{playlist.average_rating || '0'}</p>\n              </Col>\n              <Col xs={6}>\n                <h6># of Ratings</h6>\n                <p>{playlist.ratings_count}</p>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n        <StarRating playlist={playlist} />\n      </Container>\n    </>\n  );\n};\n\nexport default PlaylistDetail;\n","import styles from './App.module.css';\n// import logo from './logo.svg';\nimport NavBar from './components/NavBar';\nimport { Route, Switch } from 'react-router-dom';\nimport './api/axiosDefaults';\nimport SignUpForm from './pages/auth/SignUpForm';\nimport SignInForm from './pages/auth/SignInForm';\nimport SpotifySearchPage from './spotify/SpotifySearchPage';\nimport { useCurrentUser } from './contexts/CurrentUserContext';\nimport AccordionWindow from './components/AccordionWindow';\nimport ProfilePage from './pages/ProfilePage';\nimport PlaylistsPage from './pages/PlaylistsPage';\nimport PlaylistDetail from './pages/PlaylistDetail';\n\nfunction App() {\n  const currentUser = useCurrentUser();\n  const profile_id = currentUser?.pk || '';\n\n  return (\n    <div className={styles.App}>\n      <NavBar />\n      <AccordionWindow />\n      <Switch>\n        <Route exact path='/' render={() => <h1>Home Page</h1>} />\n        <Route exact path='/signin' render={() => <SignInForm />} />\n        <Route exact path='/signup' render={() => <SignUpForm />} />\n        <Route exact path='/profile/:userId' render={() => <ProfilePage />} />\n        <Route\n          exact\n          path='/popular'\n          render={() => (\n            <PlaylistsPage filter={`ratings__owner__profile=${profile_id}`} />\n          )}\n        />\n        <Route exact path='/playlist/:id' render={() => <PlaylistDetail />} />\n        <Route\n          exact\n          path='/feed'\n          render={() => (\n            <PlaylistsPage\n              filter={`owner__followed_by__owner__profile=${profile_id}`}\n            />\n          )}\n        />\n        <Route\n          exact\n          path='/spotify-search'\n          render={() => <SpotifySearchPage />}\n        />\n        <Route exact path='/placeholder' render={() => <h1>Placeholder</h1>} />\n        <Route render={() => <h1>Page Not Found!</h1>} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { CurrentUserProvider } from './contexts/CurrentUserContext';\nimport { SpotifyPlayerUriProvider } from './contexts/SpotifyPlayerUriContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CurrentUserProvider>\n      <SpotifyPlayerUriProvider>\n        <Router>\n          <App />\n        </Router>\n      </SpotifyPlayerUriProvider>\n    </CurrentUserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"SignInUpForm_Row__3PbVy\",\"Input\":\"SignInUpForm_Input__3xaLZ\",\"Header\":\"SignInUpForm_Header__3joQJ\",\"Link\":\"SignInUpForm_Link__1BeMm\",\"SignUpCol\":\"SignInUpForm_SignUpCol__28o4y\",\"SignInCol\":\"SignInUpForm_SignInCol__3ImPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__27i9m\",\"Wide\":\"Button_Wide__2ScDr\",\"PaddingReset\":\"Button_PaddingReset__3EaQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CustomBackground\":\"NavBar_CustomBackground__3zgb5\",\"NavLink\":\"NavBar_NavLink__34ons\",\"Active\":\"NavBar_Active__3PBZb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Content\":\"App_Content__ZaMNr\",\"FillerImage\":\"App_FillerImage__2ob-g\",\"PaddingReset\":\"App_PaddingReset__2Yixf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileContainer\":\"Profile_ProfileContainer__1MhJH\",\"AvatarContainer\":\"Profile_AvatarContainer__314Ah\",\"FontAwesomeIcon\":\"Profile_FontAwesomeIcon__1XfKb\",\"ProfileFontAwesomeIcon\":\"Profile_ProfileFontAwesomeIcon__1_PY0\",\"StatsContainer\":\"Profile_StatsContainer__1jyTN\",\"TransparentButton\":\"Profile_TransparentButton__27vlY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccordionPosition\":\"AccordionWindow_AccordionPosition__3Pg_2\",\"Header\":\"AccordionWindow_Header__3EVT_\",\"Card\":\"AccordionWindow_Card__RFCw5\",\"PaddingReset\":\"AccordionWindow_PaddingReset__RMqnf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Centered\":\"LoadingSpinner_Centered__2UoRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"ModalWindow_Header__hiHjJ\",\"Body\":\"ModalWindow_Body__13Mmm\",\"Color\":\"ModalWindow_Color__9jnUe\",\"Footer\":\"ModalWindow_Footer__3oRO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PlaylistsPage_Container__KgRlF\",\"ProfileContainer\":\"PlaylistsPage_ProfileContainer__1ky5y\",\"Button\":\"PlaylistsPage_Button__2jYpK\",\"InfiniteScroll\":\"PlaylistsPage_InfiniteScroll__1cMqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropdownMenu\":\"SearchBar_DropdownMenu__2J2wk\",\"DropdownItem\":\"SearchBar_DropdownItem__3uVVu\",\"SearchResultImage\":\"SearchBar_SearchResultImage__Xzg38\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SpotifySearchPage_Container__31uhH\",\"PaddingReset\":\"SpotifySearchPage_PaddingReset__2gaVg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FontAwesomeIcon\":\"SignOutButton_FontAwesomeIcon__WBpEv\",\"Button\":\"SignOutButton_Button__1D41d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PlaylistDetail_Container__37TnQ\",\"Button\":\"PlaylistDetail_Button__3EF93\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Avatar_Avatar__196lW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"Playlist_Image__2QZQC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"AddPlaylistButton_Button__19nCc\"};"],"sourceRoot":""}