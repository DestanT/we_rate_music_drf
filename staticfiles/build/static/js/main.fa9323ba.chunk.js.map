{"version":3,"sources":["styles/Profile.module.css","api/axiosDefaults.js","utils/dataUtils.js","contexts/CurrentUserContext.js","components/Avatar.js","components/NavBar.js","hooks/useRedirect.js","pages/auth/SignUpForm.js","pages/auth/SignInForm.js","utils/spotifyAuthUtils.js","spotify/useSpotifyAuth.js","contexts/SpotifyPlayerUriContext.js","components/LoadingSpinner.js","components/ModalWindow.js","components/SignOutButton.js","components/Profile.js","components/SearchBar.js","components/Playlist.js","spotify/AddPlaylistButton.js","spotify/SpotifySearchPage.js","spotify/SpotifyPlayer.js","components/AccordionWindow.js","pages/PlaylistsPage.js","pages/ProfilePage.js","components/StarRating.js","pages/PlaylistDetail.js","forms/PlaylistEditForm.js","forms/ProfileEditForm.js","assets/waveform.png","pages/PageNotFound404.js","pages/Homepage.js","forms/FeedbackCreateForm.js","App.js","reportWebVitals.js","index.js","styles/EditCreateForms.module.css","styles/NavBar.module.css","styles/SignInUpForm.module.css","App.module.css","styles/LoadingSpinner.module.css","styles/AccordionWindow.module.css","styles/PlaylistDetail.module.css","styles/Homepage.module.css","styles/SearchBar.module.css","styles/SpotifySearchPage.module.css","styles/PlaylistsPage.module.css","styles/ModalWindow.module.css","styles/Button.module.css","styles/Avatar.module.css","styles/SignOutButton.module.css","styles/Playlist.module.css"],"names":["module","exports","axios","defaults","baseURL","headers","post","withCredentials","axiosReq","create","axiosRes","fetchMoreData","async","resource","setResource","data","get","next","prevResource","results","reduce","acc","curr","some","accResult","id","err","console","log","removeTokenTimestamp","localStorage","removeItem","calculateAverageRatingPUT","prevState","rating","selectedValue","average_rating","ratings_count","calculateAverageRatingPOST","CurrentUserContext","createContext","SetCurrentUserContext","useCurrentUser","useContext","useSetCurrentUser","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","useState","history","useHistory","useEffect","handleMount","useMemo","interceptors","request","use","getItem","prevCurrentUser","push","config","Promise","reject","response","_err$response","status","_jsx","Provider","value","Avatar","src","height","className","styles","width","alt","concat","username","NavBar","loggedOutIcons","_jsxs","_Fragment","OverlayTrigger","placement","overlay","Tooltip","Navbar","Brand","href","Nav","SignInOut","NavLink","SignUpIn","activeClassName","Active","to","FontAwesomeIcon","MarginRight","icon","faRightToBracket","size","faUserPlus","loggedInIcons","faGlobe","faPeopleGroup","ProfileActive","profile_id","profile_image","faStar","faSpotify","style","color","navBarPosition","expand","fixed","Container","useRedirect","userAuthStatus","authPages","includes","location","pathname","homepage","SignUpForm","_errors$username","_errors$password","_errors$password2","_errors$non_field_err","signUpData","setSignUpData","password1","password2","errors","setErrors","handleChange","event","target","name","Row","Col","appStyles","Content","Header","Form","onSubmit","preventDefault","Group","controlId","Label","Control","Input","type","placeholder","onChange","map","message","idx","Alert","variant","Button","btnStyles","non_field_errors","Link","SignInForm","signInData","setSignInData","password","user","refreshTokenTimestamp","jwtDecode","refresh_token","exp","setItem","setTokenTimestamp","pk","clientId","codeVerifier","length","possible","crypto","getRandomValues","Uint8Array","x","generateRandomString","getCodeChallenge","hashed","TextEncoder","encode","plain","window","subtle","digest","sha256","input","btoa","String","fromCharCode","replace","redirectUri","useSpotifyAuth","code","URLSearchParams","search","payload","method","body","client_id","grant_type","redirect_uri","code_verifier","fetch","json","access_token","getToken","handleAuthentication","authUrl","URL","codeChallenge","params","response_type","scope","code_challenge_method","code_challenge","toString","spotifyAuthentication","SpotifyPlayerUriContext","SetSpotifyPlayerUriContext","useSpotifyPlayerUri","useSetSpotifyPlayerUri","SpotifyPlayerUriProvider","spotifyPlayerUri","setSpotifyPlayerUri","LoadingSpinner","faCompactDisc","spin","ModalWindow","props","Modal","centered","closeButton","Title","Color","title","Body","Footer","onClick","onHide","onConfirm","SignOutButton","modalShow","setModalShow","TransparentButton","faPowerOff","show","Profile","userId","profileData","setProfileData","hasLoaded","setHasLoaded","isFollowing","setIsFollowing","smallScreen","setSmallScreen","innerWidth","checkScreenSize","addEventListener","removeEventListener","following_id","fetchProfileData","followButton","followed","profile","followers_count","handleFollow","emptyStar","ProfileBottomRightIcon","unfollowButton","delete","handleUnfollow","editButton","faPen","feedbackButton","faCommentDots","ProfileTopRightIcon","smallScreenStatsContainer","StatsRow","StatsItem","playlists_count","following_count","largeScreenStatsContainer","md","ProfileContainer","backgroundImage","background","xs","faBackward","goBack","owner","is_owner","SmallText","AvatarStatsContainer","AlignItemsCenter","AvatarContainer","image","loadingStyles","Centered","SearchBar","onSearch","liveSearch","searchQuery","setSearchQuery","items","setItems","showDropdown","setShowDropdown","dropdownResults","DropdownMenu","InfiniteScroll","dataLength","loader","hasMore","DropdownItem","e","marginBottom","InputGroup","currentQuery","fetchItems","Append","faMagnifyingGlass","Playlist","Image","AddPlaylistButton","_playlist$images$2","playlistData","playlist","showAlert","setShowAlert","onClose","dismissible","_playlist$images$","spotify_id","images","url","external_urls","spotify","iframe_uri","uri","error","_error$response","SpotifySearchPage","searchResults","setSearchResults","lastSearch","JSON","parse","delay","setTimeout","clearTimeout","controller","AbortController","signal","_data$albums","_data$playlists","_data$artists","refreshTokenResponse","refreshToken","getRefreshToken","Authorization","combinedData","albums","playlists","artists","stringify","abort","result","_result$images$","PaddingReset","updateSpotifyPlayerUri","MarginBottom","Margin","SpotifyPlayer","playerRef","useRef","embedController","setEmbedController","script","document","createElement","appendChild","onSpotifyIframeApiReady","IFrameAPI","options","createController","current","EmbedController","loadUri","ref","AccordionWindow","activeKey","setActiveKey","showPlayer","setShowPlayer","Accordion","onSelect","handleToggle","AccordionPosition","Hidden","Card","Toggle","as","eventKey","faCaretDown","faCaretUp","Collapse","PlaylistsPage","filter","profileView","pageName","setPlaylists","source","CancelToken","cancelToken","token","isCancel","fetchPlaylists","cancel","HighlightedContainer","displayWhyNoPlaylistsMessage","ProfilePage","useParams","StarRating","setPlaylist","setRating","rating_id","score","fetchRatingData","myStyles","itemShapes","StickerStar","activeFillColor","inactiveFillColor","Rating","put","owner_rating","maxWidth","margin","itemStyles","fontSize","PlaylistDetail","fetchPlaylist","averageRatingStyles","ownerRatingStyles","itemStrokeWidth","activeStrokeColor","inactiveStrokeColor","displayOwnerAndRating","textAlign","readOnly","minWidth","displayJustOwner","owner_id","RowPadding","ScreenSizeContidionalPadding","description","WordBreak","redirectToEdit","PlaylistEditForm","_errors$title","_errors$description","setPlaylistData","formData","FormData","append","_err$response2","FormGroup","FormControl","rows","MarginLeftRight","faTrashCan","_err$response3","ProfileEditForm","_errors$image","_errors$background","profileImageInput","backgroundImageInput","_profileImageInput$cu","_backgroundImageInput","files","htmlFor","File","TextAlignLast","accept","PageNotFound404","padding","overflow","faFaceDizzy","waveform","Homepage","TitleContainer","Line","SecondLine","IntroContainer","FeedbackCreateForm","_errors$feedback","feedbackData","setfeedbackData","feedback","imageFile","showSuccess","setShowSuccess","warmWelcome","textFields","OverflowHidden","_imageFile$current","_imageFile$current2","createObjectURL","App","Switch","Route","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","Router","getElementById"],"mappings":"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","file":"static/js/main.fa9323ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileContainer\":\"Profile_ProfileContainer__1MhJH\",\"AvatarContainer\":\"Profile_AvatarContainer__314Ah\",\"AvatarStatsContainer\":\"Profile_AvatarStatsContainer__2LRQA\",\"StatsRow\":\"Profile_StatsRow__dTi8j\",\"StatsItem\":\"Profile_StatsItem__1s6Rh\",\"FontAwesomeIcon\":\"Profile_FontAwesomeIcon__1XfKb\",\"ProfileBottomRightIcon\":\"Profile_ProfileBottomRightIcon__gTIrd\",\"ProfileTopRightIcon\":\"Profile_ProfileTopRightIcon__31h-G\",\"SmallText\":\"Profile_SmallText__-iVK2\",\"AlignItemsCenter\":\"Profile_AlignItemsCenter__3z0zF\"};","// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport axios from 'axios';\n\naxios.defaults.baseURL = '/api';\naxios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\naxios.defaults.withCredentials = true;\n\nexport const axiosReq = axios.create();\nexport const axiosRes = axios.create();","// CREDIT: Code taken from Code Institute's 'Moments' walkthrough project\nimport { axiosReq } from '../api/axiosDefaults';\nimport jwtDecode from 'jwt-decode';\n\n/**\n * Fetches more data from a paginated API and updates the state of the resource.\n *\n * @param {Object} resource - resource to be updated\n * @param {Function} setResource - function to update the resource\n */\nexport const fetchMoreData = async (resource, setResource) => {\n  try {\n    const { data } = await axiosReq.get(resource.next);\n    setResource((prevResource) => ({\n      ...prevResource,\n      next: data.next,\n      results: data.results.reduce((acc, curr) => {\n        return acc.some((accResult) => accResult.id === curr.id)\n          ? acc\n          : [...acc, curr];\n      }, prevResource.results),\n    }));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const setTokenTimestamp = (data) => {\n  const refreshTokenTimestamp = jwtDecode(data?.refresh_token).exp;\n  localStorage.setItem('refreshTokenTimestamp', refreshTokenTimestamp);\n};\n\nexport const shouldRefreshToken = () => {\n  return !!localStorage.getItem('refreshTokenTimestamp');\n};\n\nexport const removeTokenTimestamp = () => {\n  localStorage.removeItem('refreshTokenTimestamp');\n};\n\n// Used in StarRating.js to calculate the average rating and update the state\n// Considers the fact that an existing rating is being updated\nexport function calculateAverageRatingPUT(prevState, rating, selectedValue) {\n  return (\n    (prevState.average_rating * prevState.ratings_count -\n      rating +\n      selectedValue) /\n    prevState.ratings_count\n  );\n}\n\n// Used in StarRating.js to calculate the average rating and update the state\n// Considers the fact that a new rating is being added\nexport function calculateAverageRatingPOST(prevState, selectedValue) {\n  return (\n    (prevState.average_rating * prevState.ratings_count + selectedValue) /\n    (prevState.ratings_count + 1)\n  );\n}\n","// CREDIT: Code taken from Code Institute's 'Moments' walkthrough project\nimport { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { axiosReq, axiosRes } from '../api/axiosDefaults';\nimport { useHistory } from 'react-router-dom';\nimport { removeTokenTimestamp, shouldRefreshToken } from '../utils/dataUtils';\n\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  useMemo(() => {\n    axiosReq.interceptors.request.use(\n      async (config) => {\n        if (shouldRefreshToken()) {\n          try {\n            await axios.post('/dj-rest-auth/token/refresh/');\n          } catch (err) {\n            console.log(err.request);\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                history.push('/signin');\n              }\n              return null;\n            });\n            removeTokenTimestamp();\n            return config;\n          }\n        }\n        return config;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n\n    axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err?.response?.status === 401) {\n          try {\n            await axios.post('/dj-rest-auth/token/refresh/');\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                history.push('/signin');\n              }\n              return null;\n            });\n            removeTokenTimestamp();\n          }\n          return axios(err.config);\n        }\n        return Promise.reject(err);\n      }\n    );\n  }, [history]);\n\n  const handleMount = async () => {\n    try {\n      const { data } = await axiosRes.get('dj-rest-auth/user/');\n      setCurrentUser(data);\n    } catch (err) {\n      console.log(err.request);\n    }\n  };\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n","import React from 'react';\nimport styles from '../styles/Avatar.module.css';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nconst Avatar = ({ src, height = 45 }) => {\n  const currentUser = useCurrentUser();\n  return (\n    <span>\n      <img\n        className={styles.Avatar}\n        src={src}\n        height={height}\n        width={height}\n        alt={`${currentUser?.username}' avatar`}\n      />\n    </span>\n  )\n}\n\nexport default Avatar","import styles from '../styles/NavBar.module.css';\nimport React from 'react';\nimport {\n  Navbar,\n  Container,\n  Nav,\n  OverlayTrigger,\n  Tooltip,\n} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpotify } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faStar,\n  faPeopleGroup,\n  faUserPlus,\n  faRightToBracket,\n  faGlobe,\n} from '@fortawesome/free-solid-svg-icons';\nimport { NavLink } from 'react-router-dom';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport Avatar from './Avatar';\n\nconst NavBar = () => {\n  const currentUser = useCurrentUser();\n\n  const loggedOutIcons = (\n    <>\n      {/* Brand logo */}\n      <OverlayTrigger\n        placement='bottom'\n        overlay={<Tooltip id='feedback-tooltip'>Home</Tooltip>}\n      >\n        <Navbar.Brand className={styles.Brand} href='/'>\n          We -R- Music\n        </Navbar.Brand>\n      </OverlayTrigger>\n\n      <Nav className={styles.SignInOut}>\n        {/* Login button */}\n        <OverlayTrigger\n          placement='bottom'\n          overlay={<Tooltip id='feedback-tooltip'>Click to Login</Tooltip>}\n        >\n          <NavLink\n            className={styles.SignUpIn}\n            activeClassName={styles.Active}\n            to='/signin'\n          >\n            <FontAwesomeIcon\n              className={styles.MarginRight}\n              icon={faRightToBracket}\n              size='2xl'\n            />\n            Login\n          </NavLink>\n        </OverlayTrigger>\n\n        {/* Signup button */}\n        <OverlayTrigger\n          placement='bottom'\n          overlay={<Tooltip id='feedback-tooltip'>Click to sign up!</Tooltip>}\n        >\n          <NavLink\n            className={styles.SignUpIn}\n            activeClassName={styles.Active}\n            to='/signup'\n          >\n            <FontAwesomeIcon\n              className={styles.MarginRight}\n              icon={faUserPlus}\n              size='2xl'\n            />\n            Sign Up!\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n    </>\n  );\n  const loggedInIcons = (\n    <>\n      {/* All playlists */}\n      <Nav className='mr-auto'>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='feedback-tooltip'>All playlists</Tooltip>}\n        >\n          <NavLink activeClassName={styles.Active} to='/global'>\n            <FontAwesomeIcon icon={faGlobe} size='2xl' />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n\n      {/* Followed user playlists */}\n      <Nav className='mr-auto'>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='feedback-tooltip'>Followed user feed</Tooltip>}\n        >\n          <NavLink activeClassName={styles.Active} to='/feed'>\n            <FontAwesomeIcon icon={faPeopleGroup} size='2xl' />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n\n      {/* User's profile */}\n      <Nav>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='feedback-tooltip'>Your profile</Tooltip>}\n        >\n          <NavLink\n            activeClassName={styles.ProfileActive}\n            to={`/profile/${currentUser?.profile_id}`}\n          >\n            <Avatar src={currentUser?.profile_image} height={40} />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n\n      {/* User's rated playlists */}\n      <Nav className='ml-auto'>\n        <OverlayTrigger\n          placement='top'\n          overlay={\n            <Tooltip id='feedback-tooltip'>Playlists you've rated</Tooltip>\n          }\n        >\n          <NavLink activeClassName={styles.Active} to='/rated-playlists'>\n            <FontAwesomeIcon icon={faStar} size='2xl' />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n\n      {/* Spotify search page */}\n      <Nav className='ml-auto'>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='feedback-tooltip'>Search Spotify</Tooltip>}\n        >\n          <NavLink to='/spotify-search'>\n            <FontAwesomeIcon\n              icon={faSpotify}\n              style={{ color: '#1db954' }}\n              size='2xl'\n            />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n    </>\n  );\n\n  const navBarPosition = currentUser ? 'bottom' : 'top';\n\n  return (\n    <Navbar className={styles.NavBar} expand='md' fixed={navBarPosition}>\n      <Container>{currentUser ? loggedInIcons : loggedOutIcons}</Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import axios from 'axios';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\n/**\n * useRedirect hook: redirects users based on their logged in status\n */\nexport const useRedirect = () => {\n  const history = useHistory();\n  const currentUser = useCurrentUser();\n  const userAuthStatus = currentUser ? 'loggedIn' : 'loggedOut';\n  const authPages = ['/signin', '/signup'].includes(history.location.pathname);\n  const homepage = ['/'].includes(history.location.pathname);\n\n  useEffect(() => {\n    const handleMount = async () => {\n      // if user is logged in and on signin/signup page, redirect to profile page\n      if (authPages || homepage) {\n        if (userAuthStatus === 'loggedIn') {\n          history.push(`/profile/${currentUser.profile_id}`);\n          return;\n        }\n        if (userAuthStatus === 'loggedOut') {\n          return;\n        }\n      }\n      try {\n        await axios.post('/dj-rest-auth/token/refresh/');\n        // if userAuthStatus is logged in, do nothing\n        if (userAuthStatus === 'loggedIn') {\n          return;\n        }\n      } catch (err) {\n        // if user is not logged in, redirect to home/welcome page\n        if (userAuthStatus === 'loggedOut') {\n          history.push('/');\n        }\n      }\n    };\n\n    handleMount();\n  }, [history, userAuthStatus, currentUser, authPages, homepage]);\n};\n","// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useRedirect } from '../../hooks/useRedirect';\n\nimport { Form, Button, Col, Row, Container, Alert } from 'react-bootstrap';\n\nimport styles from '../../styles/SignInUpForm.module.css';\nimport btnStyles from '../../styles/Button.module.css';\nimport appStyles from '../../App.module.css';\n\nimport axios from 'axios';\n\nconst SignUpForm = () => {\n  useRedirect();\n  const [signUpData, setSignUpData] = useState({\n    username: '',\n    password1: '',\n    password2: '',\n  });\n  const { username, password1, password2 } = signUpData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    setSignUpData({\n      ...signUpData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axios.post('/dj-rest-auth/registration/', signUpData);\n      history.push('/signin');\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <Container>\n      <Row className={styles.Row}>\n        <Col className='my-auto py-2 p-md-2'>\n          <Container className={`${appStyles.Content} p-4 `}>\n            <h1 className={styles.Header}>sign up</h1>\n\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId='username'>\n                <Form.Label className='d-none'>username</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='text'\n                  placeholder='Username'\n                  name='username'\n                  value={username}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.username?.map((message, idx) => (\n                <Alert variant='warning' key={idx}>\n                  {message}\n                </Alert>\n              ))}\n\n              <Form.Group controlId='password1'>\n                <Form.Label className='d-none'>Password</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='password'\n                  placeholder='Password'\n                  name='password1'\n                  value={password1}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.password1?.map((message, idx) => (\n                <Alert key={idx} variant='warning'>\n                  {message}\n                </Alert>\n              ))}\n\n              <Form.Group controlId='password2'>\n                <Form.Label className='d-none'>Confirm password</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='password'\n                  placeholder='Confirm password'\n                  name='password2'\n                  value={password2}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.password2?.map((message, idx) => (\n                <Alert key={idx} variant='warning'>\n                  {message}\n                </Alert>\n              ))}\n\n              <Button className={btnStyles.Button} type='submit'>\n                Sign up\n              </Button>\n              {errors.non_field_errors?.map((message, idx) => (\n                <Alert key={idx} variant='warning' className='mt-3'>\n                  {message}\n                </Alert>\n              ))}\n            </Form>\n          </Container>\n\n          <Container className={`mt-3 ${appStyles.Content}`}>\n            <Link className={styles.Link} to='/signin'>\n              Already have an account? <span>Sign in</span>\n            </Link>\n          </Container>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SignUpForm;\n","// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport React, { useState } from 'react';\nimport { Form, Alert, Button, Col, Row, Container } from 'react-bootstrap';\n\nimport axios from 'axios';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport styles from '../../styles/SignInUpForm.module.css';\nimport appStyles from '../../App.module.css';\nimport btnStyles from '../../styles/Button.module.css';\n\nimport { useSetCurrentUser } from '../../contexts/CurrentUserContext';\nimport { useRedirect } from '../../hooks/useRedirect';\nimport { setTokenTimestamp } from '../../utils/dataUtils';\n\nfunction SignInForm() {\n  const setCurrentUser = useSetCurrentUser();\n  useRedirect();\n\n  const [signInData, setSignInData] = useState({\n    username: '',\n    password: '',\n  });\n  const { username, password } = signInData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await axios.post('/dj-rest-auth/login/', signInData);\n      setCurrentUser(data.user);\n      setTokenTimestamp(data);\n      history.push(`/profile/${data.user.pk}`);\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n\n  const handleChange = (event) => {\n    setSignInData({\n      ...signInData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <Container>\n      <Row className={styles.Row}>\n        <Col className='my-auto py-2 p-md-2'>\n          <Container className={`${appStyles.Content} p-4`}>\n            <h1 className={styles.Header}>sign in</h1>\n\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId='username'>\n                <Form.Label className='d-none'>Username</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='text'\n                  placeholder='Username'\n                  name='username'\n                  value={username}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.username?.map((message, idx) => (\n                <Alert key={idx} variant='warning'>\n                  {message}\n                </Alert>\n              ))}\n\n              <Form.Group controlId='password'>\n                <Form.Label className='d-none'>Password</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='password'\n                  placeholder='Password'\n                  name='password'\n                  value={password}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.password?.map((message, idx) => (\n                <Alert key={idx} variant='warning'>\n                  {message}\n                </Alert>\n              ))}\n\n              <Button className={btnStyles.Button} type='submit'>\n                Sign in\n              </Button>\n              {errors.non_field_errors?.map((message, idx) => (\n                <Alert key={idx} variant='warning' className='mt-3'>\n                  {message}\n                </Alert>\n              ))}\n            </Form>\n          </Container>\n\n          <Container className={`mt-3 ${appStyles.Content}`}>\n            <Link className={styles.Link} to='/signup'>\n              Don't have an account? <span>Sign up now!</span>\n            </Link>\n          </Container>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default SignInForm;\n","// SOURCE: https://developer.spotify.com/documentation/web-api/tutorials/code-pkce-flow\n\n// Code verifier\nconst generateRandomString = (length) => {\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const values = crypto.getRandomValues(new Uint8Array(length));\n  return values.reduce((acc, x) => acc + possible[x % possible.length], '');\n};\n\n// Code challenge\nconst sha256 = async (plain) => {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return window.crypto.subtle.digest('SHA-256', data);\n};\n\nconst base64encode = (input) => {\n  return btoa(String.fromCharCode(...new Uint8Array(input)))\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n};\n\n// Exports\nexport const clientId = '51c949a050b74ceba5688d10a1c7f5f1';\nexport const codeVerifier = generateRandomString(64);\nexport const getCodeChallenge = async () => {\n  const hashed = await sha256(codeVerifier);\n  return base64encode(hashed);\n};\n\n// Redirect URI\nexport let redirectUri;\nif (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test') {\n  redirectUri = 'http://localhost:3000/spotify-search';\n} else {\n  redirectUri =\n    'https://we-rate-music-drf-1626129441d6.herokuapp.com/spotify-search';\n}\n\n// Refreshing the access token\nexport const getRefreshToken = async () => {\n  // refresh token that has been previously stored\n  const refreshToken = localStorage.getItem('refresh_token');\n  const url = 'https://accounts.spotify.com/api/token';\n\n  const payload = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: new URLSearchParams({\n      grant_type: 'refresh_token',\n      refresh_token: refreshToken,\n      client_id: clientId,\n    }),\n  };\n  const body = await fetch(url, payload);\n  const response = await body.json();\n\n  localStorage.setItem('access_token', response.access_token);\n  localStorage.setItem('refresh_token', response.refresh_token);\n};\n","// SOURCE: https://developer.spotify.com/documentation/web-api/tutorials/code-pkce-flow\n\nimport { useEffect } from 'react';\nimport {\n  clientId,\n  codeVerifier,\n  getCodeChallenge,\n  redirectUri,\n} from '../utils/spotifyAuthUtils';\n\nexport const useSpotifyAuth = () => {\n  const spotifyAuthentication = async () => {\n    const scope = 'user-read-private user-read-email streaming';\n    const authUrl = new URL('https://accounts.spotify.com/authorize');\n\n    // generated in utils/spotifyAuthUtils.js\n    window.localStorage.setItem('code_verifier', codeVerifier);\n\n    const codeChallenge = await getCodeChallenge();\n\n    const params = {\n      response_type: 'code',\n      client_id: clientId,\n      scope,\n      code_challenge_method: 'S256',\n      code_challenge: codeChallenge,\n      redirect_uri: redirectUri,\n    };\n\n    authUrl.search = new URLSearchParams(params).toString();\n    window.location.href = authUrl.toString();\n  };\n\n  const getToken = async (code) => {\n    // stored from spotifyAuthentication()\n    let codeVerifier = localStorage.getItem('code_verifier');\n\n    const payload = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        client_id: clientId,\n        grant_type: 'authorization_code',\n        code,\n        redirect_uri: redirectUri,\n        code_verifier: codeVerifier,\n      }),\n    };\n\n    const url = 'https://accounts.spotify.com/api/token';\n    const body = await fetch(url, payload);\n    const response = await body.json();\n\n    if (response.access_token) {\n      localStorage.setItem('access_token', response.access_token);\n      localStorage.setItem('refresh_token', response.refresh_token);\n    } else {\n      console.log('Error: ', response);\n    }\n  };\n\n  const handleAuthentication = async () => {\n    await spotifyAuthentication();\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    let code = urlParams.get('code');\n    if (code) {\n      window.localStorage.setItem('code', code);\n      getToken(code);\n    }\n  }, []);\n\n  return { handleAuthentication };\n};\n","import { createContext, useContext, useState } from 'react';\n\nexport const SpotifyPlayerUriContext = createContext();\nexport const SetSpotifyPlayerUriContext = createContext();\n\nexport const useSpotifyPlayerUri = () => useContext(SpotifyPlayerUriContext);\nexport const useSetSpotifyPlayerUri = () =>\n  useContext(SetSpotifyPlayerUriContext);\n\nexport const SpotifyPlayerUriProvider = ({ children }) => {\n  const [spotifyPlayerUri, setSpotifyPlayerUri] = useState('');\n\n  return (\n    <SpotifyPlayerUriContext.Provider value={spotifyPlayerUri}>\n      <SetSpotifyPlayerUriContext.Provider value={setSpotifyPlayerUri}>\n        {children}\n      </SetSpotifyPlayerUriContext.Provider>\n    </SpotifyPlayerUriContext.Provider>\n  );\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCompactDisc } from '@fortawesome/free-solid-svg-icons';\n\nconst LoadingSpinner = () => {\n  return (\n    <div>\n      <FontAwesomeIcon icon={faCompactDisc} size='2xl' spin />\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\nimport styles from '../styles/ModalWindow.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\n/**\n * ModalWindow component renders a modal window.\n *\n * Must be used with the following props:\n * - show={modalShow}\n * - onHide={() => setModalShow(false)}\n * - onConfirm: custom function\n * - title: string\n * - body: JSX\n */\nfunction ModalWindow(props) {\n  return (\n    <Modal {...props} size='sm' aria-labelledby='confirmation modal' centered>\n      <Modal.Header className={styles.Header} closeButton>\n        <Modal.Title id='confirmation modal' className={styles.Color}>\n          {props.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className={styles.Body}>{props.body}</Modal.Body>\n      <Modal.Footer className={styles.Footer}>\n        <Button onClick={props.onHide} className={btnStyles.Button}>\n          Close\n        </Button>\n        <Button onClick={props.onConfirm} className={btnStyles.Button}>\n          Confirm\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default ModalWindow;\n","import React, { useState } from 'react';\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nimport axios from 'axios';\nimport ModalWindow from './ModalWindow';\nimport { useSetCurrentUser } from '../contexts/CurrentUserContext';\nimport { removeTokenTimestamp } from '../utils/dataUtils';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPowerOff } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from '../styles/SignOutButton.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\nconst SignOutButton = () => {\n  const setCurrentUser = useSetCurrentUser();\n  const [modalShow, setModalShow] = useState(false);\n  const history = useHistory();\n\n  const handleSignOut = async () => {\n    try {\n      await axios.post('/dj-rest-auth/logout/');\n      setCurrentUser(null);\n      removeTokenTimestamp();\n      setModalShow(false);\n      history.push('/');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <OverlayTrigger\n        placement='bottom'\n        overlay={<Tooltip id='sign-out-tooltip'>Sign Out</Tooltip>}\n      >\n        <Button\n          onClick={() => setModalShow(true)}\n          className={btnStyles.TransparentButton}\n        >\n          <FontAwesomeIcon\n            className={styles.FontAwesomeIcon}\n            icon={faPowerOff}\n            size='xl'\n          />\n        </Button>\n      </OverlayTrigger>\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleSignOut}\n        title='Sign out?'\n        body='Are you sure you want to sign out?'\n      />\n    </>\n  );\n};\n\nexport default SignOutButton;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  OverlayTrigger,\n  Tooltip,\n} from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { axiosReq, axiosRes } from '../api/axiosDefaults';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBackward,\n  faStar,\n  faPen,\n  faCommentDots,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faStar as emptyStar } from '@fortawesome/free-regular-svg-icons';\n\nimport Avatar from './Avatar';\nimport LoadingSpinner from './LoadingSpinner';\nimport SignOutButton from './SignOutButton';\n\nimport styles from '../styles/Profile.module.css';\nimport btnStyles from '../styles/Button.module.css';\nimport loadingStyles from '../styles/LoadingSpinner.module.css';\n\nconst Profile = ({ userId }) => {\n  const currentUser = useCurrentUser();\n  const [profileData, setProfileData] = useState({});\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [smallScreen, setSmallScreen] = useState(window.innerWidth < 768);\n  const history = useHistory();\n\n  console.log('profile rendered');\n  useEffect(() => {\n    const checkScreenSize = () => {\n      setSmallScreen(window.innerWidth < 768);\n    };\n\n    window.addEventListener('resize', checkScreenSize);\n\n    return () => {\n      window.removeEventListener('resize', checkScreenSize);\n    };\n  }, []);\n\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      try {\n        const { data } = await axiosReq.get(`profiles/${userId}`);\n        setProfileData(data);\n        console.log('profiledata: ', data);\n        setIsFollowing(data.following_id ? true : false);\n        setHasLoaded(true);\n      } catch (err) {\n        if (err.response?.status === 404) {\n          history.push('/404-error-page');\n        } else {\n          console.log(err);\n        }\n      }\n    };\n\n    setHasLoaded(false);\n    fetchProfileData();\n  }, [userId, history]);\n\n  const handleFollow = async (profile) => {\n    try {\n      const { data } = await axiosRes.post('followers/', {\n        followed: profile.id,\n      });\n      console.log('handleFollow: ', data);\n\n      setProfileData((prevState) => ({\n        ...prevState,\n        followers_count: prevState.followers_count + 1,\n        following_id: data.id,\n      }));\n\n      setIsFollowing(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleUnfollow = async (profile) => {\n    try {\n      const { data } = await axiosRes.delete(\n        `followers/${profile.following_id}`\n      );\n      console.log('handleUnfollow: ', data);\n\n      setProfileData((prevState) => ({\n        ...prevState,\n        followers_count: prevState.followers_count - 1,\n      }));\n\n      setIsFollowing(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const followButton = (\n    <OverlayTrigger\n      placement='bottom'\n      overlay={<Tooltip id='follow-tooltip'>Follow</Tooltip>}\n    >\n      <Button\n        className={btnStyles.TransparentButton}\n        onClick={() => handleFollow(profileData)}\n      >\n        <FontAwesomeIcon\n          icon={emptyStar}\n          size='xl'\n          className={styles.ProfileBottomRightIcon}\n        />\n      </Button>\n    </OverlayTrigger>\n  );\n\n  const unfollowButton = (\n    <OverlayTrigger\n      placement='bottom'\n      overlay={<Tooltip id='unfollow-tooltip'>Unfollow</Tooltip>}\n    >\n      <Button\n        className={btnStyles.TransparentButton}\n        onClick={() => handleUnfollow(profileData)}\n      >\n        <FontAwesomeIcon\n          icon={faStar}\n          size='xl'\n          className={styles.ProfileBottomRightIcon}\n        />\n      </Button>\n    </OverlayTrigger>\n  );\n\n  const editButton = (\n    <OverlayTrigger\n      placement='bottom'\n      overlay={<Tooltip id='edit-tooltip'>Edit</Tooltip>}\n    >\n      <Button\n        className={btnStyles.TransparentButton}\n        onClick={() => history.push(`/profile/${userId}/edit`)}\n      >\n        <FontAwesomeIcon\n          icon={faPen}\n          size='xl'\n          className={styles.ProfileBottomRightIcon}\n        />\n      </Button>\n    </OverlayTrigger>\n  );\n\n  const feedbackButton = (\n    <OverlayTrigger\n      placement='bottom'\n      overlay={<Tooltip id='feedback-tooltip'>Help us improve!</Tooltip>}\n    >\n      <Button\n        onClick={() => history.push('/feedback/create')}\n        className={btnStyles.TransparentButton}\n      >\n        <FontAwesomeIcon\n          icon={faCommentDots}\n          size='xl'\n          className={styles.ProfileTopRightIcon}\n        />\n      </Button>\n    </OverlayTrigger>\n  );\n\n  const smallScreenStatsContainer = (\n    <>\n      <Row className={styles.StatsRow}>\n        <p className={styles.StatsItem}>\n          Playlists: {profileData.playlists_count}\n        </p>\n      </Row>\n      <Row className={styles.StatsRow}>\n        <p className={styles.StatsItem}>\n          Followers: {profileData.followers_count}\n        </p>\n      </Row>\n      <Row className={styles.StatsRow}>\n        <p className={styles.StatsItem}>\n          Following: {profileData.following_count}\n        </p>\n      </Row>\n    </>\n  );\n\n  const largeScreenStatsContainer = (\n    <Row className={styles.StatsRow}>\n      <Col md={4} className='align-self-center'>\n        <h4 className='mb-0'>{profileData.playlists_count}</h4>\n        <p className={styles.StatsItem}>Playlists</p>\n      </Col>\n      <Col md={4} className='align-self-center'>\n        <h4 className='mb-0'>{profileData.followers_count}</h4>\n        <p className={styles.StatsItem}>Followers</p>\n      </Col>\n      <Col md={4} className='align-self-center'>\n        <h4 className='mb-0'>{profileData.following_count}</h4>\n        <p className={styles.StatsItem}>Following</p>\n      </Col>\n    </Row>\n  );\n\n  return hasLoaded ? (\n    // Profile data loaded\n    <Container\n      className={styles.ProfileContainer}\n      style={{ backgroundImage: `url(${profileData.background})` }}\n    >\n      {/* Header */}\n      <Container>\n        <Row>\n          {/* Back button */}\n          <Col xs={3}>\n            <OverlayTrigger\n              placement='bottom'\n              overlay={<Tooltip id='back-tooltip'>Back</Tooltip>}\n            >\n              <FontAwesomeIcon\n                icon={faBackward}\n                size='xl'\n                className={styles.FontAwesomeIcon}\n                onClick={() => history.goBack()}\n              />\n            </OverlayTrigger>\n          </Col>\n          <Col xs={6}>\n            <h2 className='mb-0'>{profileData.owner}</h2>\n            {profileData.is_owner && (\n              <em className={styles.SmallText}>You're logged in as:</em>\n            )}\n          </Col>\n          <Col xs={3}>\n            <SignOutButton />\n          </Col>\n        </Row>\n      </Container>\n\n      {/* Profile picture and stats */}\n      <Container className={styles.AvatarStatsContainer}>\n        <Row className={styles.AlignItemsCenter}>\n          <Col xs={3} className={styles.AvatarContainer}>\n            <Button\n              type='link'\n              className={btnStyles.TransparentButton}\n              onClick={() => history.push(`/profile/${profileData.id}`)}\n            >\n              <Avatar src={profileData.image} height={100} />\n            </Button>\n\n            {/* Follow/Unfollow button - if the current user is not the owner of the profile */}\n            {currentUser &&\n              !profileData?.is_owner &&\n              (isFollowing ? unfollowButton : !isFollowing && followButton)}\n\n            {/* Edit button - if the current user is the owner of the profile */}\n            {currentUser && profileData?.is_owner && editButton}\n\n            {/* Feedback button - if the current user is the owner of the profile */}\n            {currentUser && profileData?.is_owner && feedbackButton}\n          </Col>\n          <Col xs={9}>\n            {smallScreen\n              ? smallScreenStatsContainer\n              : largeScreenStatsContainer}\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  ) : (\n    // Profile data not yet loaded\n    <>\n      {/* Replicated container structure and styles */}\n      <Container className={styles.ProfileContainer}>\n        <Container>\n          <LoadingSpinner className={loadingStyles.Centered} />\n        </Container>\n        <Container className={styles.AvatarStatsContainer}>\n          <LoadingSpinner className={loadingStyles.Centered} />\n        </Container>\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Button, InputGroup, Row, Col, Container } from 'react-bootstrap';\n\nimport { axiosReq } from '../api/axiosDefaults';\nimport { fetchMoreData } from '../utils/dataUtils';\n\nimport Avatar from './Avatar';\nimport LoadingSpinner from './LoadingSpinner';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport styles from '../styles/SearchBar.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\n\nfunction SearchBar({ onSearch, liveSearch = false }) {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [items, setItems] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const history = useHistory();\n\n  const fetchItems = async () => {\n    try {\n      const { data } = await axiosReq.get(`profiles/?search=${searchQuery}`);\n      setItems(data);\n      console.log(data);\n      setShowDropdown(true);\n      setHasLoaded(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // This is function is disabled in the <Button> element, if liveSearch is truthy\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    onSearch(searchQuery);\n  };\n\n  const handleInputChange = async (e) => {\n    const currentQuery = e.target.value;\n    setSearchQuery(currentQuery);\n    console.log(currentQuery);\n\n    if (currentQuery === '') {\n      setShowDropdown(false);\n      return;\n    }\n\n    if (liveSearch) {\n      await fetchItems();\n    }\n  };\n\n  const dropdownResults = hasLoaded ? (\n    <Container className={styles.DropdownMenu}>\n      {items?.results.length ? (\n        <InfiniteScroll\n          dataLength={items.results.length}\n          loader={<LoadingSpinner />}\n          hasMore={!!items.next}\n          next={() => fetchMoreData(items, setItems)}\n          className={styles.InfiniteScroll}\n        >\n          {items.results.map((profile) => (\n            <Row\n              key={profile.id}\n              className={styles.DropdownItem}\n              onClick={() => {\n                history.push(`/profile/${profile.id}`);\n              }}\n            >\n              <Avatar src={profile.image} height={75} />\n              <Col>{profile.owner}</Col>\n            </Row>\n          ))}\n        </InfiniteScroll>\n      ) : (\n        <Row className={styles.DropdownItem}>\n          <Col>No results found</Col>\n        </Row>\n      )}\n    </Container>\n  ) : (\n    <Container className={styles.DropdownMenu}>\n      <LoadingSpinner />\n    </Container>\n  );\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId='searchForm' style={{ marginBottom: '0' }}>\n          <InputGroup>\n            <Form.Control\n              type='text'\n              placeholder={liveSearch ? 'Search for users' : 'Search Spotify'}\n              onChange={handleInputChange}\n              value={searchQuery}\n            />\n            <InputGroup.Append>\n              {liveSearch ? null : (\n                <Button type='submit' className={btnStyles.Button}>\n                  <FontAwesomeIcon\n                    icon={faMagnifyingGlass}\n                    style={{ color: '#3d3d3d' }}\n                    size='lg'\n                  />\n                </Button>\n              )}\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Form>\n      {liveSearch && showDropdown && dropdownResults}\n    </>\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport styles from '../styles/Playlist.module.css';\n\n// Set default image if no image is provided\nconst defaultImage =\n  'https://res.cloudinary.com/dxgzepuov/image/upload/v1702896303/default_post_uq5gxz.jpg';\n\n/**\n * Playlist component to display the image of a playlist. Default image is used if no image is provided.\n *\n * @param {string} image - The image URL of the playlist\n * @param {string} title - The title of the playlist\n */\nconst Playlist = ({ image, title }) => {\n  return (\n    <img\n      src={image || defaultImage}\n      className={styles.Image}\n      alt={`${title}'s cover art`}\n    />\n  );\n};\n\nexport default Playlist;\n","import React, { useState } from 'react';\nimport { Button, Alert } from 'react-bootstrap';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport { axiosRes } from '../api/axiosDefaults';\n\nimport ModalWindow from '../components/ModalWindow';\nimport Playlist from '../components/Playlist';\n\nimport btnStyles from '../styles/Button.module.css';\n\nfunction AddPlaylistButton({ playlistData: playlist }) {\n  const currentUser = useCurrentUser();\n  const [modalShow, setModalShow] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = {\n      spotify_id: playlist.id,\n      title: playlist.name,\n      image: playlist.images[0]?.url,\n      url: playlist.external_urls.spotify,\n      iframe_uri: playlist.uri,\n      owner: currentUser.profile_id,\n    };\n\n    try {\n      const response = await axiosRes.post('playlists/', data);\n      console.log(response);\n      setModalShow(false);\n    } catch (error) {\n      setErrors({\n        message:\n          error.response?.data || 'Something went wrong! Please try again.',\n      });\n      setShowAlert(true);\n    }\n  };\n\n  return (\n    <>\n      <Button onClick={() => setModalShow(true)} className={btnStyles.Button}>\n        Add\n      </Button>\n\n      {showAlert && errors?.message && (\n        <Alert\n          variant='warning'\n          onClose={() => setShowAlert(false)}\n          dismissible\n        >\n          {errors.message}\n        </Alert>\n      )}\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleSubmit}\n        title={`Add \"${playlist.name}\" to your profile?`}\n        body={\n          <Playlist image={playlist.images[0]?.url} title={playlist.name} />\n        }\n      />\n    </>\n  );\n}\n\nexport default AddPlaylistButton;\n","import React, { useEffect, useState } from 'react';\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap';\n\nimport { useSpotifyAuth } from './useSpotifyAuth';\nimport { useSetSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport { useRedirect } from '../hooks/useRedirect';\nimport { getRefreshToken } from '../utils/spotifyAuthUtils';\n\nimport Profile from '../components/Profile';\nimport SearchBar from '../components/SearchBar';\nimport Playlist from '../components/Playlist';\nimport AddPlaylistButton from './AddPlaylistButton';\n\nimport styles from '../styles/SpotifySearchPage.module.css';\nimport ModalWindow from '../components/ModalWindow';\n\nconst SpotifySearchPage = () => {\n  useRedirect();\n\n  const { handleAuthentication } = useSpotifyAuth();\n  const setSpotifyPlayerUri = useSetSpotifyPlayerUri();\n  const currentUser = useCurrentUser();\n  const [searchResults, setSearchResults] = useState();\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n\n  useEffect(() => {\n    setModalShow(false);\n    // Loads the last search from local storage, if it exists\n    const lastSearch = localStorage.getItem('lastSearch');\n    console.log(lastSearch);\n    if (lastSearch) {\n      setSearchResults(JSON.parse(lastSearch));\n      console.log(JSON.parse(lastSearch));\n    }\n\n    // Delay - to allow useSpotityAuth the time to set access_token to localStorage (Blunt force fix)\n    const delay = setTimeout(() => {\n      // Checks if the user has access_token in local storage\n      const access_token = localStorage.getItem('access_token');\n      console.log(access_token);\n      if (!access_token) {\n        setModalShow(true);\n      }\n    }, 1000);\n\n    // Cleanup\n    return () => {\n      clearTimeout(delay);\n    };\n  }, []);\n\n  const handleSearch = async (searchQuery) => {\n    setErrors({});\n    // Empty search field\n    if (!searchQuery) {\n      setErrors({ message: 'Search field is empty' });\n      setShowAlert(true);\n      return;\n    }\n\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    try {\n      // Refreshes the access token before every search\n      const refreshTokenResponse = await getRefreshToken();\n      console.log('refresh token response:', refreshTokenResponse);\n\n      const response = await fetch(\n        `https://api.spotify.com/v1/search?q=${searchQuery}&type=album%2Cplaylist%2Cartist&limit=50`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('access_token'),\n          },\n          signal: signal,\n        }\n      );\n      const data = await response.json();\n      console.log('response:', response);\n      console.log(data);\n\n      // Combine the items from albums, playlists, and artists\n      const combinedData = [\n        ...(data.albums?.items || []),\n        ...(data.playlists?.items || []),\n        ...(data.artists?.items || []),\n      ];\n\n      setSearchResults(combinedData);\n      console.log(combinedData);\n      // Saves the search results to local storage for later use\n      if (combinedData.length) {\n        localStorage.setItem('lastSearch', JSON.stringify(combinedData));\n      }\n    } catch (error) {\n      setErrors({\n        message: error.response?.data || 'An error occurred in fetching',\n      });\n      setShowAlert(true);\n    }\n\n    // Cleanup - in case of early unmounting\n    return () => {\n      controller.abort();\n    };\n  };\n\n  const updateSpotifyPlayerUri = (uri) => {\n    setSpotifyPlayerUri(uri);\n  };\n\n  return (\n    <>\n      {currentUser?.profile_id && <Profile userId={currentUser?.profile_id} />}\n      <Container className={styles.Container}>\n        <SearchBar onSearch={handleSearch} />\n        {showAlert && errors?.message && (\n          <Alert\n            variant='warning'\n            onClose={() => setShowAlert(false)}\n            dismissible\n          >\n            {errors.message}\n          </Alert>\n        )}\n        <Container>\n          <Row>\n            {searchResults?.length ? (\n              searchResults?.map((result) => (\n                <Col\n                  className={styles.PaddingReset}\n                  key={result.id}\n                  xs={4}\n                  md={3}\n                >\n                  <Button\n                    variant='link'\n                    onClick={() => updateSpotifyPlayerUri(result.uri)}\n                    className={styles.PaddingReset}\n                  >\n                    <Playlist\n                      image={result.images[0]?.url}\n                      title={result.name}\n                    />\n                  </Button>\n                  <Row>\n                    <Col className={styles.MarginBottom}>\n                      <p className={styles.Margin}>{result.name}</p>\n                      <AddPlaylistButton playlistData={result} />\n                    </Col>\n                  </Row>\n                </Col>\n              ))\n            ) : (\n              <p>No search stored results...</p>\n            )}\n          </Row>\n        </Container>\n      </Container>\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleAuthentication}\n        title={'You will be redirected to Spotify'}\n        body='Please authenticate this app with your Spotify account to take full advantage of its features. Once you are authenticated, you will be redirected back to the app. Thank you!'\n      />\n    </>\n  );\n};\n\nexport default SpotifySearchPage;\n","// SOURCE: https://developer.spotify.com/documentation/embeds/tutorials/using-the-iframe-api\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\n\nfunction SpotifyPlayer() {\n  const playerRef = useRef();\n  const spotifyPlayerUri = useSpotifyPlayerUri();\n  const [embedController, setEmbedController] = useState(null);\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://open.spotify.com/embed/iframe-api/v1';\n    script.async = true;\n    document.body.appendChild(script);\n\n    window.onSpotifyIframeApiReady = (IFrameAPI) => {\n      const options = {\n        width: '100%',\n        height: '352px', // 352px is the minimum height before the player resizes to a smaller size\n        uri: spotifyPlayerUri,\n      };\n\n      const callback = (EmbedController) => {\n        setEmbedController(EmbedController);\n      };\n\n      IFrameAPI.createController(playerRef.current, options, callback);\n    };\n  }, [spotifyPlayerUri]);\n\n  useEffect(() => {\n    if (embedController) {\n      embedController.loadUri(spotifyPlayerUri);\n    }\n  }, [spotifyPlayerUri, embedController]);\n\n  return <div ref={playerRef}></div>;\n}\n\nexport default SpotifyPlayer;\n","import React, { useEffect, useState } from 'react';\nimport styles from '../styles/AccordionWindow.module.css';\nimport { Accordion, Card, Button } from 'react-bootstrap';\nimport SpotifyPlayer from '../spotify/SpotifyPlayer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { useSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\n\nfunction AccordionWindow() {\n  const spotifyPlayerUri = useSpotifyPlayerUri();\n  const [activeKey, setActiveKey] = useState('');\n  const [showPlayer, setShowPlayer] = useState(false);\n\n  useEffect(() => {\n    if (spotifyPlayerUri) {\n      setActiveKey('0');\n      setShowPlayer(true);\n    }\n  }, [spotifyPlayerUri]);\n\n  const handleToggle = () => {\n    if (activeKey === '0') {\n      setActiveKey('');\n    } else {\n      setActiveKey('0');\n    }\n  };\n\n  return (\n    <Accordion\n      activeKey={activeKey}\n      onSelect={handleToggle}\n      className={`${styles.AccordionPosition} ${\n        showPlayer ? '' : styles.Hidden\n      }`}\n    >\n      <Card className={styles.Card}>\n        <Card.Header className={styles.Header}>\n          <Accordion.Toggle\n            as={Button}\n            variant='link'\n            eventKey='0'\n            className={styles.PaddingReset}\n          >\n            <FontAwesomeIcon icon={activeKey ? faCaretDown : faCaretUp} />\n          </Accordion.Toggle>\n        </Card.Header>\n        <Accordion.Collapse eventKey='0'>\n          <Card.Body className={styles.PaddingReset}>\n            <SpotifyPlayer />\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  );\n}\n\nexport default AccordionWindow;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport { useRedirect } from '../hooks/useRedirect';\n\nimport axios from 'axios';\nimport { axiosReq } from '../api/axiosDefaults';\nimport { fetchMoreData } from '../utils/dataUtils';\n\nimport Playlist from '../components/Playlist';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nimport styles from '../styles/PlaylistsPage.module.css';\nimport appStyles from '../App.module.css';\nimport loadingStyles from '../styles/LoadingSpinner.module.css';\nimport SearchBar from '../components/SearchBar';\n\nconst PlaylistsPage = ({ filter = '', profileView = false, pageName = '' }) => {\n  const [playlists, setPlaylists] = useState([]);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const history = useHistory();\n\n  useRedirect();\n\n  useEffect(() => {\n    // Sends a CancelToken with the request\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    console.log('PlaylistsPage rendered');\n\n    const fetchPlaylists = async () => {\n      try {\n        const { data } = await axiosReq.get(`playlists/?${filter}`, {\n          cancelToken: source.token,\n        });\n        setPlaylists(data);\n        console.log('playlist data: ', data);\n        setHasLoaded(true);\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          console.log('Request canceled', err.message);\n        } else if (err.response?.status === 404) {\n          history.push('/404-error-page');\n        } else {\n          console.log(err);\n        }\n      }\n    };\n\n    setHasLoaded(false);\n    fetchPlaylists();\n\n    // Cleanup\n    return () => {\n      source.cancel('Request canceled');\n    };\n  }, [filter, history]);\n\n  const displayWhyNoPlaylistsMessage = () => {\n    switch (pageName) {\n      case 'All Playlists':\n        return <p>No playlists found!</p>;\n      case 'Followed Users':\n        return <p>You aren't following any users yet...</p>;\n      case 'Your Rated Playlists':\n        return <p>You haven't rated any playlists yet...</p>;\n      default:\n        return <p>No playlists found!</p>;\n    }\n  };\n\n  return hasLoaded ? (\n    <Container\n      className={profileView ? styles.ProfileContainer : styles.Container}\n    >\n      {/* No SearchBar in pages with Profile.js component */}\n      {!profileView ? (\n        <>\n          <Row className={styles.HighlightedContainer}>\n            <Col>\n              <h2>{pageName}</h2>\n            </Col>\n          </Row>\n          <SearchBar liveSearch />\n        </>\n      ) : null}\n\n      {playlists.results.length ? (\n        <Container>\n          <InfiniteScroll\n            dataLength={playlists.results.length}\n            loader={<LoadingSpinner />}\n            hasMore={!!playlists.next}\n            next={() => fetchMoreData(playlists, setPlaylists)}\n            className={styles.InfiniteScroll}\n          >\n            <Row>\n              {playlists.results.map((playlist) => (\n                <Col\n                  className={appStyles.PaddingReset}\n                  key={playlist.id}\n                  xs={4}\n                  md={3}\n                >\n                  <Button\n                    variant='link'\n                    onClick={() => history.push(`/playlist/${playlist.id}`)}\n                    className={styles.Button}\n                  >\n                    <Playlist image={playlist.image} title={playlist.title} />\n                  </Button>\n                </Col>\n              ))}\n            </Row>\n          </InfiniteScroll>\n        </Container>\n      ) : (\n        displayWhyNoPlaylistsMessage()\n      )}\n    </Container>\n  ) : (\n    <LoadingSpinner className={loadingStyles.Centered} />\n  );\n};\n\nexport default PlaylistsPage;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { useRedirect } from '../hooks/useRedirect';\n\nimport PlaylistsPage from './PlaylistsPage';\nimport Profile from '../components/Profile';\n\nconst ProfilePage = () => {\n  const { userId } = useParams();\n  useRedirect();\n  return (\n    <>\n      <Profile userId={userId} />\n      <PlaylistsPage filter={`owner__profile=${userId}`} profileView />\n    </>\n  );\n};\n\nexport default ProfilePage;\n","import React, { useEffect, useState } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { Rating, StickerStar } from '@smastrom/react-rating';\nimport { axiosReq, axiosRes } from '../api/axiosDefaults';\nimport {\n  calculateAverageRatingPUT,\n  calculateAverageRatingPOST,\n} from '../utils/dataUtils';\n\nconst StarRating = ({ playlist, setPlaylist }) => {\n  const [rating, setRating] = useState(0);\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  useEffect(() => {\n    const fetchRatingData = async () => {\n      if (playlist.rating_id) {\n        try {\n          const { data } = await axiosRes.get(`ratings/${playlist.rating_id}`);\n          setRating(data.score);\n        } catch (err) {\n          setErrors({\n            message: 'Error fetching rating data',\n          });\n        }\n        setShowAlert(true);\n      }\n    };\n    fetchRatingData();\n  }, [playlist]);\n\n  const handleChange = async (selectedValue) => {\n    // Clear any previous errors\n    setErrors({});\n\n    // If the user clicks the same rating, do nothing\n    // Clicking the same rating defaults selectedValue = 0\n    if (selectedValue === 0) {\n      return;\n    }\n\n    if (playlist.rating_id) {\n      try {\n        await axiosReq.put(`ratings/${playlist.rating_id}`, {\n          score: selectedValue,\n        });\n\n        setRating(selectedValue);\n        setPlaylist((prevState) => ({\n          ...prevState,\n          average_rating: calculateAverageRatingPUT(\n            prevState,\n            rating,\n            selectedValue\n          ),\n          // If the user is the owner of the playlist, update owner_rating state\n          ...(playlist.is_owner ? { owner_rating: selectedValue } : {}),\n        }));\n      } catch (err) {\n        setErrors({\n          message: 'Error updating rating, please try again.',\n        });\n        setShowAlert(true);\n      }\n    } else {\n      try {\n        const { data } = await axiosReq.post('ratings/', {\n          playlist: playlist.id,\n          score: selectedValue,\n        });\n\n        setRating(selectedValue);\n        setPlaylist((prevState) => ({\n          ...prevState,\n          rating_id: data.id,\n          ratings_count: prevState.ratings_count + 1,\n          average_rating: calculateAverageRatingPOST(prevState, selectedValue),\n          // If the user is the owner of the playlist, update owner_rating state\n          ...(playlist.is_owner ? { owner_rating: selectedValue } : {}),\n        }));\n      } catch (err) {\n        setErrors({\n          message: 'Error adding rating, please try again.',\n        });\n        setShowAlert(true);\n      }\n    }\n  };\n\n  const myStyles = {\n    itemShapes: StickerStar,\n    activeFillColor: '#df604e',\n    inactiveFillColor: '#df5f4e6e',\n  };\n\n  return (\n    <>\n      <p style={{ marginBottom: '0' }}>\n        <em>Your rating:</em>\n      </p>\n      <Rating\n        value={rating}\n        onChange={handleChange}\n        style={{ maxWidth: 250, margin: 'auto' }}\n        itemStyles={myStyles}\n        items={5}\n      />\n\n      {showAlert && errors?.message && (\n        <Alert\n          variant='warning'\n          onClose={() => setShowAlert(false)}\n          dismissible\n        >\n          {errors.message}\n        </Alert>\n      )}\n\n      {rating ? (\n        <p style={{ fontSize: '0.9rem' }}>\n          <em>(Click to edit your rating)</em>\n        </p>\n      ) : (\n        <p style={{ fontSize: '0.9rem' }}>\n          <em>(Click to add your rating)</em>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default StarRating;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Alert,\n  Button,\n  Col,\n  Container,\n  OverlayTrigger,\n  Row,\n  Tooltip,\n} from 'react-bootstrap';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { useRedirect } from '../hooks/useRedirect';\n\nimport { axiosReq } from '../api/axiosDefaults';\nimport { useSetSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\n\nimport Playlist from '../components/Playlist';\nimport Profile from '../components/Profile';\nimport { Rating, StickerStar } from '@smastrom/react-rating';\nimport StarRating from '../components/StarRating';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpotify } from '@fortawesome/free-brands-svg-icons';\n\nimport styles from '../styles/PlaylistDetail.module.css';\nimport btnStyles from '../styles/Button.module.css';\nimport loadingStyles from '../styles/LoadingSpinner.module.css';\n\nconst PlaylistDetail = () => {\n  const { id } = useParams();\n  const [playlist, setPlaylist] = useState([]);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const setSpotifyPlayerUri = useSetSpotifyPlayerUri();\n  const history = useHistory();\n\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  useRedirect();\n\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      try {\n        const { data: playlist } = await axiosReq.get(`playlists/${id}`);\n\n        setPlaylist(playlist);\n        setHasLoaded(true);\n      } catch (err) {\n        if (err.response?.status === 404) {\n          history.push('/404-error-page');\n        } else {\n          setErrors({\n            message: 'Error fetching playlist data, please refresh the page',\n          });\n          setShowAlert(true);\n        }\n      }\n    };\n\n    setHasLoaded(false);\n    fetchPlaylist();\n  }, [id, history]);\n\n  const redirectToEdit = () => {\n    history.push(`/playlist/${id}/edit`);\n  };\n\n  const updateSpotifyPlayerUri = (uri) => {\n    setSpotifyPlayerUri(uri);\n  };\n\n  // Custom styles for the <Rating /> component\n  const averageRatingStyles = {\n    itemShapes: StickerStar,\n    activeFillColor: '#df604e',\n    inactiveFillColor: '#df5f4e6e',\n  };\n  const ownerRatingStyles = {\n    itemShapes: StickerStar,\n    itemStrokeWidth: 2,\n    activeFillColor: '#d14e3d',\n    activeStrokeColor: '#5a5550',\n    inactiveFillColor: '#df5f4e2a',\n    inactiveStrokeColor: '#5a5550',\n  };\n\n  const displayOwnerAndRating = (\n    <Row>\n      {/* Empty - to help with alignment */}\n      <Col xs={6}></Col>\n\n      {/* Owners name and own rating */}\n      <Col xs={6} style={{ textAlign: 'center' }}>\n        <p style={{ marginBottom: '0' }}>-{playlist.owner}</p>\n        <Rating\n          readOnly={true}\n          value={playlist.owner_rating}\n          style={{ minWidth: 75, maxWidth: 100, margin: 'auto' }}\n          itemStyles={ownerRatingStyles}\n        />\n      </Col>\n    </Row>\n  );\n\n  const displayJustOwner = (\n    <Row>\n      {/* Empty - to help with alignment */}\n      <Col xs={6}></Col>\n\n      {/* Owners name and own rating */}\n      <Col xs={6} style={{ textAlign: 'center' }}>\n        <p style={{ marginBottom: '0' }}>-{playlist.owner}</p>\n      </Col>\n    </Row>\n  );\n\n  return hasLoaded ? (\n    <>\n      <Profile userId={playlist.owner_id} />\n      <Container className={styles.Container}>\n        <Row>\n          <Col>\n            <h2>{playlist.title}</h2>\n          </Col>\n        </Row>\n        <Row className={styles.RowPadding}>\n          {/* Average rating information */}\n          <Col xs={6}>\n            <em>Average Rating: {playlist.average_rating || 0}</em>\n            <Rating\n              readOnly={true}\n              value={playlist.average_rating || 0}\n              style={{ maxWidth: 180, margin: 'auto' }}\n              itemStyles={averageRatingStyles}\n            />\n            <em>Rated: {playlist.ratings_count} time(s)</em>\n          </Col>\n\n          {/* Play button */}\n          <Col xs={6}>\n            <p style={{ marginBottom: '0' }}>click here..</p>\n            <OverlayTrigger\n              placement='bottom'\n              overlay={<Tooltip id='back-tooltip'>Play</Tooltip>}\n            >\n              <Button\n                variant='link'\n                onClick={() => updateSpotifyPlayerUri(playlist.iframe_uri)}\n              >\n                <FontAwesomeIcon\n                  icon={faSpotify}\n                  style={{ color: '#1db954' }}\n                  size='2xl'\n                />\n              </Button>\n            </OverlayTrigger>\n            <p style={{ marginBottom: '0' }}>..have a listen!</p>\n          </Col>\n        </Row>\n\n        {/* Playlist's image and description */}\n        <Row className={styles.HighlightedContainer}>\n          <Col xs={4}>\n            <Button\n              variant='link'\n              onClick={() => history.push(`/profile/${playlist.owner_id}`)}\n              className={styles.Button}\n            >\n              <Playlist image={playlist.image} title={playlist.title} />\n            </Button>\n          </Col>\n          <Col xs={8}>\n            <Row>\n              <Col className={styles.ScreenSizeContidionalPadding}>\n                {playlist.description ? (\n                  <p className={styles.WordBreak}>\"{playlist.description}\"</p>\n                ) : (\n                  <p>\n                    <em>\n                      -{playlist.owner} hasn't said anything about this playlist\n                      yet-\n                    </em>\n                  </p>\n                )}\n              </Col>\n            </Row>\n\n            {/* Displays owners name and rating, if rating. If no rating, displays owners name, if description. Else, null */}\n            {playlist.owner_rating\n              ? displayOwnerAndRating\n              : !playlist.owner_rating &&\n                playlist.description &&\n                displayJustOwner}\n          </Col>\n        </Row>\n\n        {/* StarRating component - lets user/owner add/edit rating objects */}\n        <Row>\n          <Col>\n            <StarRating playlist={playlist} setPlaylist={setPlaylist} />\n          </Col>\n        </Row>\n        {/* Edit playlist for playlist owner */}\n        {playlist.is_owner && (\n          <>\n            <Row>\n              <Col>\n                <Button onClick={redirectToEdit} className={btnStyles.Button}>\n                  Edit Playlist\n                </Button>\n              </Col>\n            </Row>\n          </>\n        )}\n      </Container>\n\n      {showAlert && errors?.message && (\n        <Alert\n          variant='warning'\n          onClose={() => setShowAlert(false)}\n          dismissible\n        >\n          {errors.message}\n        </Alert>\n      )}\n    </>\n  ) : (\n    <LoadingSpinner className={loadingStyles.Centered} />\n  );\n};\n\nexport default PlaylistDetail;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { axiosReq } from '../api/axiosDefaults';\nimport { Container, Form, Row, Col, Button, Alert } from 'react-bootstrap';\nimport Profile from '../components/Profile';\nimport Playlist from '../components/Playlist';\nimport ModalWindow from '../components/ModalWindow';\nimport styles from '../styles/EditCreateForms.module.css';\nimport btnStyles from '../styles/Button.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashCan } from '@fortawesome/free-regular-svg-icons';\n\nfunction PlaylistEditForm() {\n  const [playlistData, setPlaylistData] = useState({\n    owner_id: '',\n    title: '',\n    description: '',\n    image: '',\n    spotify_id: '',\n    iframe_uri: '',\n    url: '',\n  });\n  const { owner_id, title, description, image, spotify_id, iframe_uri, url } =\n    playlistData;\n\n  const { id } = useParams();\n  const history = useHistory();\n  const [modalShow, setModalShow] = useState(false);\n\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`playlists/${id}`);\n        console.log(data);\n        const {\n          is_owner,\n          owner_id,\n          title,\n          description,\n          image,\n          spotify_id,\n          iframe_uri,\n          url,\n        } = data;\n\n        is_owner\n          ? setPlaylistData({\n              owner_id,\n              title,\n              description,\n              image,\n              spotify_id,\n              iframe_uri,\n              url,\n            })\n          : history.push(`/playlist/${id}`);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    handleMount();\n  }, [history, id]);\n\n  const handleChange = (e) => {\n    setPlaylistData({\n      ...playlistData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    formData.append('title', title);\n    formData.append('description', description);\n\n    // Currently non-editable fields; but payload requires them\n    formData.append('spotify_id', spotify_id);\n    formData.append('image', image);\n    formData.append('url', url);\n    formData.append('iframe_uri', iframe_uri);\n\n    try {\n      await axiosReq.put(`playlists/${id}`, formData);\n      history.push(`/playlist/${id}`);\n    } catch (err) {\n      console.log(err);\n      if (err.response?.status !== 401) {\n        setErrors(err.response?.data);\n      }\n    }\n  };\n\n  const handleDelete = async (event) => {\n    event.preventDefault();\n    try {\n      await axiosReq.delete(`playlists/${id}`);\n      setModalShow(false);\n      history.push(`/profile/${owner_id}`);\n    } catch (err) {\n      setErrors({\n        message:\n          err.response?.data || 'Something went wrong! Please try again.',\n      });\n      setShowAlert(true);\n    }\n  };\n\n  return (\n    <>\n      <Profile userId={owner_id} />\n      <Form onSubmit={handleSubmit}>\n        <Container className={styles.Container}>\n          <Row>\n            <Col>\n              <h4>Edit Playlist</h4>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group className={styles.FormGroup}>\n                <Form.Label>Title:</Form.Label>\n                <Form.Control\n                  type='text'\n                  name='title'\n                  value={title}\n                  onChange={handleChange}\n                  className={styles.FormControl}\n                />\n              </Form.Group>\n              {errors?.title?.map((message, idx) => (\n                <Alert variant='warning' key={idx}>\n                  {message}\n                </Alert>\n              ))}\n            </Col>\n          </Row>\n          <Row className={styles.Playlist}>\n            <Col>\n              <Playlist image={image} title={title} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group className={styles.FormGroup}>\n                <Form.Label>\n                  If you like, some details about this playlist:\n                </Form.Label>\n                <Form.Control\n                  as='textarea'\n                  rows={4}\n                  name='description'\n                  value={description}\n                  placeholder='How does this playlist make you feel? Where do you most enjoy listening to it?...'\n                  onChange={handleChange}\n                  className={styles.FormControl}\n                />\n              </Form.Group>\n              {errors?.description?.map((message, idx) => (\n                <Alert variant='warning' key={idx}>\n                  {message}\n                </Alert>\n              ))}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Button\n                className={`${btnStyles.TransparentButton} ${btnStyles.MarginLeftRight}`}\n                onClick={() => setModalShow(true)}\n              >\n                <FontAwesomeIcon icon={faTrashCan} size='xl' />\n              </Button>\n              <Button\n                type='button'\n                className={`${btnStyles.Button} ${btnStyles.MarginLeftRight}`}\n                onClick={() => history.push(`/playlist/${id}`)}\n              >\n                Cancel\n              </Button>\n              <Button\n                type='submit'\n                className={`${btnStyles.Button} ${btnStyles.MarginLeftRight}`}\n              >\n                Save\n              </Button>\n            </Col>\n          </Row>\n          {showAlert && errors?.message && (\n            <Alert\n              variant='warning'\n              onClose={() => setShowAlert(false)}\n              dismissible\n            >\n              {errors.message}\n            </Alert>\n          )}\n        </Container>\n      </Form>\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleDelete}\n        title={`Delete ${title}?`}\n        body=\"Are you sure you want to delete this playlist? There's no going back.\"\n      />\n    </>\n  );\n}\n\nexport default PlaylistEditForm;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { axiosReq } from '../api/axiosDefaults';\nimport { Container, Form, Row, Col, Button, Alert } from 'react-bootstrap';\nimport styles from '../styles/EditCreateForms.module.css';\nimport btnStyles from '../styles/Button.module.css';\nimport Profile from '../components/Profile';\n\nfunction ProfileEditForm() {\n  const { userId } = useParams();\n  const history = useHistory();\n  const profileImageInput = useRef(null);\n  const backgroundImageInput = useRef(null);\n\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`profiles/${userId}`);\n        const { is_owner } = data;\n\n        if (!is_owner) {\n          history.push(`/profile/${userId}`);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    handleMount();\n  }, [history, userId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    if (profileImageInput?.current?.files[0]) {\n      formData.append('image', profileImageInput.current.files[0]);\n    }\n    if (backgroundImageInput?.current?.files[0]) {\n      formData.append('background', backgroundImageInput.current.files[0]);\n    }\n\n    try {\n      await axiosReq.put(`profiles/${userId}`, formData);\n      history.push(`/profile/${userId}`);\n    } catch (err) {\n      console.log(err);\n      if (err.response?.status !== 401) {\n        setErrors(err.response?.data);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Profile userId={userId} />\n      <Form onSubmit={handleSubmit}>\n        <Container className={styles.Container}>\n          <Row className='justify-content-center'>\n            <Form.Group className={styles.FormGroup}>\n              <Col>\n                <Form.Label\n                  className={btnStyles.Button}\n                  htmlFor='profile-image-upload'\n                >\n                  Change profile image\n                </Form.Label>\n\n                <Form.File\n                  className={styles.TextAlignLast}\n                  id='profile-image-upload'\n                  accept='image/*'\n                  ref={profileImageInput}\n                />\n              </Col>\n            </Form.Group>\n          </Row>\n          {errors?.image?.map((message, idx) => (\n            <Alert variant='warning' key={idx}>\n              {message}\n            </Alert>\n          ))}\n          <br />\n          <Row className='justify-content-center'>\n            <Form.Group className={styles.FormGroup}>\n              <Col>\n                <Form.Label\n                  className={btnStyles.Button}\n                  htmlFor='background-image-upload'\n                >\n                  Change background image\n                </Form.Label>\n\n                <Form.File\n                  className={styles.TextAlignLast}\n                  id='background-image-upload'\n                  accept='image/*'\n                  ref={backgroundImageInput}\n                />\n              </Col>\n            </Form.Group>\n          </Row>\n          {errors?.background?.map((message, idx) => (\n            <Alert variant='warning' key={idx}>\n              {message}\n            </Alert>\n          ))}\n          <Button type='submit' className={btnStyles.Button}>\n            Save\n          </Button>\n        </Container>\n      </Form>\n    </>\n  );\n}\n\nexport default ProfileEditForm;\n","export default __webpack_public_path__ + \"static/media/waveform.329b796b.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFaceDizzy } from '@fortawesome/free-regular-svg-icons';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport waveform from '../assets/waveform.png';\n\nconst PageNotFound404 = () => {\n  return (\n    <Container style={{ padding: '150px 0', overflow: 'hidden' }}>\n      <Row>\n        <Col>\n          <h1>\n            4<FontAwesomeIcon icon={faFaceDizzy} />4\n          </h1>\n          <h4>Page not found</h4>\n          <img src={waveform} alt='Sound waveform' style={{ width: '100%' }} />\n          <p>\n            Oops... The link you clicked may be broken or the page may have been\n            removed. Click to go back to the <Link to='/'>homepage</Link>.\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PageNotFound404;\n","import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport styles from '../styles/Homepage.module.css';\nimport { useRedirect } from '../hooks/useRedirect';\n\nconst Homepage = () => {\n  useRedirect();\n  return (\n    <Container className={styles.Container}>\n      <Row>\n        <Col xs={7}></Col>\n        <Col xs={5} className={styles.TitleContainer}>\n          <h1 className={styles.Title}>We Rate Music</h1>\n          <hr className={styles.Line} />\n          <hr className={styles.SecondLine} />\n          <Row>\n            <Col className={styles.IntroContainer}>\n              <p>\n                Welcome to We Rate Music! The place to rate and review your\n                favorite music.\n              </p>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default Homepage;\n","import React, { useRef, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport { useRedirect } from '../hooks/useRedirect';\nimport { axiosReq } from '../api/axiosDefaults';\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap';\nimport styles from '../styles/EditCreateForms.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\nfunction FeedbackCreateForm() {\n  useRedirect();\n\n  const [feedbackData, setfeedbackData] = useState({\n    title: '',\n    feedback: '',\n    image: '',\n  });\n  const { title, feedback } = feedbackData;\n  const imageFile = useRef();\n\n  const history = useHistory();\n  const [errors, setErrors] = useState({});\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('feedback', feedback);\n    if (imageFile?.current?.files[0]) {\n      formData.append('image', imageFile?.current?.files[0]);\n    }\n    try {\n      await axiosReq.post('feedback/', formData);\n      setShowSuccess(true);\n      setTimeout(() => {\n        console.log('feedback submitted');\n        history.push('/');\n      }, 4000);\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n  const handleChange = (event) => {\n    setfeedbackData({\n      ...feedbackData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const warmWelcome = (\n    <>\n      <Row className='pt-3'>\n        <Col>\n          <h1 className={styles.Title}>Welcome,</h1>\n          <h3>and thank you for taking your time!</h3>\n        </Col>\n      </Row>\n      <Row className={styles.HighlightedContainer}>\n        <Col>\n          <p>\n            This is your chance to help us improve the app. A direct channel to\n            the developers. Please be sensible and respectful. We appreciate\n            your feedback and will consider all of your suggestions and\n            implement them if possible.\n          </p>\n        </Col>\n      </Row>\n    </>\n  );\n\n  const textFields = (\n    <>\n      <Form.Group>\n        <Form.Label>Title:</Form.Label>\n        <Form.Control\n          type='text'\n          value={title}\n          onChange={handleChange}\n          name='title'\n          placeholder='Please add a title'\n          className={styles.FormControl}\n        />\n      </Form.Group>\n      {errors?.title?.map((message, idx) => (\n        <Alert variant='warning' key={idx}>\n          {message}\n        </Alert>\n      ))}\n      <Form.Group>\n        <Form.Label>Your feedback:</Form.Label>\n        <Form.Control\n          as='textarea'\n          rows={6}\n          value={feedback}\n          onChange={handleChange}\n          name='feedback'\n          placeholder='Please add your feedback here (positive feedback is always welcome!)...'\n          className={styles.FormControl}\n        />\n      </Form.Group>\n      {errors?.feedback?.map((message, idx) => (\n        <Alert variant='warning' key={idx}>\n          {message}\n        </Alert>\n      ))}\n    </>\n  );\n\n  return (\n    <Container className={styles.OverflowHidden}>\n      <Container>{warmWelcome}</Container>\n      <Form\n        onSubmit={handleSubmit}\n        style={{ 'margin-bottom': '76px', 'padding-bottom': '10px' }}\n      >\n        <Row>\n          <Col>\n            <Container>{textFields}</Container>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Container>\n              <Form.Group>\n                <Form.Label htmlFor='image-upload'>\n                  Upload an image (optional):\n                </Form.Label>\n                <Form.File\n                  className={styles.TextAlignLast}\n                  id='image-upload'\n                  ref={imageFile}\n                  accept='image/*'\n                  onChange={(e) => {\n                    if (e.target.files.length) {\n                      setfeedbackData({\n                        ...feedbackData,\n                        image: URL.createObjectURL(e.target.files[0]),\n                      });\n                    }\n                  }}\n                />\n                {errors?.image?.map((message, idx) => (\n                  <Alert variant='warning' key={idx}>\n                    {message}\n                  </Alert>\n                ))}\n              </Form.Group>\n            </Container>\n          </Col>\n        </Row>\n        <Button className={btnStyles.Button} onClick={() => history.goBack()}>\n          Cancel\n        </Button>\n        <Button className={btnStyles.Button} type='submit'>\n          Submit\n        </Button>\n        {showSuccess && (\n          <Container className='pt-3'>\n            <Alert\n              variant='success'\n              onClose={() => setShowSuccess(false)}\n              dismissible\n            >\n              Feedback submitted, Thank you! You will be directed back to your\n              profile shortly.\n            </Alert>\n          </Container>\n        )}\n      </Form>\n    </Container>\n  );\n}\n\nexport default FeedbackCreateForm;\n","import styles from './App.module.css';\nimport NavBar from './components/NavBar';\nimport { Route, Switch } from 'react-router-dom';\nimport './api/axiosDefaults';\nimport SignUpForm from './pages/auth/SignUpForm';\nimport SignInForm from './pages/auth/SignInForm';\nimport SpotifySearchPage from './spotify/SpotifySearchPage';\nimport { useCurrentUser } from './contexts/CurrentUserContext';\nimport AccordionWindow from './components/AccordionWindow';\nimport ProfilePage from './pages/ProfilePage';\nimport PlaylistsPage from './pages/PlaylistsPage';\nimport PlaylistDetail from './pages/PlaylistDetail';\nimport PlaylistEditForm from './forms/PlaylistEditForm';\nimport ProfileEditForm from './forms/ProfileEditForm';\nimport '@smastrom/react-rating/style.css';\nimport PageNotFound404 from './pages/PageNotFound404';\nimport Homepage from './pages/Homepage';\nimport FeedbackCreateForm from './forms/FeedbackCreateForm';\n\nfunction App() {\n  const currentUser = useCurrentUser();\n  const profile_id = currentUser?.profile_id || '';\n\n  return (\n    <div className={styles.App}>\n      <NavBar />\n      <AccordionWindow />\n      <Switch>\n        <Route exact path='/' render={() => <Homepage />} />\n        <Route exact path='/signin' render={() => <SignInForm />} />\n        <Route exact path='/signup' render={() => <SignUpForm />} />\n        <Route exact path='/profile/:userId' render={() => <ProfilePage />} />\n        <Route\n          exact\n          path='/profile/:userId/edit'\n          render={() => <ProfileEditForm />}\n        />\n        <Route\n          exact\n          path='/rated-playlists'\n          render={() => (\n            <PlaylistsPage\n              pageName='All Playlists You Have Rated'\n              filter={`ratings__owner__profile=${profile_id}`}\n            />\n          )}\n        />\n        <Route exact path='/playlist/:id' render={() => <PlaylistDetail />} />\n        <Route\n          exact\n          path='/playlist/:id/edit'\n          render={() => <PlaylistEditForm />}\n        />\n        <Route\n          exact\n          path='/feed'\n          render={() => (\n            <PlaylistsPage\n              pageName='Playlists of Followed Users'\n              filter={`owner__followed_by__owner__profile=${profile_id}`}\n            />\n          )}\n        />\n        <Route\n          exact\n          path='/spotify-search'\n          render={() => <SpotifySearchPage />}\n        />\n        <Route\n          exact\n          path='/global'\n          render={() => <PlaylistsPage pageName='All Playlists' />}\n        />\n        <Route\n          exact\n          path='/feedback/create'\n          render={() => <FeedbackCreateForm />}\n        />\n        <Route render={() => <PageNotFound404 />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { CurrentUserProvider } from './contexts/CurrentUserContext';\nimport { SpotifyPlayerUriProvider } from './contexts/SpotifyPlayerUriContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CurrentUserProvider>\n      <SpotifyPlayerUriProvider>\n        <Router>\n          <App />\n        </Router>\n      </SpotifyPlayerUriProvider>\n    </CurrentUserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"EditCreateForms_Container__2DsIC\",\"OverflowHidden\":\"EditCreateForms_OverflowHidden__3fhes\",\"Playlist\":\"EditCreateForms_Playlist__1cGCN\",\"FormGroup\":\"EditCreateForms_FormGroup__1AQPR\",\"FormControl\":\"EditCreateForms_FormControl__U6OqG\",\"TextAlignLast\":\"EditCreateForms_TextAlignLast__3y1Ow\",\"HighlightedContainer\":\"EditCreateForms_HighlightedContainer__3q1wl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__1amC6\",\"Brand\":\"NavBar_Brand__iWmt7\",\"SignInOut\":\"NavBar_SignInOut__3hTFe\",\"MarginRight\":\"NavBar_MarginRight__1UDrv\",\"SignUpIn\":\"NavBar_SignUpIn__3Qj2P\",\"Active\":\"NavBar_Active__3PBZb\",\"ProfileActive\":\"NavBar_ProfileActive__2t0Zs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"SignInUpForm_Row__3PbVy\",\"Input\":\"SignInUpForm_Input__3xaLZ\",\"Header\":\"SignInUpForm_Header__3joQJ\",\"Link\":\"SignInUpForm_Link__1BeMm\",\"SignUpCol\":\"SignInUpForm_SignUpCol__28o4y\",\"SignInCol\":\"SignInUpForm_SignInCol__3ImPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Content\":\"App_Content__ZaMNr\",\"FillerImage\":\"App_FillerImage__2ob-g\",\"PaddingReset\":\"App_PaddingReset__2Yixf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Centered\":\"LoadingSpinner_Centered__2UoRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccordionPosition\":\"AccordionWindow_AccordionPosition__3Pg_2\",\"Header\":\"AccordionWindow_Header__3EVT_\",\"Card\":\"AccordionWindow_Card__RFCw5\",\"PaddingReset\":\"AccordionWindow_PaddingReset__RMqnf\",\"Hidden\":\"AccordionWindow_Hidden__ZcMNb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PlaylistDetail_Container__37TnQ\",\"HighlightedContainer\":\"PlaylistDetail_HighlightedContainer__1Lqrp\",\"RowPadding\":\"PlaylistDetail_RowPadding__2gbU9\",\"WordBreak\":\"PlaylistDetail_WordBreak__3E_Bg\",\"ScreenSizeContidionalPadding\":\"PlaylistDetail_ScreenSizeContidionalPadding__2iVym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Homepage_Container__sxUK-\",\"TitleContainer\":\"Homepage_TitleContainer__rTDdU\",\"Title\":\"Homepage_Title__jDukA\",\"IntroContainer\":\"Homepage_IntroContainer__1pqil\",\"Line\":\"Homepage_Line__3qZsO\",\"SecondLine\":\"Homepage_SecondLine__2Ymv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropdownMenu\":\"SearchBar_DropdownMenu__2J2wk\",\"DropdownItem\":\"SearchBar_DropdownItem__3uVVu\",\"InfiniteScroll\":\"SearchBar_InfiniteScroll__1tS1z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SpotifySearchPage_Container__31uhH\",\"PaddingReset\":\"SpotifySearchPage_PaddingReset__2gaVg\",\"Margin\":\"SpotifySearchPage_Margin__sjI4C\",\"MarginBottom\":\"SpotifySearchPage_MarginBottom__1JwwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PlaylistsPage_Container__KgRlF\",\"ProfileContainer\":\"PlaylistsPage_ProfileContainer__1ky5y\",\"HighlightedContainer\":\"PlaylistsPage_HighlightedContainer__3oKHx\",\"Button\":\"PlaylistsPage_Button__2jYpK\",\"InfiniteScroll\":\"PlaylistsPage_InfiniteScroll__1cMqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"ModalWindow_Header__hiHjJ\",\"Body\":\"ModalWindow_Body__13Mmm\",\"Color\":\"ModalWindow_Color__9jnUe\",\"Footer\":\"ModalWindow_Footer__3oRO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__27i9m\",\"PaddingReset\":\"Button_PaddingReset__3EaQQ\",\"MarginLeftRight\":\"Button_MarginLeftRight__1wbIa\",\"TransparentButton\":\"Button_TransparentButton__9gW-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Avatar_Avatar__196lW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FontAwesomeIcon\":\"SignOutButton_FontAwesomeIcon__WBpEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"Playlist_Image__2QZQC\"};"],"sourceRoot":""}