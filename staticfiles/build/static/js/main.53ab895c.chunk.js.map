{"version":3,"sources":["api/axiosDefaults.js","utils/dataUtils.js","contexts/CurrentUserContext.js","components/Avatar.js","components/NavBar.js","hooks/useRedirect.js","pages/auth/SignUpForm.js","pages/auth/SignInForm.js","utils/spotifyAuthUtils.js","spotify/useSpotifyAuth.js","contexts/SpotifyPlayerUriContext.js","components/LoadingSpinner.js","components/ModalWindow.js","components/SignOutButton.js","components/Profile.js","components/SearchBar.js","components/Playlist.js","spotify/AddPlaylistButton.js","spotify/SpotifySearchPage.js","spotify/SpotifyPlayer.js","components/AccordionWindow.js","pages/PlaylistsPage.js","pages/ProfilePage.js","components/StarRating.js","pages/PlaylistDetail.js","forms/PlaylistEditForm.js","forms/ProfileEditForm.js","assets/waveform.png","pages/PageNotFound404.js","pages/Homepage.js","forms/FeedbackCreateForm.js","App.js","reportWebVitals.js","index.js","styles/Profile.module.css","styles/EditCreateForms.module.css","styles/NavBar.module.css","styles/SignInUpForm.module.css","App.module.css","styles/LoadingSpinner.module.css","styles/AccordionWindow.module.css","styles/PlaylistDetail.module.css","styles/Homepage.module.css","styles/SearchBar.module.css","styles/SpotifySearchPage.module.css","styles/PlaylistsPage.module.css","styles/ModalWindow.module.css","styles/Button.module.css","styles/Avatar.module.css","styles/SignOutButton.module.css","styles/Playlist.module.css"],"names":["axios","defaults","baseURL","headers","post","withCredentials","axiosReq","create","axiosRes","fetchMoreData","async","resource","setResource","data","get","next","prevResource","results","reduce","acc","curr","some","accResult","id","err","console","log","removeTokenTimestamp","localStorage","removeItem","calculateAverageRatingPUT","prevState","rating","selectedValue","average_rating","ratings_count","calculateAverageRatingPOST","CurrentUserContext","createContext","SetCurrentUserContext","useCurrentUser","useContext","useSetCurrentUser","CurrentUserProvider","_ref","children","currentUser","setCurrentUser","useState","history","useHistory","useEffect","source","CancelToken","cancelToken","token","isCancel","message","handleMount","useMemo","interceptors","request","use","getItem","prevCurrentUser","push","config","Promise","reject","response","_err$response","status","_jsx","Provider","value","Avatar","src","height","className","styles","width","alt","concat","username","NavBar","loggedOutIcons","_jsxs","_Fragment","OverlayTrigger","placement","overlay","Tooltip","Navbar","Brand","href","Nav","SignInOut","NavLink","SignUpIn","activeClassName","Active","to","FontAwesomeIcon","MarginRight","icon","faRightToBracket","size","faUserPlus","loggedInIcons","faGlobe","faPeopleGroup","ProfileActive","profile_id","profile_image","faStar","faSpotify","style","color","navBarPosition","expand","fixed","Container","useRedirect","userAuthStatus","authPages","includes","location","pathname","homepage","pk","SignUpForm","_errors$username","_errors$password","_errors$password2","_errors$non_field_err","signUpData","setSignUpData","password1","password2","errors","setErrors","handleChange","event","target","name","Row","Col","appStyles","Content","Header","Form","onSubmit","preventDefault","Group","controlId","Label","Control","Input","type","placeholder","onChange","map","idx","Alert","variant","Button","btnStyles","non_field_errors","Link","SignInForm","signInData","setSignInData","password","user","refreshTokenTimestamp","jwtDecode","refresh_token","exp","setItem","setTokenTimestamp","clientId","codeVerifier","length","possible","crypto","getRandomValues","Uint8Array","x","generateRandomString","getCodeChallenge","hashed","TextEncoder","encode","plain","window","subtle","digest","sha256","input","btoa","String","fromCharCode","replace","redirectUri","useSpotifyAuth","code","URLSearchParams","search","payload","method","body","client_id","grant_type","redirect_uri","code_verifier","fetch","json","access_token","getToken","handleAuthentication","authUrl","URL","codeChallenge","params","response_type","scope","code_challenge_method","code_challenge","toString","spotifyAuthentication","SpotifyPlayerUriContext","SetSpotifyPlayerUriContext","useSpotifyPlayerUri","useSetSpotifyPlayerUri","SpotifyPlayerUriProvider","spotifyPlayerUri","setSpotifyPlayerUri","LoadingSpinner","faCompactDisc","spin","ModalWindow","props","Modal","centered","closeButton","Title","Color","title","Body","Footer","onClick","onHide","onConfirm","SignOutButton","modalShow","setModalShow","TransparentButton","faPowerOff","show","Profile","userId","profileData","setProfileData","hasLoaded","setHasLoaded","isFollowing","setIsFollowing","smallScreen","setSmallScreen","innerWidth","checkScreenSize","addEventListener","removeEventListener","following_id","fetchProfileData","followButton","followed","profile","followers_count","handleFollow","emptyStar","ProfileBottomRightIcon","unfollowButton","delete","handleUnfollow","editButton","faPen","feedbackButton","faCommentDots","ProfileTopRightIcon","smallScreenStatsContainer","StatsRow","StatsItem","playlists_count","following_count","largeScreenStatsContainer","md","ProfileContainer","backgroundImage","background","xs","faBackward","goBack","owner","is_owner","SmallText","AvatarStatsContainer","AlignItemsCenter","AvatarContainer","image","loadingStyles","Centered","SearchBar","onSearch","liveSearch","searchQuery","setSearchQuery","items","setItems","showDropdown","setShowDropdown","dropdownResults","DropdownMenu","InfiniteScroll","dataLength","loader","hasMore","DropdownItem","e","marginBottom","InputGroup","currentQuery","fetchItems","Append","faMagnifyingGlass","Playlist","Image","AddPlaylistButton","_playlist$images$2","playlistData","playlist","showAlert","setShowAlert","onClose","dismissible","_playlist$images$","spotify_id","images","url","external_urls","spotify","iframe_uri","uri","error","_error$response","SpotifySearchPage","searchResults","setSearchResults","lastSearch","JSON","parse","delay","setTimeout","clearTimeout","controller","AbortController","signal","_data$albums","_data$playlists","_data$artists","refreshTokenResponse","refreshToken","getRefreshToken","Authorization","combinedData","albums","playlists","artists","stringify","abort","result","_result$images$","PaddingReset","updateSpotifyPlayerUri","MarginBottom","Margin","SpotifyPlayer","playerRef","useRef","embedController","setEmbedController","script","document","createElement","appendChild","onSpotifyIframeApiReady","IFrameAPI","options","createController","current","EmbedController","loadUri","ref","AccordionWindow","activeKey","setActiveKey","showPlayer","setShowPlayer","Accordion","onSelect","handleToggle","AccordionPosition","Hidden","Card","Toggle","as","eventKey","faCaretDown","faCaretUp","Collapse","PlaylistsPage","filter","profileView","pageName","setPlaylists","fetchPlaylists","cancel","HighlightedContainer","displayWhyNoPlaylistsMessage","ProfilePage","useParams","StarRating","setPlaylist","setRating","rating_id","score","fetchRatingData","myStyles","itemShapes","StickerStar","activeFillColor","inactiveFillColor","Rating","put","owner_rating","maxWidth","margin","itemStyles","fontSize","PlaylistDetail","fetchPlaylist","averageRatingStyles","ownerRatingStyles","itemStrokeWidth","activeStrokeColor","inactiveStrokeColor","displayOwnerAndRating","textAlign","readOnly","minWidth","displayJustOwner","owner_id","RowPadding","ScreenSizeContidionalPadding","description","WordBreak","redirectToEdit","PlaylistEditForm","_errors$title","_errors$description","setPlaylistData","formData","FormData","append","_err$response2","FormGroup","FormControl","rows","MarginLeftRight","faTrashCan","_err$response3","ProfileEditForm","_errors$image","_errors$background","profileImageInput","backgroundImageInput","_profileImageInput$cu","_backgroundImageInput","files","htmlFor","File","TextAlignLast","accept","PageNotFound404","padding","faFaceDizzy","waveform","Homepage","TitleContainer","Line","SecondLine","IntroContainer","FeedbackCreateForm","_errors$feedback","feedbackData","setfeedbackData","feedback","imageFile","showSuccess","setShowSuccess","warmWelcome","textFields","OverflowHidden","_imageFile$current","_imageFile$current2","createObjectURL","App","Switch","Route","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","React","StrictMode","Router","getElementById","module","exports"],"mappings":"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","file":"static/js/main.53ab895c.chunk.js","sourcesContent":["// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport axios from 'axios';\n\naxios.defaults.baseURL = '/api';\naxios.defaults.headers.post['Content-Type'] = 'multipart/form-data';\naxios.defaults.withCredentials = true;\n\nexport const axiosReq = axios.create();\nexport const axiosRes = axios.create();","// CREDIT: Code taken from Code Institute's 'Moments' walkthrough project\nimport { axiosReq } from '../api/axiosDefaults';\nimport jwtDecode from 'jwt-decode';\n\n/**\n * Fetches more data from a paginated API and updates the state of the resource.\n *\n * @param {Object} resource - resource to be updated\n * @param {Function} setResource - function to update the resource\n */\nexport const fetchMoreData = async (resource, setResource) => {\n  try {\n    const { data } = await axiosReq.get(resource.next);\n    setResource((prevResource) => ({\n      ...prevResource,\n      next: data.next,\n      results: data.results.reduce((acc, curr) => {\n        return acc.some((accResult) => accResult.id === curr.id)\n          ? acc\n          : [...acc, curr];\n      }, prevResource.results),\n    }));\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const setTokenTimestamp = (data) => {\n  const refreshTokenTimestamp = jwtDecode(data?.refresh_token).exp;\n  localStorage.setItem('refreshTokenTimestamp', refreshTokenTimestamp);\n};\n\nexport const shouldRefreshToken = () => {\n  return !!localStorage.getItem('refreshTokenTimestamp');\n};\n\nexport const removeTokenTimestamp = () => {\n  localStorage.removeItem('refreshTokenTimestamp');\n};\n\n// Used in StarRating.js to calculate the average rating and update the state\n// Considers the fact that an existing rating is being updated\nexport function calculateAverageRatingPUT(prevState, rating, selectedValue) {\n  return (\n    (prevState.average_rating * prevState.ratings_count -\n      rating +\n      selectedValue) /\n    prevState.ratings_count\n  );\n}\n\n// Used in StarRating.js to calculate the average rating and update the state\n// Considers the fact that a new rating is being added\nexport function calculateAverageRatingPOST(prevState, selectedValue) {\n  return (\n    (prevState.average_rating * prevState.ratings_count + selectedValue) /\n    (prevState.ratings_count + 1)\n  );\n}\n","// CREDIT: Code taken from Code Institute's 'Moments' walkthrough project\nimport { createContext, useContext, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { axiosReq, axiosRes } from '../api/axiosDefaults';\nimport { useHistory } from 'react-router';\nimport { removeTokenTimestamp, shouldRefreshToken } from '../utils/dataUtils';\n\nexport const CurrentUserContext = createContext();\nexport const SetCurrentUserContext = createContext();\n\nexport const useCurrentUser = () => useContext(CurrentUserContext);\nexport const useSetCurrentUser = () => useContext(SetCurrentUserContext);\n\nexport const CurrentUserProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const history = useHistory();\n\n  const handleMount = async () => {\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    try {\n      const { data } = await axiosRes.get('dj-rest-auth/user/', {\n        cancelToken: source.token,\n      });\n      setCurrentUser(data);\n    } catch (err) {\n      if (axios.isCancel(err)) {\n        console.log('Request canceled', err.message);\n      } else {\n        console.log(err);\n      }\n    }\n\n    // Cleanup\n    return () => {\n      source.cancel('Request canceled');\n    };\n  };\n\n  useEffect(() => {\n    handleMount();\n  }, []);\n\n  useMemo(() => {\n    axiosReq.interceptors.request.use(\n      async (config) => {\n        if (shouldRefreshToken()) {\n          try {\n            await axios.post('/dj-rest-auth/token/refresh/');\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                history.push('/signin');\n              }\n              return null;\n            });\n            removeTokenTimestamp();\n            return config;\n          }\n        }\n        return config;\n      },\n      (err) => {\n        return Promise.reject(err);\n      }\n    );\n\n    axiosRes.interceptors.response.use(\n      (response) => response,\n      async (err) => {\n        if (err.response?.status === 401) {\n          try {\n            await axios.post('/dj-rest-auth/token/refresh/');\n          } catch (err) {\n            setCurrentUser((prevCurrentUser) => {\n              if (prevCurrentUser) {\n                history.push('/signin');\n              }\n              return null;\n            });\n            removeTokenTimestamp();\n          }\n          return axios(err.config);\n        }\n        return Promise.reject(err);\n      }\n    );\n  }, [history]);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <SetCurrentUserContext.Provider value={setCurrentUser}>\n        {children}\n      </SetCurrentUserContext.Provider>\n    </CurrentUserContext.Provider>\n  );\n};\n","import React from 'react';\nimport styles from '../styles/Avatar.module.css';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nconst Avatar = ({ src, height = 45 }) => {\n  const currentUser = useCurrentUser();\n  return (\n    <span>\n      <img\n        className={styles.Avatar}\n        src={src}\n        height={height}\n        width={height}\n        alt={`${currentUser?.username}' avatar`}\n      />\n    </span>\n  )\n}\n\nexport default Avatar","import styles from '../styles/NavBar.module.css';\nimport React from 'react';\nimport {\n  Navbar,\n  Container,\n  Nav,\n  OverlayTrigger,\n  Tooltip,\n} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpotify } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faStar,\n  faPeopleGroup,\n  faUserPlus,\n  faRightToBracket,\n  faGlobe,\n} from '@fortawesome/free-solid-svg-icons';\nimport { NavLink } from 'react-router-dom';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport Avatar from './Avatar';\n\nconst NavBar = () => {\n  const currentUser = useCurrentUser();\n\n  const loggedOutIcons = (\n    <>\n      {/* Brand logo */}\n      <OverlayTrigger\n        placement='bottom'\n        overlay={<Tooltip id='feedback-tooltip'>Home</Tooltip>}\n      >\n        <Navbar.Brand className={styles.Brand} href='/'>\n          We -R- Music\n        </Navbar.Brand>\n      </OverlayTrigger>\n\n      <Nav className={styles.SignInOut}>\n        {/* Login button */}\n        <OverlayTrigger\n          placement='bottom'\n          overlay={<Tooltip id='feedback-tooltip'>Click to Login</Tooltip>}\n        >\n          <NavLink\n            className={styles.SignUpIn}\n            activeClassName={styles.Active}\n            to='/signin'\n          >\n            <FontAwesomeIcon\n              className={styles.MarginRight}\n              icon={faRightToBracket}\n              size='2xl'\n            />\n            Login\n          </NavLink>\n        </OverlayTrigger>\n\n        {/* Signup button */}\n        <OverlayTrigger\n          placement='bottom'\n          overlay={<Tooltip id='feedback-tooltip'>Click to sign up!</Tooltip>}\n        >\n          <NavLink\n            className={styles.SignUpIn}\n            activeClassName={styles.Active}\n            to='/signup'\n          >\n            <FontAwesomeIcon\n              className={styles.MarginRight}\n              icon={faUserPlus}\n              size='2xl'\n            />\n            Sign Up!\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n    </>\n  );\n  const loggedInIcons = (\n    <>\n      {/* All playlists */}\n      <Nav className='mr-auto'>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='feedback-tooltip'>All playlists</Tooltip>}\n        >\n          <NavLink activeClassName={styles.Active} to='/global'>\n            <FontAwesomeIcon icon={faGlobe} size='2xl' />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n\n      {/* Followed user playlists */}\n      <Nav className='mr-auto'>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='feedback-tooltip'>Followed user feed</Tooltip>}\n        >\n          <NavLink activeClassName={styles.Active} to='/feed'>\n            <FontAwesomeIcon icon={faPeopleGroup} size='2xl' />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n\n      {/* User's profile */}\n      <Nav>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='feedback-tooltip'>Your profile</Tooltip>}\n        >\n          <NavLink\n            activeClassName={styles.ProfileActive}\n            to={`/profile/${currentUser?.profile_id}`}\n          >\n            <Avatar src={currentUser?.profile_image} height={40} />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n\n      {/* User's rated playlists */}\n      <Nav className='ml-auto'>\n        <OverlayTrigger\n          placement='top'\n          overlay={\n            <Tooltip id='feedback-tooltip'>Playlists you've rated</Tooltip>\n          }\n        >\n          <NavLink activeClassName={styles.Active} to='/rated-playlists'>\n            <FontAwesomeIcon icon={faStar} size='2xl' />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n\n      {/* Spotify search page */}\n      <Nav className='ml-auto'>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='feedback-tooltip'>Search Spotify</Tooltip>}\n        >\n          <NavLink to='/spotify-search'>\n            <FontAwesomeIcon\n              icon={faSpotify}\n              style={{ color: '#1db954' }}\n              size='2xl'\n            />\n          </NavLink>\n        </OverlayTrigger>\n      </Nav>\n    </>\n  );\n\n  const navBarPosition = currentUser ? 'bottom' : 'top';\n\n  return (\n    <Navbar className={styles.NavBar} expand='md' fixed={navBarPosition}>\n      <Container>{currentUser ? loggedInIcons : loggedOutIcons}</Container>\n    </Navbar>\n  );\n};\n\nexport default NavBar;\n","import axios from 'axios';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\n/**\n * useRedirect hook: redirects users based on their logged in status\n */\nexport const useRedirect = () => {\n  const history = useHistory();\n  const currentUser = useCurrentUser();\n  const userAuthStatus = currentUser ? 'loggedIn' : 'loggedOut';\n  const authPages = ['/signin', '/signup'].includes(history.location.pathname);\n  const homepage = ['/'].includes(history.location.pathname);\n\n  useEffect(() => {\n    const handleMount = async () => {\n      // if user is logged in and on signin/signup page, redirect to profile page\n      if (authPages || homepage) {\n        if (userAuthStatus === 'loggedIn') {\n          history.push(`/profile/${currentUser.pk}`);\n          return;\n        }\n        if (userAuthStatus === 'loggedOut') {\n          return;\n        }\n      }\n      try {\n        await axios.post('/dj-rest-auth/token/refresh/');\n        // if userAuthStatus is logged in, do nothing\n        if (userAuthStatus === 'loggedIn') {\n          return;\n        }\n      } catch (err) {\n        // if user is not logged in, redirect to home/welcome page\n        if (userAuthStatus === 'loggedOut') {\n          history.push('/');\n        }\n      }\n    };\n\n    handleMount();\n  }, [history, userAuthStatus, currentUser, authPages, homepage]);\n};\n","// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport React, { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useRedirect } from '../../hooks/useRedirect';\n\nimport { Form, Button, Col, Row, Container, Alert } from 'react-bootstrap';\n\nimport styles from '../../styles/SignInUpForm.module.css';\nimport btnStyles from '../../styles/Button.module.css';\nimport appStyles from '../../App.module.css';\n\nimport axios from 'axios';\n\nconst SignUpForm = () => {\n  useRedirect();\n  const [signUpData, setSignUpData] = useState({\n    username: '',\n    password1: '',\n    password2: '',\n  });\n  const { username, password1, password2 } = signUpData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n\n  const handleChange = (event) => {\n    setSignUpData({\n      ...signUpData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      await axios.post('/dj-rest-auth/registration/', signUpData);\n      history.push('/signin');\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n\n  return (\n    <Container>\n      <Row className={styles.Row}>\n        <Col className='my-auto py-2 p-md-2'>\n          <Container className={`${appStyles.Content} p-4 `}>\n            <h1 className={styles.Header}>sign up</h1>\n\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId='username'>\n                <Form.Label className='d-none'>username</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='text'\n                  placeholder='Username'\n                  name='username'\n                  value={username}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.username?.map((message, idx) => (\n                <Alert variant='warning' key={idx}>\n                  {message}\n                </Alert>\n              ))}\n\n              <Form.Group controlId='password1'>\n                <Form.Label className='d-none'>Password</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='password'\n                  placeholder='Password'\n                  name='password1'\n                  value={password1}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.password1?.map((message, idx) => (\n                <Alert key={idx} variant='warning'>\n                  {message}\n                </Alert>\n              ))}\n\n              <Form.Group controlId='password2'>\n                <Form.Label className='d-none'>Confirm password</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='password'\n                  placeholder='Confirm password'\n                  name='password2'\n                  value={password2}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.password2?.map((message, idx) => (\n                <Alert key={idx} variant='warning'>\n                  {message}\n                </Alert>\n              ))}\n\n              <Button className={btnStyles.Button} type='submit'>\n                Sign up\n              </Button>\n              {errors.non_field_errors?.map((message, idx) => (\n                <Alert key={idx} variant='warning' className='mt-3'>\n                  {message}\n                </Alert>\n              ))}\n            </Form>\n          </Container>\n\n          <Container className={`mt-3 ${appStyles.Content}`}>\n            <Link className={styles.Link} to='/signin'>\n              Already have an account? <span>Sign in</span>\n            </Link>\n          </Container>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default SignUpForm;\n","// CREDIT: Code taken from Code Institute's \"Moments\" walkthrough project\nimport React, { useState } from 'react';\nimport { Form, Alert, Button, Col, Row, Container } from 'react-bootstrap';\n\nimport axios from 'axios';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport styles from '../../styles/SignInUpForm.module.css';\nimport appStyles from '../../App.module.css';\nimport btnStyles from '../../styles/Button.module.css';\n\nimport { useSetCurrentUser } from '../../contexts/CurrentUserContext';\nimport { useRedirect } from '../../hooks/useRedirect';\nimport { setTokenTimestamp } from '../../utils/dataUtils';\n\nfunction SignInForm() {\n  const setCurrentUser = useSetCurrentUser();\n  useRedirect();\n\n  const [signInData, setSignInData] = useState({\n    username: '',\n    password: '',\n  });\n  const { username, password } = signInData;\n\n  const [errors, setErrors] = useState({});\n\n  const history = useHistory();\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await axios.post('/dj-rest-auth/login/', signInData);\n      setCurrentUser(data.user);\n      setTokenTimestamp(data);\n      history.push(`/profile/${data.user.pk}`);\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n\n  const handleChange = (event) => {\n    setSignInData({\n      ...signInData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  return (\n    <Container>\n      <Row className={styles.Row}>\n        <Col className='my-auto py-2 p-md-2'>\n          <Container className={`${appStyles.Content} p-4`}>\n            <h1 className={styles.Header}>sign in</h1>\n\n            <Form onSubmit={handleSubmit}>\n              <Form.Group controlId='username'>\n                <Form.Label className='d-none'>Username</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='text'\n                  placeholder='Username'\n                  name='username'\n                  value={username}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.username?.map((message, idx) => (\n                <Alert key={idx} variant='warning'>\n                  {message}\n                </Alert>\n              ))}\n\n              <Form.Group controlId='password'>\n                <Form.Label className='d-none'>Password</Form.Label>\n                <Form.Control\n                  className={styles.Input}\n                  type='password'\n                  placeholder='Password'\n                  name='password'\n                  value={password}\n                  onChange={handleChange}\n                />\n              </Form.Group>\n              {errors.password?.map((message, idx) => (\n                <Alert key={idx} variant='warning'>\n                  {message}\n                </Alert>\n              ))}\n\n              <Button className={btnStyles.Button} type='submit'>\n                Sign in\n              </Button>\n              {errors.non_field_errors?.map((message, idx) => (\n                <Alert key={idx} variant='warning' className='mt-3'>\n                  {message}\n                </Alert>\n              ))}\n            </Form>\n          </Container>\n\n          <Container className={`mt-3 ${appStyles.Content}`}>\n            <Link className={styles.Link} to='/signup'>\n              Don't have an account? <span>Sign up now!</span>\n            </Link>\n          </Container>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default SignInForm;\n","// SOURCE: https://developer.spotify.com/documentation/web-api/tutorials/code-pkce-flow\n\n// Code verifier\nconst generateRandomString = (length) => {\n  const possible =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  const values = crypto.getRandomValues(new Uint8Array(length));\n  return values.reduce((acc, x) => acc + possible[x % possible.length], '');\n};\n\n// Code challenge\nconst sha256 = async (plain) => {\n  const encoder = new TextEncoder();\n  const data = encoder.encode(plain);\n  return window.crypto.subtle.digest('SHA-256', data);\n};\n\nconst base64encode = (input) => {\n  return btoa(String.fromCharCode(...new Uint8Array(input)))\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_');\n};\n\n// Exports\nexport const clientId = '51c949a050b74ceba5688d10a1c7f5f1';\nexport const codeVerifier = generateRandomString(64);\nexport const getCodeChallenge = async () => {\n  const hashed = await sha256(codeVerifier);\n  return base64encode(hashed);\n};\n\n// Redirect URI\nexport let redirectUri;\nif (process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test') {\n  redirectUri = 'http://localhost:3000/spotify-search';\n} else {\n  redirectUri =\n    'https://we-rate-music-drf-1626129441d6.herokuapp.com/spotify-search';\n}\n\n// Refreshing the access token\nexport const getRefreshToken = async () => {\n  // refresh token that has been previously stored\n  const refreshToken = localStorage.getItem('refresh_token');\n  const url = 'https://accounts.spotify.com/api/token';\n\n  const payload = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n    body: new URLSearchParams({\n      grant_type: 'refresh_token',\n      refresh_token: refreshToken,\n      client_id: clientId,\n    }),\n  };\n  const body = await fetch(url, payload);\n  const response = await body.json();\n\n  localStorage.setItem('access_token', response.access_token);\n  localStorage.setItem('refresh_token', response.refresh_token);\n};\n","// SOURCE: https://developer.spotify.com/documentation/web-api/tutorials/code-pkce-flow\n\nimport { useEffect } from 'react';\nimport {\n  clientId,\n  codeVerifier,\n  getCodeChallenge,\n  redirectUri,\n} from '../utils/spotifyAuthUtils';\n\nexport const useSpotifyAuth = () => {\n  const spotifyAuthentication = async () => {\n    const scope = 'user-read-private user-read-email streaming';\n    const authUrl = new URL('https://accounts.spotify.com/authorize');\n\n    // generated in utils/spotifyAuthUtils.js\n    window.localStorage.setItem('code_verifier', codeVerifier);\n\n    const codeChallenge = await getCodeChallenge();\n\n    const params = {\n      response_type: 'code',\n      client_id: clientId,\n      scope,\n      code_challenge_method: 'S256',\n      code_challenge: codeChallenge,\n      redirect_uri: redirectUri,\n    };\n\n    authUrl.search = new URLSearchParams(params).toString();\n    window.location.href = authUrl.toString();\n  };\n\n  const getToken = async (code) => {\n    // stored from spotifyAuthentication()\n    let codeVerifier = localStorage.getItem('code_verifier');\n\n    const payload = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        client_id: clientId,\n        grant_type: 'authorization_code',\n        code,\n        redirect_uri: redirectUri,\n        code_verifier: codeVerifier,\n      }),\n    };\n\n    const url = 'https://accounts.spotify.com/api/token';\n    const body = await fetch(url, payload);\n    const response = await body.json();\n\n    if (response.access_token) {\n      localStorage.setItem('access_token', response.access_token);\n      localStorage.setItem('refresh_token', response.refresh_token);\n    } else {\n      console.log('Error: ', response);\n    }\n  };\n\n  const handleAuthentication = async () => {\n    await spotifyAuthentication();\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    let code = urlParams.get('code');\n    if (code) {\n      window.localStorage.setItem('code', code);\n      getToken(code);\n    }\n  }, []);\n\n  return { handleAuthentication };\n};\n","import { createContext, useContext, useState } from 'react';\n\nexport const SpotifyPlayerUriContext = createContext();\nexport const SetSpotifyPlayerUriContext = createContext();\n\nexport const useSpotifyPlayerUri = () => useContext(SpotifyPlayerUriContext);\nexport const useSetSpotifyPlayerUri = () =>\n  useContext(SetSpotifyPlayerUriContext);\n\nexport const SpotifyPlayerUriProvider = ({ children }) => {\n  const [spotifyPlayerUri, setSpotifyPlayerUri] = useState('');\n\n  return (\n    <SpotifyPlayerUriContext.Provider value={spotifyPlayerUri}>\n      <SetSpotifyPlayerUriContext.Provider value={setSpotifyPlayerUri}>\n        {children}\n      </SetSpotifyPlayerUriContext.Provider>\n    </SpotifyPlayerUriContext.Provider>\n  );\n};\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCompactDisc } from '@fortawesome/free-solid-svg-icons';\n\nconst LoadingSpinner = () => {\n  return (\n    <div>\n      <FontAwesomeIcon icon={faCompactDisc} size='2xl' spin />\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport { Button, Modal } from 'react-bootstrap';\n\nimport styles from '../styles/ModalWindow.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\n/**\n * ModalWindow component renders a modal window.\n *\n * Must be used with the following props:\n * - show={modalShow}\n * - onHide={() => setModalShow(false)}\n * - onConfirm: custom function\n * - title: string\n * - body: JSX\n */\nfunction ModalWindow(props) {\n  return (\n    <Modal {...props} size='sm' aria-labelledby='confirmation modal' centered>\n      <Modal.Header className={styles.Header} closeButton>\n        <Modal.Title id='confirmation modal' className={styles.Color}>\n          {props.title}\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className={styles.Body}>{props.body}</Modal.Body>\n      <Modal.Footer className={styles.Footer}>\n        <Button onClick={props.onHide} className={btnStyles.Button}>\n          Close\n        </Button>\n        <Button onClick={props.onConfirm} className={btnStyles.Button}>\n          Confirm\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default ModalWindow;\n","import React, { useState } from 'react';\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nimport axios from 'axios';\nimport ModalWindow from './ModalWindow';\nimport { useSetCurrentUser } from '../contexts/CurrentUserContext';\nimport { removeTokenTimestamp } from '../utils/dataUtils';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPowerOff } from '@fortawesome/free-solid-svg-icons';\n\nimport styles from '../styles/SignOutButton.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\nconst SignOutButton = () => {\n  const setCurrentUser = useSetCurrentUser();\n  const [modalShow, setModalShow] = useState(false);\n  const history = useHistory();\n\n  const handleSignOut = async () => {\n    try {\n      await axios.post('/dj-rest-auth/logout/');\n      setCurrentUser(null);\n      removeTokenTimestamp();\n      setModalShow(false);\n      history.push('/');\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <OverlayTrigger\n        placement='bottom'\n        overlay={<Tooltip id='sign-out-tooltip'>Sign Out</Tooltip>}\n      >\n        <Button\n          onClick={() => setModalShow(true)}\n          className={btnStyles.TransparentButton}\n        >\n          <FontAwesomeIcon\n            className={styles.FontAwesomeIcon}\n            icon={faPowerOff}\n            size='xl'\n          />\n        </Button>\n      </OverlayTrigger>\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleSignOut}\n        title='Sign out?'\n        body='Are you sure you want to sign out?'\n      />\n    </>\n  );\n};\n\nexport default SignOutButton;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Container,\n  Row,\n  Col,\n  Button,\n  OverlayTrigger,\n  Tooltip,\n} from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport { axiosReq, axiosRes } from '../api/axiosDefaults';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBackward,\n  faStar,\n  faPen,\n  faCommentDots,\n} from '@fortawesome/free-solid-svg-icons';\nimport { faStar as emptyStar } from '@fortawesome/free-regular-svg-icons';\n\nimport Avatar from './Avatar';\nimport LoadingSpinner from './LoadingSpinner';\nimport SignOutButton from './SignOutButton';\n\nimport styles from '../styles/Profile.module.css';\nimport btnStyles from '../styles/Button.module.css';\nimport loadingStyles from '../styles/LoadingSpinner.module.css';\n\nconst Profile = ({ userId }) => {\n  const currentUser = useCurrentUser();\n  const [profileData, setProfileData] = useState({});\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const [isFollowing, setIsFollowing] = useState(false);\n  const [smallScreen, setSmallScreen] = useState(window.innerWidth < 768);\n  const history = useHistory();\n\n  console.log('profile rendered');\n  useEffect(() => {\n    const checkScreenSize = () => {\n      setSmallScreen(window.innerWidth < 768);\n    };\n\n    window.addEventListener('resize', checkScreenSize);\n\n    return () => {\n      window.removeEventListener('resize', checkScreenSize);\n    };\n  }, []);\n\n  useEffect(() => {\n    const fetchProfileData = async () => {\n      try {\n        const { data } = await axiosReq.get(`profiles/${userId}`);\n        setProfileData(data);\n        console.log('profiledata: ', data);\n        setIsFollowing(data.following_id ? true : false);\n        setHasLoaded(true);\n      } catch (err) {\n        if (err.response?.status === 404) {\n          history.push('/404-error-page');\n        } else {\n          console.log(err);\n        }\n      }\n    };\n\n    setHasLoaded(false);\n    fetchProfileData();\n  }, [userId, history]);\n\n  const handleFollow = async (profile) => {\n    try {\n      const { data } = await axiosRes.post('followers/', {\n        followed: profile.id,\n      });\n      console.log('handleFollow: ', data);\n\n      setProfileData((prevState) => ({\n        ...prevState,\n        followers_count: prevState.followers_count + 1,\n        following_id: data.id,\n      }));\n\n      setIsFollowing(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleUnfollow = async (profile) => {\n    try {\n      const { data } = await axiosRes.delete(\n        `followers/${profile.following_id}`\n      );\n      console.log('handleUnfollow: ', data);\n\n      setProfileData((prevState) => ({\n        ...prevState,\n        followers_count: prevState.followers_count - 1,\n      }));\n\n      setIsFollowing(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const followButton = (\n    <OverlayTrigger\n      placement='bottom'\n      overlay={<Tooltip id='follow-tooltip'>Follow</Tooltip>}\n    >\n      <Button\n        className={btnStyles.TransparentButton}\n        onClick={() => handleFollow(profileData)}\n      >\n        <FontAwesomeIcon\n          icon={emptyStar}\n          size='xl'\n          className={styles.ProfileBottomRightIcon}\n        />\n      </Button>\n    </OverlayTrigger>\n  );\n\n  const unfollowButton = (\n    <OverlayTrigger\n      placement='bottom'\n      overlay={<Tooltip id='unfollow-tooltip'>Unfollow</Tooltip>}\n    >\n      <Button\n        className={btnStyles.TransparentButton}\n        onClick={() => handleUnfollow(profileData)}\n      >\n        <FontAwesomeIcon\n          icon={faStar}\n          size='xl'\n          className={styles.ProfileBottomRightIcon}\n        />\n      </Button>\n    </OverlayTrigger>\n  );\n\n  const editButton = (\n    <OverlayTrigger\n      placement='bottom'\n      overlay={<Tooltip id='edit-tooltip'>Edit</Tooltip>}\n    >\n      <Button\n        className={btnStyles.TransparentButton}\n        onClick={() => history.push(`/profile/${userId}/edit`)}\n      >\n        <FontAwesomeIcon\n          icon={faPen}\n          size='xl'\n          className={styles.ProfileBottomRightIcon}\n        />\n      </Button>\n    </OverlayTrigger>\n  );\n\n  const feedbackButton = (\n    <OverlayTrigger\n      placement='bottom'\n      overlay={<Tooltip id='feedback-tooltip'>Help us improve!</Tooltip>}\n    >\n      <Button\n        onClick={() => history.push('/feedback/create')}\n        className={btnStyles.TransparentButton}\n      >\n        <FontAwesomeIcon\n          icon={faCommentDots}\n          size='xl'\n          className={styles.ProfileTopRightIcon}\n        />\n      </Button>\n    </OverlayTrigger>\n  );\n\n  const smallScreenStatsContainer = (\n    <>\n      <Row className={styles.StatsRow}>\n        <p className={styles.StatsItem}>\n          Playlists: {profileData.playlists_count}\n        </p>\n      </Row>\n      <Row className={styles.StatsRow}>\n        <p className={styles.StatsItem}>\n          Followers: {profileData.followers_count}\n        </p>\n      </Row>\n      <Row className={styles.StatsRow}>\n        <p className={styles.StatsItem}>\n          Following: {profileData.following_count}\n        </p>\n      </Row>\n    </>\n  );\n\n  const largeScreenStatsContainer = (\n    <Row className={styles.StatsRow}>\n      <Col md={4} className='align-self-center'>\n        <h4 className='mb-0'>{profileData.playlists_count}</h4>\n        <p className={styles.StatsItem}>Playlists</p>\n      </Col>\n      <Col md={4} className='align-self-center'>\n        <h4 className='mb-0'>{profileData.followers_count}</h4>\n        <p className={styles.StatsItem}>Followers</p>\n      </Col>\n      <Col md={4} className='align-self-center'>\n        <h4 className='mb-0'>{profileData.following_count}</h4>\n        <p className={styles.StatsItem}>Following</p>\n      </Col>\n    </Row>\n  );\n\n  return hasLoaded ? (\n    // Profile data loaded\n    <Container\n      className={styles.ProfileContainer}\n      style={{ backgroundImage: `url(${profileData.background})` }}\n    >\n      {/* Header */}\n      <Container>\n        <Row>\n          {/* Back button */}\n          <Col xs={3}>\n            <OverlayTrigger\n              placement='bottom'\n              overlay={<Tooltip id='back-tooltip'>Back</Tooltip>}\n            >\n              <FontAwesomeIcon\n                icon={faBackward}\n                size='xl'\n                className={styles.FontAwesomeIcon}\n                onClick={() => history.goBack()}\n              />\n            </OverlayTrigger>\n          </Col>\n          <Col xs={6}>\n            <h2 className='mb-0'>{profileData.owner}</h2>\n            {profileData.is_owner && (\n              <em className={styles.SmallText}>You're logged in as:</em>\n            )}\n          </Col>\n          <Col xs={3}>\n            <SignOutButton />\n          </Col>\n        </Row>\n      </Container>\n\n      {/* Profile picture and stats */}\n      <Container className={styles.AvatarStatsContainer}>\n        <Row className={styles.AlignItemsCenter}>\n          <Col xs={3} className={styles.AvatarContainer}>\n            <Button\n              type='link'\n              className={btnStyles.TransparentButton}\n              onClick={() => history.push(`/profile/${profileData.id}`)}\n            >\n              <Avatar src={profileData.image} height={100} />\n            </Button>\n\n            {/* Follow/Unfollow button - if the current user is not the owner of the profile */}\n            {currentUser &&\n              !profileData?.is_owner &&\n              (isFollowing ? unfollowButton : !isFollowing && followButton)}\n\n            {/* Edit button - if the current user is the owner of the profile */}\n            {currentUser && profileData?.is_owner && editButton}\n\n            {/* Feedback button - if the current user is the owner of the profile */}\n            {currentUser && profileData?.is_owner && feedbackButton}\n          </Col>\n          <Col xs={9}>\n            {smallScreen\n              ? smallScreenStatsContainer\n              : largeScreenStatsContainer}\n          </Col>\n        </Row>\n      </Container>\n    </Container>\n  ) : (\n    // Profile data not yet loaded\n    <>\n      {/* Replicated container structure and styles */}\n      <Container className={styles.ProfileContainer}>\n        <Container>\n          <LoadingSpinner className={loadingStyles.Centered} />\n        </Container>\n        <Container className={styles.AvatarStatsContainer}>\n          <LoadingSpinner className={loadingStyles.Centered} />\n        </Container>\n      </Container>\n    </>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Form, Button, InputGroup, Row, Col, Container } from 'react-bootstrap';\n\nimport { axiosReq } from '../api/axiosDefaults';\nimport { fetchMoreData } from '../utils/dataUtils';\n\nimport Avatar from './Avatar';\nimport LoadingSpinner from './LoadingSpinner';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport styles from '../styles/SearchBar.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\n\nfunction SearchBar({ onSearch, liveSearch = false }) {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [items, setItems] = useState([]);\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const history = useHistory();\n\n  const fetchItems = async () => {\n    try {\n      const { data } = await axiosReq.get(`profiles/?search=${searchQuery}`);\n      setItems(data);\n      console.log(data);\n      setShowDropdown(true);\n      setHasLoaded(true);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // This is function is disabled in the <Button> element, if liveSearch is truthy\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    onSearch(searchQuery);\n  };\n\n  const handleInputChange = async (e) => {\n    const currentQuery = e.target.value;\n    setSearchQuery(currentQuery);\n    console.log(currentQuery);\n\n    if (currentQuery === '') {\n      setShowDropdown(false);\n      return;\n    }\n\n    if (liveSearch) {\n      await fetchItems();\n    }\n  };\n\n  const dropdownResults = hasLoaded ? (\n    <Container className={styles.DropdownMenu}>\n      {items?.results.length ? (\n        <InfiniteScroll\n          dataLength={items.results.length}\n          loader={<LoadingSpinner />}\n          hasMore={!!items.next}\n          next={() => fetchMoreData(items, setItems)}\n          className={styles.InfiniteScroll}\n        >\n          {items.results.map((profile) => (\n            <Row\n              key={profile.id}\n              className={styles.DropdownItem}\n              onClick={() => {\n                history.push(`/profile/${profile.id}`);\n              }}\n            >\n              <Avatar src={profile.image} height={75} />\n              <Col>{profile.owner}</Col>\n            </Row>\n          ))}\n        </InfiniteScroll>\n      ) : (\n        <Row className={styles.DropdownItem}>\n          <Col>No results found</Col>\n        </Row>\n      )}\n    </Container>\n  ) : (\n    <Container className={styles.DropdownMenu}>\n      <LoadingSpinner />\n    </Container>\n  );\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Form.Group controlId='searchForm' style={{ marginBottom: '0' }}>\n          <InputGroup>\n            <Form.Control\n              type='text'\n              placeholder={liveSearch ? 'Search for users' : 'Search Spotify'}\n              onChange={handleInputChange}\n              value={searchQuery}\n            />\n            <InputGroup.Append>\n              {liveSearch ? null : (\n                <Button type='submit' className={btnStyles.Button}>\n                  <FontAwesomeIcon\n                    icon={faMagnifyingGlass}\n                    style={{ color: '#3d3d3d' }}\n                    size='lg'\n                  />\n                </Button>\n              )}\n            </InputGroup.Append>\n          </InputGroup>\n        </Form.Group>\n      </Form>\n      {liveSearch && showDropdown && dropdownResults}\n    </>\n  );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport styles from '../styles/Playlist.module.css';\n\n// Set default image if no image is provided\nconst defaultImage =\n  'https://res.cloudinary.com/dxgzepuov/image/upload/v1702896303/default_post_uq5gxz.jpg';\n\n/**\n * Playlist component to display the image of a playlist. Default image is used if no image is provided.\n *\n * @param {string} image - The image URL of the playlist\n * @param {string} title - The title of the playlist\n */\nconst Playlist = ({ image, title }) => {\n  return (\n    <img\n      src={image || defaultImage}\n      className={styles.Image}\n      alt={`${title}'s cover art`}\n    />\n  );\n};\n\nexport default Playlist;\n","import React, { useState } from 'react';\nimport { Button, Alert } from 'react-bootstrap';\n\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport { axiosRes } from '../api/axiosDefaults';\n\nimport ModalWindow from '../components/ModalWindow';\nimport Playlist from '../components/Playlist';\n\nimport btnStyles from '../styles/Button.module.css';\n\nfunction AddPlaylistButton({ playlistData: playlist }) {\n  const currentUser = useCurrentUser();\n  const [modalShow, setModalShow] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = {\n      spotify_id: playlist.id,\n      title: playlist.name,\n      image: playlist.images[0]?.url,\n      url: playlist.external_urls.spotify,\n      iframe_uri: playlist.uri,\n      owner: currentUser.id,\n    };\n\n    try {\n      const response = await axiosRes.post('playlists/', data);\n      console.log(response);\n      setModalShow(false);\n    } catch (error) {\n      setErrors({\n        message:\n          error.response?.data || 'Something went wrong! Please try again.',\n      });\n      setShowAlert(true);\n    }\n  };\n\n  return (\n    <>\n      <Button onClick={() => setModalShow(true)} className={btnStyles.Button}>\n        Add\n      </Button>\n\n      {showAlert && errors?.message && (\n        <Alert\n          variant='warning'\n          onClose={() => setShowAlert(false)}\n          dismissible\n        >\n          {errors.message}\n        </Alert>\n      )}\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleSubmit}\n        title={`Add \"${playlist.name}\" to your profile?`}\n        body={\n          <Playlist image={playlist.images[0]?.url} title={playlist.name} />\n        }\n      />\n    </>\n  );\n}\n\nexport default AddPlaylistButton;\n","import React, { useEffect, useState } from 'react';\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap';\n\nimport { useSpotifyAuth } from './useSpotifyAuth';\nimport { useSetSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\nimport { useCurrentUser } from '../contexts/CurrentUserContext';\nimport { useRedirect } from '../hooks/useRedirect';\nimport { getRefreshToken } from '../utils/spotifyAuthUtils';\n\nimport Profile from '../components/Profile';\nimport SearchBar from '../components/SearchBar';\nimport Playlist from '../components/Playlist';\nimport AddPlaylistButton from './AddPlaylistButton';\n\nimport styles from '../styles/SpotifySearchPage.module.css';\nimport ModalWindow from '../components/ModalWindow';\n\nconst SpotifySearchPage = () => {\n  useRedirect();\n\n  const { handleAuthentication } = useSpotifyAuth();\n  const setSpotifyPlayerUri = useSetSpotifyPlayerUri();\n  const currentUser = useCurrentUser();\n  const [searchResults, setSearchResults] = useState();\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n\n  useEffect(() => {\n    setModalShow(false);\n    // Loads the last search from local storage, if it exists\n    const lastSearch = localStorage.getItem('lastSearch');\n    console.log(lastSearch);\n    if (lastSearch) {\n      setSearchResults(JSON.parse(lastSearch));\n      console.log(JSON.parse(lastSearch));\n    }\n\n    // Delay - to allow useSpotityAuth the time to set access_token to localStorage (Blunt force fix)\n    const delay = setTimeout(() => {\n      // Checks if the user has access_token in local storage\n      const access_token = localStorage.getItem('access_token');\n      console.log(access_token);\n      if (!access_token) {\n        setModalShow(true);\n      }\n    }, 1000);\n\n    // Cleanup\n    return () => {\n      clearTimeout(delay);\n    };\n  }, []);\n\n  const handleSearch = async (searchQuery) => {\n    setErrors({});\n    // Empty search field\n    if (!searchQuery) {\n      setErrors({ message: 'Search field is empty' });\n      setShowAlert(true);\n      return;\n    }\n\n    const controller = new AbortController();\n    const signal = controller.signal;\n\n    try {\n      // Refreshes the access token before every search\n      const refreshTokenResponse = await getRefreshToken();\n      console.log('refresh token response:', refreshTokenResponse);\n\n      const response = await fetch(\n        `https://api.spotify.com/v1/search?q=${searchQuery}&type=album%2Cplaylist%2Cartist&limit=50`,\n        {\n          headers: {\n            Authorization: 'Bearer ' + localStorage.getItem('access_token'),\n          },\n          signal: signal,\n        }\n      );\n      const data = await response.json();\n      console.log('response:', response);\n      console.log(data);\n\n      // Combine the items from albums, playlists, and artists\n      const combinedData = [\n        ...(data.albums?.items || []),\n        ...(data.playlists?.items || []),\n        ...(data.artists?.items || []),\n      ];\n\n      setSearchResults(combinedData);\n      console.log(combinedData);\n      // Saves the search results to local storage for later use\n      if (combinedData.length) {\n        localStorage.setItem('lastSearch', JSON.stringify(combinedData));\n      }\n    } catch (error) {\n      setErrors({\n        message: error.response?.data || 'An error occurred in fetching',\n      });\n      setShowAlert(true);\n    }\n\n    // Cleanup - in case of early unmounting\n    return () => {\n      controller.abort();\n    };\n  };\n\n  const updateSpotifyPlayerUri = (uri) => {\n    setSpotifyPlayerUri(uri);\n  };\n\n  return (\n    <>\n      {currentUser?.pk && <Profile userId={currentUser?.pk} />}\n      <Container className={styles.Container}>\n        <SearchBar onSearch={handleSearch} />\n        {showAlert && errors?.message && (\n          <Alert\n            variant='warning'\n            onClose={() => setShowAlert(false)}\n            dismissible\n          >\n            {errors.message}\n          </Alert>\n        )}\n        <Container>\n          <Row>\n            {searchResults?.length ? (\n              searchResults?.map((result) => (\n                <Col\n                  className={styles.PaddingReset}\n                  key={result.id}\n                  xs={4}\n                  md={3}\n                >\n                  <Button\n                    variant='link'\n                    onClick={() => updateSpotifyPlayerUri(result.uri)}\n                    className={styles.PaddingReset}\n                  >\n                    <Playlist\n                      image={result.images[0]?.url}\n                      title={result.name}\n                    />\n                  </Button>\n                  <Row>\n                    <Col className={styles.MarginBottom}>\n                      <p className={styles.Margin}>{result.name}</p>\n                      <AddPlaylistButton playlistData={result} />\n                    </Col>\n                  </Row>\n                </Col>\n              ))\n            ) : (\n              <p>No search stored results...</p>\n            )}\n          </Row>\n        </Container>\n      </Container>\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleAuthentication}\n        title={'You will be redirected to Spotify'}\n        body='Please authenticate this app with your Spotify account to take full advantage of its features. Once you are authenticated, you will be redirected back to the app. Thank you!'\n      />\n    </>\n  );\n};\n\nexport default SpotifySearchPage;\n","// SOURCE: https://developer.spotify.com/documentation/embeds/tutorials/using-the-iframe-api\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\n\nfunction SpotifyPlayer() {\n  const playerRef = useRef();\n  const spotifyPlayerUri = useSpotifyPlayerUri();\n  const [embedController, setEmbedController] = useState(null);\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = 'https://open.spotify.com/embed/iframe-api/v1';\n    script.async = true;\n    document.body.appendChild(script);\n\n    window.onSpotifyIframeApiReady = (IFrameAPI) => {\n      const options = {\n        width: '100%',\n        height: '352px', // 352px is the minimum height before the player resizes to a smaller size\n        uri: spotifyPlayerUri,\n      };\n\n      const callback = (EmbedController) => {\n        setEmbedController(EmbedController);\n      };\n\n      IFrameAPI.createController(playerRef.current, options, callback);\n    };\n  }, [spotifyPlayerUri]);\n\n  useEffect(() => {\n    if (embedController) {\n      embedController.loadUri(spotifyPlayerUri);\n    }\n  }, [spotifyPlayerUri, embedController]);\n\n  return <div ref={playerRef}></div>;\n}\n\nexport default SpotifyPlayer;\n","import React, { useEffect, useState } from 'react';\nimport styles from '../styles/AccordionWindow.module.css';\nimport { Accordion, Card, Button } from 'react-bootstrap';\nimport SpotifyPlayer from '../spotify/SpotifyPlayer';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { useSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\n\nfunction AccordionWindow() {\n  const spotifyPlayerUri = useSpotifyPlayerUri();\n  const [activeKey, setActiveKey] = useState('');\n  const [showPlayer, setShowPlayer] = useState(false);\n\n  useEffect(() => {\n    if (spotifyPlayerUri) {\n      setActiveKey('0');\n      setShowPlayer(true);\n    }\n  }, [spotifyPlayerUri]);\n\n  const handleToggle = () => {\n    if (activeKey === '0') {\n      setActiveKey('');\n    } else {\n      setActiveKey('0');\n    }\n  };\n\n  return (\n    <Accordion\n      activeKey={activeKey}\n      onSelect={handleToggle}\n      className={`${styles.AccordionPosition} ${\n        showPlayer ? '' : styles.Hidden\n      }`}\n    >\n      <Card className={styles.Card}>\n        <Card.Header className={styles.Header}>\n          <Accordion.Toggle\n            as={Button}\n            variant='link'\n            eventKey='0'\n            className={styles.PaddingReset}\n          >\n            <FontAwesomeIcon icon={activeKey ? faCaretDown : faCaretUp} />\n          </Accordion.Toggle>\n        </Card.Header>\n        <Accordion.Collapse eventKey='0'>\n          <Card.Body className={styles.PaddingReset}>\n            <SpotifyPlayer />\n          </Card.Body>\n        </Accordion.Collapse>\n      </Card>\n    </Accordion>\n  );\n}\n\nexport default AccordionWindow;\n","import React, { useEffect, useState } from 'react';\nimport { Button, Col, Container, Row } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport { useRedirect } from '../hooks/useRedirect';\n\nimport axios from 'axios';\nimport { axiosReq } from '../api/axiosDefaults';\nimport { fetchMoreData } from '../utils/dataUtils';\n\nimport Playlist from '../components/Playlist';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nimport styles from '../styles/PlaylistsPage.module.css';\nimport appStyles from '../App.module.css';\nimport loadingStyles from '../styles/LoadingSpinner.module.css';\nimport SearchBar from '../components/SearchBar';\n\nconst PlaylistsPage = ({ filter = '', profileView = false, pageName = '' }) => {\n  const [playlists, setPlaylists] = useState([]);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const history = useHistory();\n\n  useRedirect();\n\n  useEffect(() => {\n    // Sends a CancelToken with the request\n    const CancelToken = axios.CancelToken;\n    const source = CancelToken.source();\n\n    console.log('PlaylistsPage rendered');\n\n    const fetchPlaylists = async () => {\n      try {\n        const { data } = await axiosReq.get(`playlists/?${filter}`, {\n          cancelToken: source.token,\n        });\n        setPlaylists(data);\n        console.log('playlist data: ', data);\n        setHasLoaded(true);\n      } catch (err) {\n        if (axios.isCancel(err)) {\n          console.log('Request canceled', err.message);\n        } else if (err.response?.status === 404) {\n          history.push('/404-error-page');\n        } else {\n          console.log(err);\n        }\n      }\n    };\n\n    setHasLoaded(false);\n    fetchPlaylists();\n\n    // Cleanup\n    return () => {\n      source.cancel('Request canceled');\n    };\n  }, [filter, history]);\n\n  const displayWhyNoPlaylistsMessage = () => {\n    switch (pageName) {\n      case 'All Playlists':\n        return <p>No playlists found!</p>;\n      case 'Followed Users':\n        return <p>You aren't following any users yet...</p>;\n      case 'Your Rated Playlists':\n        return <p>You haven't rated any playlists yet...</p>;\n      default:\n        return <p>No playlists found!</p>;\n    }\n  };\n\n  return hasLoaded ? (\n    <Container\n      className={profileView ? styles.ProfileContainer : styles.Container}\n    >\n      {/* No SearchBar in pages with Profile.js component */}\n      {!profileView ? (\n        <>\n          <Row className={styles.HighlightedContainer}>\n            <Col>\n              <h2>{pageName}</h2>\n            </Col>\n          </Row>\n          <SearchBar liveSearch />\n        </>\n      ) : null}\n\n      {playlists.results.length ? (\n        <Container>\n          <InfiniteScroll\n            dataLength={playlists.results.length}\n            loader={<LoadingSpinner />}\n            hasMore={!!playlists.next}\n            next={() => fetchMoreData(playlists, setPlaylists)}\n            className={styles.InfiniteScroll}\n          >\n            <Row>\n              {playlists.results.map((playlist) => (\n                <Col\n                  className={appStyles.PaddingReset}\n                  key={playlist.id}\n                  xs={4}\n                  md={3}\n                >\n                  <Button\n                    variant='link'\n                    onClick={() => history.push(`/playlist/${playlist.id}`)}\n                    className={styles.Button}\n                  >\n                    <Playlist image={playlist.image} title={playlist.title} />\n                  </Button>\n                </Col>\n              ))}\n            </Row>\n          </InfiniteScroll>\n        </Container>\n      ) : (\n        displayWhyNoPlaylistsMessage()\n      )}\n    </Container>\n  ) : (\n    <LoadingSpinner className={loadingStyles.Centered} />\n  );\n};\n\nexport default PlaylistsPage;\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { useRedirect } from '../hooks/useRedirect';\n\nimport PlaylistsPage from './PlaylistsPage';\nimport Profile from '../components/Profile';\n\nconst ProfilePage = () => {\n  const { userId } = useParams();\n  useRedirect();\n  return (\n    <>\n      <Profile userId={userId} />\n      <PlaylistsPage filter={`owner__profile=${userId}`} profileView />\n    </>\n  );\n};\n\nexport default ProfilePage;\n","import React, { useEffect, useState } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { Rating, StickerStar } from '@smastrom/react-rating';\nimport { axiosReq, axiosRes } from '../api/axiosDefaults';\nimport {\n  calculateAverageRatingPUT,\n  calculateAverageRatingPOST,\n} from '../utils/dataUtils';\n\nconst StarRating = ({ playlist, setPlaylist }) => {\n  const [rating, setRating] = useState(0);\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  useEffect(() => {\n    const fetchRatingData = async () => {\n      if (playlist.rating_id) {\n        try {\n          const { data } = await axiosRes.get(`ratings/${playlist.rating_id}`);\n          setRating(data.score);\n        } catch (err) {\n          setErrors({\n            message: 'Error fetching rating data',\n          });\n        }\n        setShowAlert(true);\n      }\n    };\n    fetchRatingData();\n  }, [playlist]);\n\n  const handleChange = async (selectedValue) => {\n    // Clear any previous errors\n    setErrors({});\n\n    // If the user clicks the same rating, do nothing\n    // Clicking the same rating defaults selectedValue = 0\n    if (selectedValue === 0) {\n      return;\n    }\n\n    if (playlist.rating_id) {\n      try {\n        await axiosReq.put(`ratings/${playlist.rating_id}`, {\n          score: selectedValue,\n        });\n\n        setRating(selectedValue);\n        setPlaylist((prevState) => ({\n          ...prevState,\n          average_rating: calculateAverageRatingPUT(\n            prevState,\n            rating,\n            selectedValue\n          ),\n          // If the user is the owner of the playlist, update owner_rating state\n          ...(playlist.is_owner ? { owner_rating: selectedValue } : {}),\n        }));\n      } catch (err) {\n        setErrors({\n          message: 'Error updating rating, please try again.',\n        });\n        setShowAlert(true);\n      }\n    } else {\n      try {\n        const { data } = await axiosReq.post('ratings/', {\n          playlist: playlist.id,\n          score: selectedValue,\n        });\n\n        setRating(selectedValue);\n        setPlaylist((prevState) => ({\n          ...prevState,\n          rating_id: data.id,\n          ratings_count: prevState.ratings_count + 1,\n          average_rating: calculateAverageRatingPOST(prevState, selectedValue),\n          // If the user is the owner of the playlist, update owner_rating state\n          ...(playlist.is_owner ? { owner_rating: selectedValue } : {}),\n        }));\n      } catch (err) {\n        setErrors({\n          message: 'Error adding rating, please try again.',\n        });\n        setShowAlert(true);\n      }\n    }\n  };\n\n  const myStyles = {\n    itemShapes: StickerStar,\n    activeFillColor: '#df604e',\n    inactiveFillColor: '#df5f4e6e',\n  };\n\n  return (\n    <>\n      <p style={{ marginBottom: '0' }}>\n        <em>Your rating:</em>\n      </p>\n      <Rating\n        value={rating}\n        onChange={handleChange}\n        style={{ maxWidth: 250, margin: 'auto' }}\n        itemStyles={myStyles}\n        items={5}\n      />\n\n      {showAlert && errors?.message && (\n        <Alert\n          variant='warning'\n          onClose={() => setShowAlert(false)}\n          dismissible\n        >\n          {errors.message}\n        </Alert>\n      )}\n\n      {rating ? (\n        <p style={{ fontSize: '0.9rem' }}>\n          <em>(Click to edit your rating)</em>\n        </p>\n      ) : (\n        <p style={{ fontSize: '0.9rem' }}>\n          <em>(Click to add your rating)</em>\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default StarRating;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Alert,\n  Button,\n  Col,\n  Container,\n  OverlayTrigger,\n  Row,\n  Tooltip,\n} from 'react-bootstrap';\nimport { useHistory, useParams } from 'react-router-dom';\n\nimport { useRedirect } from '../hooks/useRedirect';\n\nimport { axiosReq } from '../api/axiosDefaults';\nimport { useSetSpotifyPlayerUri } from '../contexts/SpotifyPlayerUriContext';\n\nimport Playlist from '../components/Playlist';\nimport Profile from '../components/Profile';\nimport { Rating, StickerStar } from '@smastrom/react-rating';\nimport StarRating from '../components/StarRating';\nimport LoadingSpinner from '../components/LoadingSpinner';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpotify } from '@fortawesome/free-brands-svg-icons';\n\nimport styles from '../styles/PlaylistDetail.module.css';\nimport btnStyles from '../styles/Button.module.css';\nimport loadingStyles from '../styles/LoadingSpinner.module.css';\n\nconst PlaylistDetail = () => {\n  const { id } = useParams();\n  const [playlist, setPlaylist] = useState([]);\n  const [hasLoaded, setHasLoaded] = useState(false);\n  const setSpotifyPlayerUri = useSetSpotifyPlayerUri();\n  const history = useHistory();\n\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  useRedirect();\n\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      try {\n        const { data: playlist } = await axiosReq.get(`playlists/${id}`);\n\n        setPlaylist(playlist);\n        setHasLoaded(true);\n      } catch (err) {\n        if (err.response?.status === 404) {\n          history.push('/404-error-page');\n        } else {\n          setErrors({\n            message: 'Error fetching playlist data, please refresh the page',\n          });\n          setShowAlert(true);\n        }\n      }\n    };\n\n    setHasLoaded(false);\n    fetchPlaylist();\n  }, [id, history]);\n\n  const redirectToEdit = () => {\n    history.push(`/playlist/${id}/edit`);\n  };\n\n  const updateSpotifyPlayerUri = (uri) => {\n    setSpotifyPlayerUri(uri);\n  };\n\n  // Custom styles for the <Rating /> component\n  const averageRatingStyles = {\n    itemShapes: StickerStar,\n    activeFillColor: '#df604e',\n    inactiveFillColor: '#df5f4e6e',\n  };\n  const ownerRatingStyles = {\n    itemShapes: StickerStar,\n    itemStrokeWidth: 2,\n    activeFillColor: '#d14e3d',\n    activeStrokeColor: '#5a5550',\n    inactiveFillColor: '#df5f4e2a',\n    inactiveStrokeColor: '#5a5550',\n  };\n\n  const displayOwnerAndRating = (\n    <Row>\n      {/* Empty - to help with alignment */}\n      <Col xs={6}></Col>\n\n      {/* Owners name and own rating */}\n      <Col xs={6} style={{ textAlign: 'center' }}>\n        <p style={{ marginBottom: '0' }}>-{playlist.owner}</p>\n        <Rating\n          readOnly={true}\n          value={playlist.owner_rating}\n          style={{ minWidth: 75, maxWidth: 100, margin: 'auto' }}\n          itemStyles={ownerRatingStyles}\n        />\n      </Col>\n    </Row>\n  );\n\n  const displayJustOwner = (\n    <Row>\n      {/* Empty - to help with alignment */}\n      <Col xs={6}></Col>\n\n      {/* Owners name and own rating */}\n      <Col xs={6} style={{ textAlign: 'center' }}>\n        <p style={{ marginBottom: '0' }}>-{playlist.owner}</p>\n      </Col>\n    </Row>\n  );\n\n  return hasLoaded ? (\n    <>\n      <Profile userId={playlist.owner_id} />\n      <Container className={styles.Container}>\n        <Row>\n          <Col>\n            <h2>{playlist.title}</h2>\n          </Col>\n        </Row>\n        <Row className={styles.RowPadding}>\n          {/* Average rating information */}\n          <Col xs={6}>\n            <em>Average Rating: {playlist.average_rating || 0}</em>\n            <Rating\n              readOnly={true}\n              value={playlist.average_rating || 0}\n              style={{ maxWidth: 180, margin: 'auto' }}\n              itemStyles={averageRatingStyles}\n            />\n            <em>Rated: {playlist.ratings_count} time(s)</em>\n          </Col>\n\n          {/* Play button */}\n          <Col xs={6}>\n            <p style={{ marginBottom: '0' }}>click here..</p>\n            <OverlayTrigger\n              placement='bottom'\n              overlay={<Tooltip id='back-tooltip'>Play</Tooltip>}\n            >\n              <Button\n                variant='link'\n                onClick={() => updateSpotifyPlayerUri(playlist.iframe_uri)}\n              >\n                <FontAwesomeIcon\n                  icon={faSpotify}\n                  style={{ color: '#1db954' }}\n                  size='2xl'\n                />\n              </Button>\n            </OverlayTrigger>\n            <p style={{ marginBottom: '0' }}>..have a listen!</p>\n          </Col>\n        </Row>\n\n        {/* Playlist's image and description */}\n        <Row className={styles.HighlightedContainer}>\n          <Col xs={4}>\n            <Button\n              variant='link'\n              onClick={() => history.push(`/profile/${playlist.owner_id}`)}\n              className={styles.Button}\n            >\n              <Playlist image={playlist.image} title={playlist.title} />\n            </Button>\n          </Col>\n          <Col xs={8}>\n            <Row>\n              <Col className={styles.ScreenSizeContidionalPadding}>\n                {playlist.description ? (\n                  <p className={styles.WordBreak}>\"{playlist.description}\"</p>\n                ) : (\n                  <p>\n                    <em>\n                      -{playlist.owner} hasn't said anything about this playlist\n                      yet-\n                    </em>\n                  </p>\n                )}\n              </Col>\n            </Row>\n\n            {/* Displays owners name and rating, if rating. If no rating, displays owners name, if description. Else, null */}\n            {playlist.owner_rating\n              ? displayOwnerAndRating\n              : !playlist.owner_rating &&\n                playlist.description &&\n                displayJustOwner}\n          </Col>\n        </Row>\n\n        {/* StarRating component - lets user/owner add/edit rating objects */}\n        <Row>\n          <Col>\n            <StarRating playlist={playlist} setPlaylist={setPlaylist} />\n          </Col>\n        </Row>\n        {/* Edit playlist for playlist owner */}\n        {playlist.is_owner && (\n          <>\n            <Row>\n              <Col>\n                <Button onClick={redirectToEdit} className={btnStyles.Button}>\n                  Edit Playlist\n                </Button>\n              </Col>\n            </Row>\n          </>\n        )}\n      </Container>\n\n      {showAlert && errors?.message && (\n        <Alert\n          variant='warning'\n          onClose={() => setShowAlert(false)}\n          dismissible\n        >\n          {errors.message}\n        </Alert>\n      )}\n    </>\n  ) : (\n    <LoadingSpinner className={loadingStyles.Centered} />\n  );\n};\n\nexport default PlaylistDetail;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { axiosReq } from '../api/axiosDefaults';\nimport { Container, Form, Row, Col, Button, Alert } from 'react-bootstrap';\nimport Profile from '../components/Profile';\nimport Playlist from '../components/Playlist';\nimport ModalWindow from '../components/ModalWindow';\nimport styles from '../styles/EditCreateForms.module.css';\nimport btnStyles from '../styles/Button.module.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashCan } from '@fortawesome/free-regular-svg-icons';\n\nfunction PlaylistEditForm() {\n  const [playlistData, setPlaylistData] = useState({\n    owner_id: '',\n    title: '',\n    description: '',\n    image: '',\n    spotify_id: '',\n    iframe_uri: '',\n    url: '',\n  });\n  const { owner_id, title, description, image, spotify_id, iframe_uri, url } =\n    playlistData;\n\n  const { id } = useParams();\n  const history = useHistory();\n  const [modalShow, setModalShow] = useState(false);\n\n  const [errors, setErrors] = useState({});\n  const [showAlert, setShowAlert] = useState(false);\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`playlists/${id}`);\n        console.log(data);\n        const {\n          is_owner,\n          owner_id,\n          title,\n          description,\n          image,\n          spotify_id,\n          iframe_uri,\n          url,\n        } = data;\n\n        is_owner\n          ? setPlaylistData({\n              owner_id,\n              title,\n              description,\n              image,\n              spotify_id,\n              iframe_uri,\n              url,\n            })\n          : history.push(`/playlist/${id}`);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    handleMount();\n  }, [history, id]);\n\n  const handleChange = (e) => {\n    setPlaylistData({\n      ...playlistData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    formData.append('title', title);\n    formData.append('description', description);\n\n    // Currently non-editable fields; but payload requires them\n    formData.append('spotify_id', spotify_id);\n    formData.append('image', image);\n    formData.append('url', url);\n    formData.append('iframe_uri', iframe_uri);\n\n    try {\n      await axiosReq.put(`playlists/${id}`, formData);\n      history.push(`/playlist/${id}`);\n    } catch (err) {\n      console.log(err);\n      if (err.response?.status !== 401) {\n        setErrors(err.response?.data);\n      }\n    }\n  };\n\n  const handleDelete = async (event) => {\n    event.preventDefault();\n    try {\n      await axiosReq.delete(`playlists/${id}`);\n      setModalShow(false);\n      history.push(`/profile/${owner_id}`);\n    } catch (err) {\n      setErrors({\n        message:\n          err.response?.data || 'Something went wrong! Please try again.',\n      });\n      setShowAlert(true);\n    }\n  };\n\n  return (\n    <>\n      <Profile userId={owner_id} />\n      <Form onSubmit={handleSubmit}>\n        <Container className={styles.Container}>\n          <Row>\n            <Col>\n              <h4>Edit Playlist</h4>\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group className={styles.FormGroup}>\n                <Form.Label>Title:</Form.Label>\n                <Form.Control\n                  type='text'\n                  name='title'\n                  value={title}\n                  onChange={handleChange}\n                  className={styles.FormControl}\n                />\n              </Form.Group>\n              {errors?.title?.map((message, idx) => (\n                <Alert variant='warning' key={idx}>\n                  {message}\n                </Alert>\n              ))}\n            </Col>\n          </Row>\n          <Row className={styles.Playlist}>\n            <Col>\n              <Playlist image={image} title={title} />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Form.Group className={styles.FormGroup}>\n                <Form.Label>\n                  If you like, some details about this playlist:\n                </Form.Label>\n                <Form.Control\n                  as='textarea'\n                  rows={4}\n                  name='description'\n                  value={description}\n                  placeholder='How does this playlist make you feel? Where do you most enjoy listening to it?...'\n                  onChange={handleChange}\n                  className={styles.FormControl}\n                />\n              </Form.Group>\n              {errors?.description?.map((message, idx) => (\n                <Alert variant='warning' key={idx}>\n                  {message}\n                </Alert>\n              ))}\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Button\n                className={`${btnStyles.TransparentButton} ${btnStyles.MarginLeftRight}`}\n                onClick={() => setModalShow(true)}\n              >\n                <FontAwesomeIcon icon={faTrashCan} size='xl' />\n              </Button>\n              <Button\n                type='button'\n                className={`${btnStyles.Button} ${btnStyles.MarginLeftRight}`}\n                onClick={() => history.push(`/playlist/${id}`)}\n              >\n                Cancel\n              </Button>\n              <Button\n                type='submit'\n                className={`${btnStyles.Button} ${btnStyles.MarginLeftRight}`}\n              >\n                Save\n              </Button>\n            </Col>\n          </Row>\n          {showAlert && errors?.message && (\n            <Alert\n              variant='warning'\n              onClose={() => setShowAlert(false)}\n              dismissible\n            >\n              {errors.message}\n            </Alert>\n          )}\n        </Container>\n      </Form>\n\n      <ModalWindow\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n        onConfirm={handleDelete}\n        title={`Delete ${title}?`}\n        body=\"Are you sure you want to delete this playlist? There's no going back.\"\n      />\n    </>\n  );\n}\n\nexport default PlaylistEditForm;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { axiosReq } from '../api/axiosDefaults';\nimport { Container, Form, Row, Col, Button, Alert } from 'react-bootstrap';\nimport styles from '../styles/EditCreateForms.module.css';\nimport btnStyles from '../styles/Button.module.css';\nimport Profile from '../components/Profile';\n\nfunction ProfileEditForm() {\n  const { userId } = useParams();\n  const history = useHistory();\n  const profileImageInput = useRef(null);\n  const backgroundImageInput = useRef(null);\n\n  const [errors, setErrors] = useState({});\n\n  useEffect(() => {\n    const handleMount = async () => {\n      try {\n        const { data } = await axiosReq.get(`profiles/${userId}`);\n        const { is_owner } = data;\n\n        if (!is_owner) {\n          history.push(`/profile/${userId}`);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    handleMount();\n  }, [history, userId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    if (profileImageInput?.current?.files[0]) {\n      formData.append('image', profileImageInput.current.files[0]);\n    }\n    if (backgroundImageInput?.current?.files[0]) {\n      formData.append('background', backgroundImageInput.current.files[0]);\n    }\n\n    try {\n      await axiosReq.put(`profiles/${userId}`, formData);\n      history.push(`/profile/${userId}`);\n    } catch (err) {\n      console.log(err);\n      if (err.response?.status !== 401) {\n        setErrors(err.response?.data);\n      }\n    }\n  };\n\n  return (\n    <>\n      <Profile userId={userId} />\n      <Form onSubmit={handleSubmit}>\n        <Container className={styles.Container}>\n          <Row className='justify-content-center'>\n            <Form.Group className={styles.FormGroup}>\n              <Col>\n                <Form.Label\n                  className={btnStyles.Button}\n                  htmlFor='profile-image-upload'\n                >\n                  Change profile image\n                </Form.Label>\n\n                <Form.File\n                  className={styles.TextAlignLast}\n                  id='profile-image-upload'\n                  accept='image/*'\n                  ref={profileImageInput}\n                />\n              </Col>\n            </Form.Group>\n          </Row>\n          {errors?.image?.map((message, idx) => (\n            <Alert variant='warning' key={idx}>\n              {message}\n            </Alert>\n          ))}\n          <br />\n          <Row className='justify-content-center'>\n            <Form.Group className={styles.FormGroup}>\n              <Col>\n                <Form.Label\n                  className={btnStyles.Button}\n                  htmlFor='background-image-upload'\n                >\n                  Change background image\n                </Form.Label>\n\n                <Form.File\n                  className={styles.TextAlignLast}\n                  id='background-image-upload'\n                  accept='image/*'\n                  ref={backgroundImageInput}\n                />\n              </Col>\n            </Form.Group>\n          </Row>\n          {errors?.background?.map((message, idx) => (\n            <Alert variant='warning' key={idx}>\n              {message}\n            </Alert>\n          ))}\n          <Button type='submit' className={btnStyles.Button}>\n            Save\n          </Button>\n        </Container>\n      </Form>\n    </>\n  );\n}\n\nexport default ProfileEditForm;\n","export default __webpack_public_path__ + \"static/media/waveform.329b796b.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFaceDizzy } from '@fortawesome/free-regular-svg-icons';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport waveform from '../assets/waveform.png';\n\nconst PageNotFound404 = () => {\n  return (\n    <Container style={{ padding: '150px 0' }}>\n      <Row>\n        <Col>\n          <h1>\n            4<FontAwesomeIcon icon={faFaceDizzy} />4\n          </h1>\n          <h4>Page not found</h4>\n          <img src={waveform} alt='Sound waveform' style={{ width: '100%' }} />\n          <p>\n            Oops... The link you clicked may be broken or the page may have been\n            removed. Click to go back to the <Link to='/'>homepage</Link>.\n          </p>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default PageNotFound404;\n","import React from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport styles from '../styles/Homepage.module.css';\nimport { useRedirect } from '../hooks/useRedirect';\n\nconst Homepage = () => {\n  useRedirect();\n  return (\n    <Container className={styles.Container}>\n      <Row>\n        <Col xs={7}></Col>\n        <Col xs={5} className={styles.TitleContainer}>\n          <h1 className={styles.Title}>We Rate Music</h1>\n          <hr className={styles.Line} />\n          <hr className={styles.SecondLine} />\n          <Row>\n            <Col className={styles.IntroContainer}>\n              <p>\n                Welcome to We Rate Music! The place to rate and review your\n                favorite music.\n              </p>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\nexport default Homepage;\n","import React, { useRef, useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { useHistory } from 'react-router-dom';\nimport { useRedirect } from '../hooks/useRedirect';\nimport { axiosReq } from '../api/axiosDefaults';\nimport { Alert, Button, Col, Container, Row } from 'react-bootstrap';\nimport styles from '../styles/EditCreateForms.module.css';\nimport btnStyles from '../styles/Button.module.css';\n\nfunction FeedbackCreateForm() {\n  useRedirect();\n\n  const [feedbackData, setfeedbackData] = useState({\n    title: '',\n    feedback: '',\n    image: '',\n  });\n  const { title, feedback } = feedbackData;\n  const imageFile = useRef();\n\n  const history = useHistory();\n  const [errors, setErrors] = useState({});\n  const [showSuccess, setShowSuccess] = useState(false);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('title', title);\n    formData.append('feedback', feedback);\n    if (imageFile?.current?.files[0]) {\n      formData.append('image', imageFile?.current?.files[0]);\n    }\n    try {\n      await axiosReq.post('feedback/', formData);\n      setShowSuccess(true);\n      setTimeout(() => {\n        console.log('feedback submitted');\n        history.push('/');\n      }, 4000);\n    } catch (err) {\n      setErrors(err.response?.data);\n    }\n  };\n  const handleChange = (event) => {\n    setfeedbackData({\n      ...feedbackData,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const warmWelcome = (\n    <>\n      <Row className='pt-3'>\n        <Col>\n          <h1 className={styles.Title}>Welcome,</h1>\n          <h3>and thank you for taking your time!</h3>\n        </Col>\n      </Row>\n      <Row className={styles.HighlightedContainer}>\n        <Col>\n          <p>\n            This is your chance to help us improve the app. A direct channel to\n            the developers. Please be sensible and respectful. We appreciate\n            your feedback and will consider all of your suggestions and\n            implement them if possible.\n          </p>\n        </Col>\n      </Row>\n    </>\n  );\n\n  const textFields = (\n    <>\n      <Form.Group>\n        <Form.Label>Title:</Form.Label>\n        <Form.Control\n          type='text'\n          value={title}\n          onChange={handleChange}\n          name='title'\n          placeholder='Please add a title'\n          className={styles.FormControl}\n        />\n      </Form.Group>\n      {errors?.title?.map((message, idx) => (\n        <Alert variant='warning' key={idx}>\n          {message}\n        </Alert>\n      ))}\n      <Form.Group>\n        <Form.Label>Your feedback:</Form.Label>\n        <Form.Control\n          as='textarea'\n          rows={6}\n          value={feedback}\n          onChange={handleChange}\n          name='feedback'\n          placeholder='Please add your feedback here (positive feedback is always welcome!)...'\n          className={styles.FormControl}\n        />\n      </Form.Group>\n      {errors?.feedback?.map((message, idx) => (\n        <Alert variant='warning' key={idx}>\n          {message}\n        </Alert>\n      ))}\n    </>\n  );\n\n  return (\n    <Container className={styles.OverflowHidden}>\n      <Container>{warmWelcome}</Container>\n      <Form\n        onSubmit={handleSubmit}\n        style={{ 'margin-bottom': '76px', 'padding-bottom': '10px' }}\n      >\n        <Row>\n          <Col>\n            <Container>{textFields}</Container>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Container>\n              <Form.Group>\n                <Form.Label htmlFor='image-upload'>\n                  Upload an image (optional):\n                </Form.Label>\n                <Form.File\n                  className={styles.TextAlignLast}\n                  id='image-upload'\n                  ref={imageFile}\n                  accept='image/*'\n                  onChange={(e) => {\n                    if (e.target.files.length) {\n                      setfeedbackData({\n                        ...feedbackData,\n                        image: URL.createObjectURL(e.target.files[0]),\n                      });\n                    }\n                  }}\n                />\n                {errors?.image?.map((message, idx) => (\n                  <Alert variant='warning' key={idx}>\n                    {message}\n                  </Alert>\n                ))}\n              </Form.Group>\n            </Container>\n          </Col>\n        </Row>\n        <Button className={btnStyles.Button} onClick={() => history.goBack()}>\n          Cancel\n        </Button>\n        <Button className={btnStyles.Button} type='submit'>\n          Submit\n        </Button>\n        {showSuccess && (\n          <Container className='pt-3'>\n            <Alert\n              variant='success'\n              onClose={() => setShowSuccess(false)}\n              dismissible\n            >\n              Feedback submitted, Thank you! You will be directed back to your\n              profile shortly.\n            </Alert>\n          </Container>\n        )}\n      </Form>\n    </Container>\n  );\n}\n\nexport default FeedbackCreateForm;\n","import styles from './App.module.css';\nimport NavBar from './components/NavBar';\nimport { Route, Switch } from 'react-router-dom';\nimport './api/axiosDefaults';\nimport SignUpForm from './pages/auth/SignUpForm';\nimport SignInForm from './pages/auth/SignInForm';\nimport SpotifySearchPage from './spotify/SpotifySearchPage';\nimport { useCurrentUser } from './contexts/CurrentUserContext';\nimport AccordionWindow from './components/AccordionWindow';\nimport ProfilePage from './pages/ProfilePage';\nimport PlaylistsPage from './pages/PlaylistsPage';\nimport PlaylistDetail from './pages/PlaylistDetail';\nimport PlaylistEditForm from './forms/PlaylistEditForm';\nimport ProfileEditForm from './forms/ProfileEditForm';\nimport '@smastrom/react-rating/style.css';\nimport PageNotFound404 from './pages/PageNotFound404';\nimport Homepage from './pages/Homepage';\nimport FeedbackCreateForm from './forms/FeedbackCreateForm';\n\nfunction App() {\n  const currentUser = useCurrentUser();\n  const profile_id = currentUser?.pk || '';\n\n  return (\n    <div className={styles.App}>\n      <NavBar />\n      <AccordionWindow />\n      <Switch>\n        <Route exact path='/' render={() => <Homepage />} />\n        <Route exact path='/signin' render={() => <SignInForm />} />\n        <Route exact path='/signup' render={() => <SignUpForm />} />\n        <Route exact path='/profile/:userId' render={() => <ProfilePage />} />\n        <Route\n          exact\n          path='/profile/:userId/edit'\n          render={() => <ProfileEditForm />}\n        />\n        <Route\n          exact\n          path='/rated-playlists'\n          render={() => (\n            <PlaylistsPage\n              pageName='All Playlists You Have Rated'\n              filter={`ratings__owner__profile=${profile_id}`}\n            />\n          )}\n        />\n        <Route exact path='/playlist/:id' render={() => <PlaylistDetail />} />\n        <Route\n          exact\n          path='/playlist/:id/edit'\n          render={() => <PlaylistEditForm />}\n        />\n        <Route\n          exact\n          path='/feed'\n          render={() => (\n            <PlaylistsPage\n              pageName='Playlists of Followed Users'\n              filter={`owner__followed_by__owner__profile=${profile_id}`}\n            />\n          )}\n        />\n        <Route\n          exact\n          path='/spotify-search'\n          render={() => <SpotifySearchPage />}\n        />\n        <Route\n          exact\n          path='/global'\n          render={() => <PlaylistsPage pageName='All Playlists' />}\n        />\n        <Route\n          exact\n          path='/feedback/create'\n          render={() => <FeedbackCreateForm />}\n        />\n        <Route render={() => <PageNotFound404 />} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { CurrentUserProvider } from './contexts/CurrentUserContext';\nimport { SpotifyPlayerUriProvider } from './contexts/SpotifyPlayerUriContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CurrentUserProvider>\n      <SpotifyPlayerUriProvider>\n        <Router>\n          <App />\n        </Router>\n      </SpotifyPlayerUriProvider>\n    </CurrentUserProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileContainer\":\"Profile_ProfileContainer__1MhJH\",\"AvatarContainer\":\"Profile_AvatarContainer__314Ah\",\"AvatarStatsContainer\":\"Profile_AvatarStatsContainer__2LRQA\",\"StatsRow\":\"Profile_StatsRow__dTi8j\",\"StatsItem\":\"Profile_StatsItem__1s6Rh\",\"FontAwesomeIcon\":\"Profile_FontAwesomeIcon__1XfKb\",\"ProfileBottomRightIcon\":\"Profile_ProfileBottomRightIcon__gTIrd\",\"ProfileTopRightIcon\":\"Profile_ProfileTopRightIcon__31h-G\",\"SmallText\":\"Profile_SmallText__-iVK2\",\"AlignItemsCenter\":\"Profile_AlignItemsCenter__3z0zF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"EditCreateForms_Container__2DsIC\",\"OverflowHidden\":\"EditCreateForms_OverflowHidden__3fhes\",\"Playlist\":\"EditCreateForms_Playlist__1cGCN\",\"FormGroup\":\"EditCreateForms_FormGroup__1AQPR\",\"FormControl\":\"EditCreateForms_FormControl__U6OqG\",\"TextAlignLast\":\"EditCreateForms_TextAlignLast__3y1Ow\",\"HighlightedContainer\":\"EditCreateForms_HighlightedContainer__3q1wl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__1amC6\",\"Brand\":\"NavBar_Brand__iWmt7\",\"SignInOut\":\"NavBar_SignInOut__3hTFe\",\"MarginRight\":\"NavBar_MarginRight__1UDrv\",\"SignUpIn\":\"NavBar_SignUpIn__3Qj2P\",\"Active\":\"NavBar_Active__3PBZb\",\"ProfileActive\":\"NavBar_ProfileActive__2t0Zs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Row\":\"SignInUpForm_Row__3PbVy\",\"Input\":\"SignInUpForm_Input__3xaLZ\",\"Header\":\"SignInUpForm_Header__3joQJ\",\"Link\":\"SignInUpForm_Link__1BeMm\",\"SignUpCol\":\"SignInUpForm_SignUpCol__28o4y\",\"SignInCol\":\"SignInUpForm_SignInCol__3ImPK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\",\"Content\":\"App_Content__ZaMNr\",\"FillerImage\":\"App_FillerImage__2ob-g\",\"PaddingReset\":\"App_PaddingReset__2Yixf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Centered\":\"LoadingSpinner_Centered__2UoRO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AccordionPosition\":\"AccordionWindow_AccordionPosition__3Pg_2\",\"Header\":\"AccordionWindow_Header__3EVT_\",\"Card\":\"AccordionWindow_Card__RFCw5\",\"PaddingReset\":\"AccordionWindow_PaddingReset__RMqnf\",\"Hidden\":\"AccordionWindow_Hidden__ZcMNb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PlaylistDetail_Container__37TnQ\",\"HighlightedContainer\":\"PlaylistDetail_HighlightedContainer__1Lqrp\",\"RowPadding\":\"PlaylistDetail_RowPadding__2gbU9\",\"WordBreak\":\"PlaylistDetail_WordBreak__3E_Bg\",\"ScreenSizeContidionalPadding\":\"PlaylistDetail_ScreenSizeContidionalPadding__2iVym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Homepage_Container__sxUK-\",\"TitleContainer\":\"Homepage_TitleContainer__rTDdU\",\"Title\":\"Homepage_Title__jDukA\",\"IntroContainer\":\"Homepage_IntroContainer__1pqil\",\"Line\":\"Homepage_Line__3qZsO\",\"SecondLine\":\"Homepage_SecondLine__2Ymv4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DropdownMenu\":\"SearchBar_DropdownMenu__2J2wk\",\"DropdownItem\":\"SearchBar_DropdownItem__3uVVu\",\"InfiniteScroll\":\"SearchBar_InfiniteScroll__1tS1z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"SpotifySearchPage_Container__31uhH\",\"PaddingReset\":\"SpotifySearchPage_PaddingReset__2gaVg\",\"Margin\":\"SpotifySearchPage_Margin__sjI4C\",\"MarginBottom\":\"SpotifySearchPage_MarginBottom__1JwwK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"PlaylistsPage_Container__KgRlF\",\"ProfileContainer\":\"PlaylistsPage_ProfileContainer__1ky5y\",\"HighlightedContainer\":\"PlaylistsPage_HighlightedContainer__3oKHx\",\"Button\":\"PlaylistsPage_Button__2jYpK\",\"InfiniteScroll\":\"PlaylistsPage_InfiniteScroll__1cMqB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"ModalWindow_Header__hiHjJ\",\"Body\":\"ModalWindow_Body__13Mmm\",\"Color\":\"ModalWindow_Color__9jnUe\",\"Footer\":\"ModalWindow_Footer__3oRO7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__27i9m\",\"PaddingReset\":\"Button_PaddingReset__3EaQQ\",\"MarginLeftRight\":\"Button_MarginLeftRight__1wbIa\",\"TransparentButton\":\"Button_TransparentButton__9gW-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Avatar\":\"Avatar_Avatar__196lW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FontAwesomeIcon\":\"SignOutButton_FontAwesomeIcon__WBpEv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"Playlist_Image__2QZQC\"};"],"sourceRoot":""}